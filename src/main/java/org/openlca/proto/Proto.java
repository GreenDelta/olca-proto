// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: olca.proto

package org.openlca.proto;

public final class Proto {
  private Proto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * An enumeration type for allocation methods. This type is used to define the
   * type of an [AllocationFactor], the default allocation method of a
   * multi-functional [Process], or the allocation method in a
   * [CalculationSetup].
   * </pre>
   *
   * Protobuf enum {@code protolca.AllocationType}
   */
  public enum AllocationType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * This default option was added automatically
     * and means that no values was set.
     * </pre>
     *
     * <code>UNDEFINED_ALLOCATION_TYPE = 0;</code>
     */
    UNDEFINED_ALLOCATION_TYPE(0),
    /**
     * <code>PHYSICAL_ALLOCATION = 1;</code>
     */
    PHYSICAL_ALLOCATION(1),
    /**
     * <code>ECONOMIC_ALLOCATION = 2;</code>
     */
    ECONOMIC_ALLOCATION(2),
    /**
     * <code>CAUSAL_ALLOCATION = 3;</code>
     */
    CAUSAL_ALLOCATION(3),
    /**
     * <code>USE_DEFAULT_ALLOCATION = 4;</code>
     */
    USE_DEFAULT_ALLOCATION(4),
    /**
     * <code>NO_ALLOCATION = 5;</code>
     */
    NO_ALLOCATION(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * This default option was added automatically
     * and means that no values was set.
     * </pre>
     *
     * <code>UNDEFINED_ALLOCATION_TYPE = 0;</code>
     */
    public static final int UNDEFINED_ALLOCATION_TYPE_VALUE = 0;
    /**
     * <code>PHYSICAL_ALLOCATION = 1;</code>
     */
    public static final int PHYSICAL_ALLOCATION_VALUE = 1;
    /**
     * <code>ECONOMIC_ALLOCATION = 2;</code>
     */
    public static final int ECONOMIC_ALLOCATION_VALUE = 2;
    /**
     * <code>CAUSAL_ALLOCATION = 3;</code>
     */
    public static final int CAUSAL_ALLOCATION_VALUE = 3;
    /**
     * <code>USE_DEFAULT_ALLOCATION = 4;</code>
     */
    public static final int USE_DEFAULT_ALLOCATION_VALUE = 4;
    /**
     * <code>NO_ALLOCATION = 5;</code>
     */
    public static final int NO_ALLOCATION_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AllocationType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AllocationType forNumber(int value) {
      switch (value) {
        case 0: return UNDEFINED_ALLOCATION_TYPE;
        case 1: return PHYSICAL_ALLOCATION;
        case 2: return ECONOMIC_ALLOCATION;
        case 3: return CAUSAL_ALLOCATION;
        case 4: return USE_DEFAULT_ALLOCATION;
        case 5: return NO_ALLOCATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AllocationType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AllocationType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AllocationType>() {
            public AllocationType findValueByNumber(int number) {
              return AllocationType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.openlca.proto.Proto.getDescriptor().getEnumTypes().get(0);
    }

    private static final AllocationType[] VALUES = values();

    public static AllocationType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AllocationType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protolca.AllocationType)
  }

  /**
   * <pre>
   * An enumeration of the different calculation methods supported by openLCA.
   * </pre>
   *
   * Protobuf enum {@code protolca.CalculationType}
   */
  public enum CalculationType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * This default option was added automatically
     * and means that no values was set.
     * </pre>
     *
     * <code>UNDEFINED_CALCULATION_TYPE = 0;</code>
     */
    UNDEFINED_CALCULATION_TYPE(0),
    /**
     * <pre>
     * Calculates the total results for elementary flows, LCIA indicators, costs,
     * etc. of a product system.
     * </pre>
     *
     * <code>SIMPLE_CALCULATION = 1;</code>
     */
    SIMPLE_CALCULATION(1),
    /**
     * <pre>
     * Includes the total result vectors of a simple calculation but calculates
     * also the direct contributions of each process (or better process product
     * in case of multi-output processes) to these total results.
     * </pre>
     *
     * <code>CONTRIBUTION_ANALYSIS = 2;</code>
     */
    CONTRIBUTION_ANALYSIS(2),
    /**
     * <pre>
     * Extends the contribution analysis by providing also the upstream results
     * of each process (process product) in the product system. The upstream
     * result contains the direct contributions of the respective process but
     * also the result of the supply chain up to this process scaled to the
     * demand of the process in the product system.
     * </pre>
     *
     * <code>UPSTREAM_ANALYSIS = 3;</code>
     */
    UPSTREAM_ANALYSIS(3),
    /**
     * <pre>
     * A regionalized calculation is a contribution analysis but with an LCIA
     * method that supports regionalized characterization factors (via region
     * specific parameters in formulas) and a product system with processes that
     * have geographic information assigned (point, line, or polygon shapes).
     * </pre>
     *
     * <code>REGIONALIZED_CALCULATION = 4;</code>
     */
    REGIONALIZED_CALCULATION(4),
    /**
     * <pre>
     * A Monte Carlo simulation generates for each run, of a given number of a
     * given number of iterations, random values according to the uncertainty
     * distributions of process inputs/outputs, parameters, characterization
     * factors, etc. of a product system and then performs a simple calculation
     * for that specific run.
     * </pre>
     *
     * <code>MONTE_CARLO_SIMULATION = 5;</code>
     */
    MONTE_CARLO_SIMULATION(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * This default option was added automatically
     * and means that no values was set.
     * </pre>
     *
     * <code>UNDEFINED_CALCULATION_TYPE = 0;</code>
     */
    public static final int UNDEFINED_CALCULATION_TYPE_VALUE = 0;
    /**
     * <pre>
     * Calculates the total results for elementary flows, LCIA indicators, costs,
     * etc. of a product system.
     * </pre>
     *
     * <code>SIMPLE_CALCULATION = 1;</code>
     */
    public static final int SIMPLE_CALCULATION_VALUE = 1;
    /**
     * <pre>
     * Includes the total result vectors of a simple calculation but calculates
     * also the direct contributions of each process (or better process product
     * in case of multi-output processes) to these total results.
     * </pre>
     *
     * <code>CONTRIBUTION_ANALYSIS = 2;</code>
     */
    public static final int CONTRIBUTION_ANALYSIS_VALUE = 2;
    /**
     * <pre>
     * Extends the contribution analysis by providing also the upstream results
     * of each process (process product) in the product system. The upstream
     * result contains the direct contributions of the respective process but
     * also the result of the supply chain up to this process scaled to the
     * demand of the process in the product system.
     * </pre>
     *
     * <code>UPSTREAM_ANALYSIS = 3;</code>
     */
    public static final int UPSTREAM_ANALYSIS_VALUE = 3;
    /**
     * <pre>
     * A regionalized calculation is a contribution analysis but with an LCIA
     * method that supports regionalized characterization factors (via region
     * specific parameters in formulas) and a product system with processes that
     * have geographic information assigned (point, line, or polygon shapes).
     * </pre>
     *
     * <code>REGIONALIZED_CALCULATION = 4;</code>
     */
    public static final int REGIONALIZED_CALCULATION_VALUE = 4;
    /**
     * <pre>
     * A Monte Carlo simulation generates for each run, of a given number of a
     * given number of iterations, random values according to the uncertainty
     * distributions of process inputs/outputs, parameters, characterization
     * factors, etc. of a product system and then performs a simple calculation
     * for that specific run.
     * </pre>
     *
     * <code>MONTE_CARLO_SIMULATION = 5;</code>
     */
    public static final int MONTE_CARLO_SIMULATION_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CalculationType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CalculationType forNumber(int value) {
      switch (value) {
        case 0: return UNDEFINED_CALCULATION_TYPE;
        case 1: return SIMPLE_CALCULATION;
        case 2: return CONTRIBUTION_ANALYSIS;
        case 3: return UPSTREAM_ANALYSIS;
        case 4: return REGIONALIZED_CALCULATION;
        case 5: return MONTE_CARLO_SIMULATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CalculationType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CalculationType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CalculationType>() {
            public CalculationType findValueByNumber(int number) {
              return CalculationType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.openlca.proto.Proto.getDescriptor().getEnumTypes().get(1);
    }

    private static final CalculationType[] VALUES = values();

    public static CalculationType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CalculationType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protolca.CalculationType)
  }

  /**
   * <pre>
   * An enumeration of flow property types.
   * </pre>
   *
   * Protobuf enum {@code protolca.FlowPropertyType}
   */
  public enum FlowPropertyType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * This default option was added automatically
     * and means that no values was set.
     * </pre>
     *
     * <code>UNDEFINED_FLOW_PROPERTY_TYPE = 0;</code>
     */
    UNDEFINED_FLOW_PROPERTY_TYPE(0),
    /**
     * <code>ECONOMIC_QUANTITY = 1;</code>
     */
    ECONOMIC_QUANTITY(1),
    /**
     * <code>PHYSICAL_QUANTITY = 2;</code>
     */
    PHYSICAL_QUANTITY(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * This default option was added automatically
     * and means that no values was set.
     * </pre>
     *
     * <code>UNDEFINED_FLOW_PROPERTY_TYPE = 0;</code>
     */
    public static final int UNDEFINED_FLOW_PROPERTY_TYPE_VALUE = 0;
    /**
     * <code>ECONOMIC_QUANTITY = 1;</code>
     */
    public static final int ECONOMIC_QUANTITY_VALUE = 1;
    /**
     * <code>PHYSICAL_QUANTITY = 2;</code>
     */
    public static final int PHYSICAL_QUANTITY_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FlowPropertyType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static FlowPropertyType forNumber(int value) {
      switch (value) {
        case 0: return UNDEFINED_FLOW_PROPERTY_TYPE;
        case 1: return ECONOMIC_QUANTITY;
        case 2: return PHYSICAL_QUANTITY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FlowPropertyType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FlowPropertyType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FlowPropertyType>() {
            public FlowPropertyType findValueByNumber(int number) {
              return FlowPropertyType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.openlca.proto.Proto.getDescriptor().getEnumTypes().get(2);
    }

    private static final FlowPropertyType[] VALUES = values();

    public static FlowPropertyType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FlowPropertyType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protolca.FlowPropertyType)
  }

  /**
   * <pre>
   * The basic flow types.
   * </pre>
   *
   * Protobuf enum {@code protolca.FlowType}
   */
  public enum FlowType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * This default option was added automatically
     * and means that no values was set.
     * </pre>
     *
     * <code>UNDEFINED_FLOW_TYPE = 0;</code>
     */
    UNDEFINED_FLOW_TYPE(0),
    /**
     * <code>ELEMENTARY_FLOW = 1;</code>
     */
    ELEMENTARY_FLOW(1),
    /**
     * <code>PRODUCT_FLOW = 2;</code>
     */
    PRODUCT_FLOW(2),
    /**
     * <code>WASTE_FLOW = 3;</code>
     */
    WASTE_FLOW(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * This default option was added automatically
     * and means that no values was set.
     * </pre>
     *
     * <code>UNDEFINED_FLOW_TYPE = 0;</code>
     */
    public static final int UNDEFINED_FLOW_TYPE_VALUE = 0;
    /**
     * <code>ELEMENTARY_FLOW = 1;</code>
     */
    public static final int ELEMENTARY_FLOW_VALUE = 1;
    /**
     * <code>PRODUCT_FLOW = 2;</code>
     */
    public static final int PRODUCT_FLOW_VALUE = 2;
    /**
     * <code>WASTE_FLOW = 3;</code>
     */
    public static final int WASTE_FLOW_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FlowType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static FlowType forNumber(int value) {
      switch (value) {
        case 0: return UNDEFINED_FLOW_TYPE;
        case 1: return ELEMENTARY_FLOW;
        case 2: return PRODUCT_FLOW;
        case 3: return WASTE_FLOW;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FlowType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FlowType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FlowType>() {
            public FlowType findValueByNumber(int number) {
              return FlowType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.openlca.proto.Proto.getDescriptor().getEnumTypes().get(3);
    }

    private static final FlowType[] VALUES = values();

    public static FlowType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FlowType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protolca.FlowType)
  }

  /**
   * <pre>
   * An enumeration of the root entity types.
   * </pre>
   *
   * Protobuf enum {@code protolca.ModelType}
   */
  public enum ModelType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * This default option was added automatically
     * and means that no values was set.
     * </pre>
     *
     * <code>UNDEFINED_MODEL_TYPE = 0;</code>
     */
    UNDEFINED_MODEL_TYPE(0),
    /**
     * <code>PROJECT = 1;</code>
     */
    PROJECT(1),
    /**
     * <code>IMPACT_METHOD = 2;</code>
     */
    IMPACT_METHOD(2),
    /**
     * <code>IMPACT_CATEGORY = 3;</code>
     */
    IMPACT_CATEGORY(3),
    /**
     * <code>PRODUCT_SYSTEM = 4;</code>
     */
    PRODUCT_SYSTEM(4),
    /**
     * <code>PROCESS = 5;</code>
     */
    PROCESS(5),
    /**
     * <code>FLOW = 6;</code>
     */
    FLOW(6),
    /**
     * <code>FLOW_PROPERTY = 7;</code>
     */
    FLOW_PROPERTY(7),
    /**
     * <code>UNIT_GROUP = 8;</code>
     */
    UNIT_GROUP(8),
    /**
     * <code>UNIT = 9;</code>
     */
    UNIT(9),
    /**
     * <code>ACTOR = 10;</code>
     */
    ACTOR(10),
    /**
     * <code>SOURCE = 11;</code>
     */
    SOURCE(11),
    /**
     * <code>CATEGORY = 12;</code>
     */
    CATEGORY(12),
    /**
     * <code>LOCATION = 13;</code>
     */
    LOCATION(13),
    /**
     * <code>NW_SET = 14;</code>
     */
    NW_SET(14),
    /**
     * <code>SOCIAL_INDICATOR = 15;</code>
     */
    SOCIAL_INDICATOR(15),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * This default option was added automatically
     * and means that no values was set.
     * </pre>
     *
     * <code>UNDEFINED_MODEL_TYPE = 0;</code>
     */
    public static final int UNDEFINED_MODEL_TYPE_VALUE = 0;
    /**
     * <code>PROJECT = 1;</code>
     */
    public static final int PROJECT_VALUE = 1;
    /**
     * <code>IMPACT_METHOD = 2;</code>
     */
    public static final int IMPACT_METHOD_VALUE = 2;
    /**
     * <code>IMPACT_CATEGORY = 3;</code>
     */
    public static final int IMPACT_CATEGORY_VALUE = 3;
    /**
     * <code>PRODUCT_SYSTEM = 4;</code>
     */
    public static final int PRODUCT_SYSTEM_VALUE = 4;
    /**
     * <code>PROCESS = 5;</code>
     */
    public static final int PROCESS_VALUE = 5;
    /**
     * <code>FLOW = 6;</code>
     */
    public static final int FLOW_VALUE = 6;
    /**
     * <code>FLOW_PROPERTY = 7;</code>
     */
    public static final int FLOW_PROPERTY_VALUE = 7;
    /**
     * <code>UNIT_GROUP = 8;</code>
     */
    public static final int UNIT_GROUP_VALUE = 8;
    /**
     * <code>UNIT = 9;</code>
     */
    public static final int UNIT_VALUE = 9;
    /**
     * <code>ACTOR = 10;</code>
     */
    public static final int ACTOR_VALUE = 10;
    /**
     * <code>SOURCE = 11;</code>
     */
    public static final int SOURCE_VALUE = 11;
    /**
     * <code>CATEGORY = 12;</code>
     */
    public static final int CATEGORY_VALUE = 12;
    /**
     * <code>LOCATION = 13;</code>
     */
    public static final int LOCATION_VALUE = 13;
    /**
     * <code>NW_SET = 14;</code>
     */
    public static final int NW_SET_VALUE = 14;
    /**
     * <code>SOCIAL_INDICATOR = 15;</code>
     */
    public static final int SOCIAL_INDICATOR_VALUE = 15;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ModelType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ModelType forNumber(int value) {
      switch (value) {
        case 0: return UNDEFINED_MODEL_TYPE;
        case 1: return PROJECT;
        case 2: return IMPACT_METHOD;
        case 3: return IMPACT_CATEGORY;
        case 4: return PRODUCT_SYSTEM;
        case 5: return PROCESS;
        case 6: return FLOW;
        case 7: return FLOW_PROPERTY;
        case 8: return UNIT_GROUP;
        case 9: return UNIT;
        case 10: return ACTOR;
        case 11: return SOURCE;
        case 12: return CATEGORY;
        case 13: return LOCATION;
        case 14: return NW_SET;
        case 15: return SOCIAL_INDICATOR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ModelType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ModelType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ModelType>() {
            public ModelType findValueByNumber(int number) {
              return ModelType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.openlca.proto.Proto.getDescriptor().getEnumTypes().get(4);
    }

    private static final ModelType[] VALUES = values();

    public static ModelType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ModelType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protolca.ModelType)
  }

  /**
   * <pre>
   * The possible scopes of parameters.
   * </pre>
   *
   * Protobuf enum {@code protolca.ParameterScope}
   */
  public enum ParameterScope
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * This default option was added automatically
     * and means that no values was set.
     * </pre>
     *
     * <code>UNDEFINED_PARAMETER_SCOPE = 0;</code>
     */
    UNDEFINED_PARAMETER_SCOPE(0),
    /**
     * <code>PROCESS_SCOPE = 1;</code>
     */
    PROCESS_SCOPE(1),
    /**
     * <code>LCIA_METHOD_SCOPE = 2;</code>
     */
    LCIA_METHOD_SCOPE(2),
    /**
     * <code>GLOBAL_SCOPE = 3;</code>
     */
    GLOBAL_SCOPE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * This default option was added automatically
     * and means that no values was set.
     * </pre>
     *
     * <code>UNDEFINED_PARAMETER_SCOPE = 0;</code>
     */
    public static final int UNDEFINED_PARAMETER_SCOPE_VALUE = 0;
    /**
     * <code>PROCESS_SCOPE = 1;</code>
     */
    public static final int PROCESS_SCOPE_VALUE = 1;
    /**
     * <code>LCIA_METHOD_SCOPE = 2;</code>
     */
    public static final int LCIA_METHOD_SCOPE_VALUE = 2;
    /**
     * <code>GLOBAL_SCOPE = 3;</code>
     */
    public static final int GLOBAL_SCOPE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ParameterScope valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ParameterScope forNumber(int value) {
      switch (value) {
        case 0: return UNDEFINED_PARAMETER_SCOPE;
        case 1: return PROCESS_SCOPE;
        case 2: return LCIA_METHOD_SCOPE;
        case 3: return GLOBAL_SCOPE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ParameterScope>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ParameterScope> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ParameterScope>() {
            public ParameterScope findValueByNumber(int number) {
              return ParameterScope.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.openlca.proto.Proto.getDescriptor().getEnumTypes().get(5);
    }

    private static final ParameterScope[] VALUES = values();

    public static ParameterScope valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ParameterScope(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protolca.ParameterScope)
  }

  /**
   * Protobuf enum {@code protolca.ProcessType}
   */
  public enum ProcessType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * This default option was added automatically
     * and means that no values was set.
     * </pre>
     *
     * <code>UNDEFINED_PROCESS_TYPE = 0;</code>
     */
    UNDEFINED_PROCESS_TYPE(0),
    /**
     * <code>LCI_RESULT = 1;</code>
     */
    LCI_RESULT(1),
    /**
     * <code>UNIT_PROCESS = 2;</code>
     */
    UNIT_PROCESS(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * This default option was added automatically
     * and means that no values was set.
     * </pre>
     *
     * <code>UNDEFINED_PROCESS_TYPE = 0;</code>
     */
    public static final int UNDEFINED_PROCESS_TYPE_VALUE = 0;
    /**
     * <code>LCI_RESULT = 1;</code>
     */
    public static final int LCI_RESULT_VALUE = 1;
    /**
     * <code>UNIT_PROCESS = 2;</code>
     */
    public static final int UNIT_PROCESS_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ProcessType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ProcessType forNumber(int value) {
      switch (value) {
        case 0: return UNDEFINED_PROCESS_TYPE;
        case 1: return LCI_RESULT;
        case 2: return UNIT_PROCESS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ProcessType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ProcessType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ProcessType>() {
            public ProcessType findValueByNumber(int number) {
              return ProcessType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.openlca.proto.Proto.getDescriptor().getEnumTypes().get(6);
    }

    private static final ProcessType[] VALUES = values();

    public static ProcessType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ProcessType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protolca.ProcessType)
  }

  /**
   * <pre>
   * Enumeration of uncertainty distribution types that can be used in exchanges,
   * parameters, LCIA factors, etc.
   * </pre>
   *
   * Protobuf enum {@code protolca.UncertaintyType}
   */
  public enum UncertaintyType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * This default option was added automatically
     * and means that no values was set.
     * </pre>
     *
     * <code>UNDEFINED_UNCERTAINTY_TYPE = 0;</code>
     */
    UNDEFINED_UNCERTAINTY_TYPE(0),
    /**
     * <code>LOG_NORMAL_DISTRIBUTION = 1;</code>
     */
    LOG_NORMAL_DISTRIBUTION(1),
    /**
     * <code>NORMAL_DISTRIBUTION = 2;</code>
     */
    NORMAL_DISTRIBUTION(2),
    /**
     * <code>TRIANGLE_DISTRIBUTION = 3;</code>
     */
    TRIANGLE_DISTRIBUTION(3),
    /**
     * <code>UNIFORM_DISTRIBUTION = 4;</code>
     */
    UNIFORM_DISTRIBUTION(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * This default option was added automatically
     * and means that no values was set.
     * </pre>
     *
     * <code>UNDEFINED_UNCERTAINTY_TYPE = 0;</code>
     */
    public static final int UNDEFINED_UNCERTAINTY_TYPE_VALUE = 0;
    /**
     * <code>LOG_NORMAL_DISTRIBUTION = 1;</code>
     */
    public static final int LOG_NORMAL_DISTRIBUTION_VALUE = 1;
    /**
     * <code>NORMAL_DISTRIBUTION = 2;</code>
     */
    public static final int NORMAL_DISTRIBUTION_VALUE = 2;
    /**
     * <code>TRIANGLE_DISTRIBUTION = 3;</code>
     */
    public static final int TRIANGLE_DISTRIBUTION_VALUE = 3;
    /**
     * <code>UNIFORM_DISTRIBUTION = 4;</code>
     */
    public static final int UNIFORM_DISTRIBUTION_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UncertaintyType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UncertaintyType forNumber(int value) {
      switch (value) {
        case 0: return UNDEFINED_UNCERTAINTY_TYPE;
        case 1: return LOG_NORMAL_DISTRIBUTION;
        case 2: return NORMAL_DISTRIBUTION;
        case 3: return TRIANGLE_DISTRIBUTION;
        case 4: return UNIFORM_DISTRIBUTION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UncertaintyType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UncertaintyType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UncertaintyType>() {
            public UncertaintyType findValueByNumber(int number) {
              return UncertaintyType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.openlca.proto.Proto.getDescriptor().getEnumTypes().get(7);
    }

    private static final UncertaintyType[] VALUES = values();

    public static UncertaintyType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UncertaintyType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protolca.UncertaintyType)
  }

  public interface ActorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.Actor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    boolean hasCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    org.openlca.proto.Proto.Ref getCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder();

    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    java.util.List<java.lang.String>
        getTagsList();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    int getTagsCount();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    java.lang.String getTags(int index);
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);

    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    java.lang.String getLibrary();
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    com.google.protobuf.ByteString
        getLibraryBytes();

    /**
     * <code>string address = 10;</code>
     * @return The address.
     */
    java.lang.String getAddress();
    /**
     * <code>string address = 10;</code>
     * @return The bytes for address.
     */
    com.google.protobuf.ByteString
        getAddressBytes();

    /**
     * <code>string city = 11;</code>
     * @return The city.
     */
    java.lang.String getCity();
    /**
     * <code>string city = 11;</code>
     * @return The bytes for city.
     */
    com.google.protobuf.ByteString
        getCityBytes();

    /**
     * <code>string country = 12;</code>
     * @return The country.
     */
    java.lang.String getCountry();
    /**
     * <code>string country = 12;</code>
     * @return The bytes for country.
     */
    com.google.protobuf.ByteString
        getCountryBytes();

    /**
     * <code>string email = 13;</code>
     * @return The email.
     */
    java.lang.String getEmail();
    /**
     * <code>string email = 13;</code>
     * @return The bytes for email.
     */
    com.google.protobuf.ByteString
        getEmailBytes();

    /**
     * <code>string telefax = 14;</code>
     * @return The telefax.
     */
    java.lang.String getTelefax();
    /**
     * <code>string telefax = 14;</code>
     * @return The bytes for telefax.
     */
    com.google.protobuf.ByteString
        getTelefaxBytes();

    /**
     * <code>string telephone = 15;</code>
     * @return The telephone.
     */
    java.lang.String getTelephone();
    /**
     * <code>string telephone = 15;</code>
     * @return The bytes for telephone.
     */
    com.google.protobuf.ByteString
        getTelephoneBytes();

    /**
     * <code>string website = 16;</code>
     * @return The website.
     */
    java.lang.String getWebsite();
    /**
     * <code>string website = 16;</code>
     * @return The bytes for website.
     */
    com.google.protobuf.ByteString
        getWebsiteBytes();

    /**
     * <code>string zip_code = 17;</code>
     * @return The zipCode.
     */
    java.lang.String getZipCode();
    /**
     * <code>string zip_code = 17;</code>
     * @return The bytes for zipCode.
     */
    com.google.protobuf.ByteString
        getZipCodeBytes();
  }
  /**
   * <pre>
   * An actor is a person or organisation.
   * </pre>
   *
   * Protobuf type {@code protolca.Actor}
   */
  public static final class Actor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.Actor)
      ActorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Actor.newBuilder() to construct.
    private Actor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Actor() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      library_ = "";
      address_ = "";
      city_ = "";
      country_ = "";
      email_ = "";
      telefax_ = "";
      telephone_ = "";
      website_ = "";
      zipCode_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Actor();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Actor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (category_ != null) {
                subBuilder = category_.toBuilder();
              }
              category_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(category_);
                category_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tags_.add(s);
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              library_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              address_ = s;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              city_ = s;
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              country_ = s;
              break;
            }
            case 106: {
              java.lang.String s = input.readStringRequireUtf8();

              email_ = s;
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();

              telefax_ = s;
              break;
            }
            case 122: {
              java.lang.String s = input.readStringRequireUtf8();

              telephone_ = s;
              break;
            }
            case 130: {
              java.lang.String s = input.readStringRequireUtf8();

              website_ = s;
              break;
            }
            case 138: {
              java.lang.String s = input.readStringRequireUtf8();

              zipCode_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_Actor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_Actor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.Actor.class, org.openlca.proto.Proto.Actor.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.Ref category_;
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    @java.lang.Override
    public boolean hasCategory() {
      return category_ != null;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getCategory() {
      return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
      return getCategory();
    }

    public static final int TAGS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    public static final int LIBRARY_FIELD_NUMBER = 9;
    private volatile java.lang.Object library_;
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    @java.lang.Override
    public java.lang.String getLibrary() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        library_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLibraryBytes() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        library_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ADDRESS_FIELD_NUMBER = 10;
    private volatile java.lang.Object address_;
    /**
     * <code>string address = 10;</code>
     * @return The address.
     */
    @java.lang.Override
    public java.lang.String getAddress() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        address_ = s;
        return s;
      }
    }
    /**
     * <code>string address = 10;</code>
     * @return The bytes for address.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CITY_FIELD_NUMBER = 11;
    private volatile java.lang.Object city_;
    /**
     * <code>string city = 11;</code>
     * @return The city.
     */
    @java.lang.Override
    public java.lang.String getCity() {
      java.lang.Object ref = city_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        city_ = s;
        return s;
      }
    }
    /**
     * <code>string city = 11;</code>
     * @return The bytes for city.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCityBytes() {
      java.lang.Object ref = city_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        city_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COUNTRY_FIELD_NUMBER = 12;
    private volatile java.lang.Object country_;
    /**
     * <code>string country = 12;</code>
     * @return The country.
     */
    @java.lang.Override
    public java.lang.String getCountry() {
      java.lang.Object ref = country_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        country_ = s;
        return s;
      }
    }
    /**
     * <code>string country = 12;</code>
     * @return The bytes for country.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCountryBytes() {
      java.lang.Object ref = country_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        country_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EMAIL_FIELD_NUMBER = 13;
    private volatile java.lang.Object email_;
    /**
     * <code>string email = 13;</code>
     * @return The email.
     */
    @java.lang.Override
    public java.lang.String getEmail() {
      java.lang.Object ref = email_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        email_ = s;
        return s;
      }
    }
    /**
     * <code>string email = 13;</code>
     * @return The bytes for email.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEmailBytes() {
      java.lang.Object ref = email_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        email_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TELEFAX_FIELD_NUMBER = 14;
    private volatile java.lang.Object telefax_;
    /**
     * <code>string telefax = 14;</code>
     * @return The telefax.
     */
    @java.lang.Override
    public java.lang.String getTelefax() {
      java.lang.Object ref = telefax_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        telefax_ = s;
        return s;
      }
    }
    /**
     * <code>string telefax = 14;</code>
     * @return The bytes for telefax.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTelefaxBytes() {
      java.lang.Object ref = telefax_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        telefax_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TELEPHONE_FIELD_NUMBER = 15;
    private volatile java.lang.Object telephone_;
    /**
     * <code>string telephone = 15;</code>
     * @return The telephone.
     */
    @java.lang.Override
    public java.lang.String getTelephone() {
      java.lang.Object ref = telephone_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        telephone_ = s;
        return s;
      }
    }
    /**
     * <code>string telephone = 15;</code>
     * @return The bytes for telephone.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTelephoneBytes() {
      java.lang.Object ref = telephone_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        telephone_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WEBSITE_FIELD_NUMBER = 16;
    private volatile java.lang.Object website_;
    /**
     * <code>string website = 16;</code>
     * @return The website.
     */
    @java.lang.Override
    public java.lang.String getWebsite() {
      java.lang.Object ref = website_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        website_ = s;
        return s;
      }
    }
    /**
     * <code>string website = 16;</code>
     * @return The bytes for website.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getWebsiteBytes() {
      java.lang.Object ref = website_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        website_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ZIP_CODE_FIELD_NUMBER = 17;
    private volatile java.lang.Object zipCode_;
    /**
     * <code>string zip_code = 17;</code>
     * @return The zipCode.
     */
    @java.lang.Override
    public java.lang.String getZipCode() {
      java.lang.Object ref = zipCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        zipCode_ = s;
        return s;
      }
    }
    /**
     * <code>string zip_code = 17;</code>
     * @return The bytes for zipCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getZipCodeBytes() {
      java.lang.Object ref = zipCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        zipCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (category_ != null) {
        output.writeMessage(7, getCategory());
      }
      for (int i = 0; i < tags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, tags_.getRaw(i));
      }
      if (!getLibraryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, library_);
      }
      if (!getAddressBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, address_);
      }
      if (!getCityBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, city_);
      }
      if (!getCountryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, country_);
      }
      if (!getEmailBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, email_);
      }
      if (!getTelefaxBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, telefax_);
      }
      if (!getTelephoneBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, telephone_);
      }
      if (!getWebsiteBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 16, website_);
      }
      if (!getZipCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 17, zipCode_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (category_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCategory());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += computeStringSizeNoTag(tags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      if (!getLibraryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, library_);
      }
      if (!getAddressBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, address_);
      }
      if (!getCityBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, city_);
      }
      if (!getCountryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, country_);
      }
      if (!getEmailBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, email_);
      }
      if (!getTelefaxBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, telefax_);
      }
      if (!getTelephoneBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, telephone_);
      }
      if (!getWebsiteBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, website_);
      }
      if (!getZipCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, zipCode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.Actor)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.Actor other = (org.openlca.proto.Proto.Actor) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (hasCategory() != other.hasCategory()) return false;
      if (hasCategory()) {
        if (!getCategory()
            .equals(other.getCategory())) return false;
      }
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (!getLibrary()
          .equals(other.getLibrary())) return false;
      if (!getAddress()
          .equals(other.getAddress())) return false;
      if (!getCity()
          .equals(other.getCity())) return false;
      if (!getCountry()
          .equals(other.getCountry())) return false;
      if (!getEmail()
          .equals(other.getEmail())) return false;
      if (!getTelefax()
          .equals(other.getTelefax())) return false;
      if (!getTelephone()
          .equals(other.getTelephone())) return false;
      if (!getWebsite()
          .equals(other.getWebsite())) return false;
      if (!getZipCode()
          .equals(other.getZipCode())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (hasCategory()) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategory().hashCode();
      }
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibrary().hashCode();
      hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getAddress().hashCode();
      hash = (37 * hash) + CITY_FIELD_NUMBER;
      hash = (53 * hash) + getCity().hashCode();
      hash = (37 * hash) + COUNTRY_FIELD_NUMBER;
      hash = (53 * hash) + getCountry().hashCode();
      hash = (37 * hash) + EMAIL_FIELD_NUMBER;
      hash = (53 * hash) + getEmail().hashCode();
      hash = (37 * hash) + TELEFAX_FIELD_NUMBER;
      hash = (53 * hash) + getTelefax().hashCode();
      hash = (37 * hash) + TELEPHONE_FIELD_NUMBER;
      hash = (53 * hash) + getTelephone().hashCode();
      hash = (37 * hash) + WEBSITE_FIELD_NUMBER;
      hash = (53 * hash) + getWebsite().hashCode();
      hash = (37 * hash) + ZIP_CODE_FIELD_NUMBER;
      hash = (53 * hash) + getZipCode().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.Actor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Actor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Actor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Actor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Actor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Actor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Actor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Actor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Actor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Actor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Actor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Actor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.Actor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * An actor is a person or organisation.
     * </pre>
     *
     * Protobuf type {@code protolca.Actor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.Actor)
        org.openlca.proto.Proto.ActorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_Actor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_Actor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.Actor.class, org.openlca.proto.Proto.Actor.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.Actor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        if (categoryBuilder_ == null) {
          category_ = null;
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        library_ = "";

        address_ = "";

        city_ = "";

        country_ = "";

        email_ = "";

        telefax_ = "";

        telephone_ = "";

        website_ = "";

        zipCode_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_Actor_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Actor getDefaultInstanceForType() {
        return org.openlca.proto.Proto.Actor.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Actor build() {
        org.openlca.proto.Proto.Actor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Actor buildPartial() {
        org.openlca.proto.Proto.Actor result = new org.openlca.proto.Proto.Actor(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (categoryBuilder_ == null) {
          result.category_ = category_;
        } else {
          result.category_ = categoryBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tags_ = tags_;
        result.library_ = library_;
        result.address_ = address_;
        result.city_ = city_;
        result.country_ = country_;
        result.email_ = email_;
        result.telefax_ = telefax_;
        result.telephone_ = telephone_;
        result.website_ = website_;
        result.zipCode_ = zipCode_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.Actor) {
          return mergeFrom((org.openlca.proto.Proto.Actor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.Actor other) {
        if (other == org.openlca.proto.Proto.Actor.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.hasCategory()) {
          mergeCategory(other.getCategory());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        if (!other.getLibrary().isEmpty()) {
          library_ = other.library_;
          onChanged();
        }
        if (!other.getAddress().isEmpty()) {
          address_ = other.address_;
          onChanged();
        }
        if (!other.getCity().isEmpty()) {
          city_ = other.city_;
          onChanged();
        }
        if (!other.getCountry().isEmpty()) {
          country_ = other.country_;
          onChanged();
        }
        if (!other.getEmail().isEmpty()) {
          email_ = other.email_;
          onChanged();
        }
        if (!other.getTelefax().isEmpty()) {
          telefax_ = other.telefax_;
          onChanged();
        }
        if (!other.getTelephone().isEmpty()) {
          telephone_ = other.telephone_;
          onChanged();
        }
        if (!other.getWebsite().isEmpty()) {
          website_ = other.website_;
          onChanged();
        }
        if (!other.getZipCode().isEmpty()) {
          zipCode_ = other.zipCode_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.Actor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.Actor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref category_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> categoryBuilder_;
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return Whether the category field is set.
       */
      public boolean hasCategory() {
        return categoryBuilder_ != null || category_ != null;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return The category.
       */
      public org.openlca.proto.Proto.Ref getCategory() {
        if (categoryBuilder_ == null) {
          return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        } else {
          return categoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          category_ = value;
          onChanged();
        } else {
          categoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          category_ = builderForValue.build();
          onChanged();
        } else {
          categoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder mergeCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (category_ != null) {
            category_ =
              org.openlca.proto.Proto.Ref.newBuilder(category_).mergeFrom(value).buildPartial();
          } else {
            category_ = value;
          }
          onChanged();
        } else {
          categoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder clearCategory() {
        if (categoryBuilder_ == null) {
          category_ = null;
          onChanged();
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getCategoryBuilder() {
        
        onChanged();
        return getCategoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
        if (categoryBuilder_ != null) {
          return categoryBuilder_.getMessageOrBuilder();
        } else {
          return category_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getCategoryFieldBuilder() {
        if (categoryBuilder_ == null) {
          categoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getCategory(),
                  getParentForChildren(),
                  isClean());
          category_ = null;
        }
        return categoryBuilder_;
      }

      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return A list containing the tags.
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return The count of tags.
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the element to return.
       * @return The tags at the given index.
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tags at the given index.
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index to set the value at.
       * @param value The tags to set.
       * @return This builder for chaining.
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The tags to add.
       * @return This builder for chaining.
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param values The tags to add.
       * @return This builder for chaining.
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The bytes of the tags to add.
       * @return This builder for chaining.
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object library_ = "";
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The library.
       */
      public java.lang.String getLibrary() {
        java.lang.Object ref = library_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          library_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The bytes for library.
       */
      public com.google.protobuf.ByteString
          getLibraryBytes() {
        java.lang.Object ref = library_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          library_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The library to set.
       * @return This builder for chaining.
       */
      public Builder setLibrary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        library_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLibrary() {
        
        library_ = getDefaultInstance().getLibrary();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The bytes for library to set.
       * @return This builder for chaining.
       */
      public Builder setLibraryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        library_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object address_ = "";
      /**
       * <code>string address = 10;</code>
       * @return The address.
       */
      public java.lang.String getAddress() {
        java.lang.Object ref = address_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          address_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string address = 10;</code>
       * @return The bytes for address.
       */
      public com.google.protobuf.ByteString
          getAddressBytes() {
        java.lang.Object ref = address_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          address_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string address = 10;</code>
       * @param value The address to set.
       * @return This builder for chaining.
       */
      public Builder setAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        address_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string address = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearAddress() {
        
        address_ = getDefaultInstance().getAddress();
        onChanged();
        return this;
      }
      /**
       * <code>string address = 10;</code>
       * @param value The bytes for address to set.
       * @return This builder for chaining.
       */
      public Builder setAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        address_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object city_ = "";
      /**
       * <code>string city = 11;</code>
       * @return The city.
       */
      public java.lang.String getCity() {
        java.lang.Object ref = city_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          city_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string city = 11;</code>
       * @return The bytes for city.
       */
      public com.google.protobuf.ByteString
          getCityBytes() {
        java.lang.Object ref = city_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          city_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string city = 11;</code>
       * @param value The city to set.
       * @return This builder for chaining.
       */
      public Builder setCity(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        city_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string city = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearCity() {
        
        city_ = getDefaultInstance().getCity();
        onChanged();
        return this;
      }
      /**
       * <code>string city = 11;</code>
       * @param value The bytes for city to set.
       * @return This builder for chaining.
       */
      public Builder setCityBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        city_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object country_ = "";
      /**
       * <code>string country = 12;</code>
       * @return The country.
       */
      public java.lang.String getCountry() {
        java.lang.Object ref = country_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          country_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string country = 12;</code>
       * @return The bytes for country.
       */
      public com.google.protobuf.ByteString
          getCountryBytes() {
        java.lang.Object ref = country_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          country_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string country = 12;</code>
       * @param value The country to set.
       * @return This builder for chaining.
       */
      public Builder setCountry(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        country_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string country = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearCountry() {
        
        country_ = getDefaultInstance().getCountry();
        onChanged();
        return this;
      }
      /**
       * <code>string country = 12;</code>
       * @param value The bytes for country to set.
       * @return This builder for chaining.
       */
      public Builder setCountryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        country_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object email_ = "";
      /**
       * <code>string email = 13;</code>
       * @return The email.
       */
      public java.lang.String getEmail() {
        java.lang.Object ref = email_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          email_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string email = 13;</code>
       * @return The bytes for email.
       */
      public com.google.protobuf.ByteString
          getEmailBytes() {
        java.lang.Object ref = email_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          email_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string email = 13;</code>
       * @param value The email to set.
       * @return This builder for chaining.
       */
      public Builder setEmail(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        email_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string email = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearEmail() {
        
        email_ = getDefaultInstance().getEmail();
        onChanged();
        return this;
      }
      /**
       * <code>string email = 13;</code>
       * @param value The bytes for email to set.
       * @return This builder for chaining.
       */
      public Builder setEmailBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        email_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object telefax_ = "";
      /**
       * <code>string telefax = 14;</code>
       * @return The telefax.
       */
      public java.lang.String getTelefax() {
        java.lang.Object ref = telefax_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          telefax_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string telefax = 14;</code>
       * @return The bytes for telefax.
       */
      public com.google.protobuf.ByteString
          getTelefaxBytes() {
        java.lang.Object ref = telefax_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          telefax_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string telefax = 14;</code>
       * @param value The telefax to set.
       * @return This builder for chaining.
       */
      public Builder setTelefax(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        telefax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string telefax = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearTelefax() {
        
        telefax_ = getDefaultInstance().getTelefax();
        onChanged();
        return this;
      }
      /**
       * <code>string telefax = 14;</code>
       * @param value The bytes for telefax to set.
       * @return This builder for chaining.
       */
      public Builder setTelefaxBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        telefax_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object telephone_ = "";
      /**
       * <code>string telephone = 15;</code>
       * @return The telephone.
       */
      public java.lang.String getTelephone() {
        java.lang.Object ref = telephone_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          telephone_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string telephone = 15;</code>
       * @return The bytes for telephone.
       */
      public com.google.protobuf.ByteString
          getTelephoneBytes() {
        java.lang.Object ref = telephone_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          telephone_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string telephone = 15;</code>
       * @param value The telephone to set.
       * @return This builder for chaining.
       */
      public Builder setTelephone(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        telephone_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string telephone = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearTelephone() {
        
        telephone_ = getDefaultInstance().getTelephone();
        onChanged();
        return this;
      }
      /**
       * <code>string telephone = 15;</code>
       * @param value The bytes for telephone to set.
       * @return This builder for chaining.
       */
      public Builder setTelephoneBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        telephone_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object website_ = "";
      /**
       * <code>string website = 16;</code>
       * @return The website.
       */
      public java.lang.String getWebsite() {
        java.lang.Object ref = website_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          website_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string website = 16;</code>
       * @return The bytes for website.
       */
      public com.google.protobuf.ByteString
          getWebsiteBytes() {
        java.lang.Object ref = website_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          website_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string website = 16;</code>
       * @param value The website to set.
       * @return This builder for chaining.
       */
      public Builder setWebsite(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        website_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string website = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearWebsite() {
        
        website_ = getDefaultInstance().getWebsite();
        onChanged();
        return this;
      }
      /**
       * <code>string website = 16;</code>
       * @param value The bytes for website to set.
       * @return This builder for chaining.
       */
      public Builder setWebsiteBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        website_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object zipCode_ = "";
      /**
       * <code>string zip_code = 17;</code>
       * @return The zipCode.
       */
      public java.lang.String getZipCode() {
        java.lang.Object ref = zipCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          zipCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string zip_code = 17;</code>
       * @return The bytes for zipCode.
       */
      public com.google.protobuf.ByteString
          getZipCodeBytes() {
        java.lang.Object ref = zipCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          zipCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string zip_code = 17;</code>
       * @param value The zipCode to set.
       * @return This builder for chaining.
       */
      public Builder setZipCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        zipCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string zip_code = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearZipCode() {
        
        zipCode_ = getDefaultInstance().getZipCode();
        onChanged();
        return this;
      }
      /**
       * <code>string zip_code = 17;</code>
       * @param value The bytes for zipCode to set.
       * @return This builder for chaining.
       */
      public Builder setZipCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        zipCode_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.Actor)
    }

    // @@protoc_insertion_point(class_scope:protolca.Actor)
    private static final org.openlca.proto.Proto.Actor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.Actor();
    }

    public static org.openlca.proto.Proto.Actor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Actor>
        PARSER = new com.google.protobuf.AbstractParser<Actor>() {
      @java.lang.Override
      public Actor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Actor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Actor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Actor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.Actor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AllocationFactorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.AllocationFactor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The output product.
     * </pre>
     *
     * <code>.protolca.Exchange product_exchange = 2;</code>
     * @return Whether the productExchange field is set.
     */
    boolean hasProductExchange();
    /**
     * <pre>
     * The output product.
     * </pre>
     *
     * <code>.protolca.Exchange product_exchange = 2;</code>
     * @return The productExchange.
     */
    org.openlca.proto.Proto.Exchange getProductExchange();
    /**
     * <pre>
     * The output product.
     * </pre>
     *
     * <code>.protolca.Exchange product_exchange = 2;</code>
     */
    org.openlca.proto.Proto.ExchangeOrBuilder getProductExchangeOrBuilder();

    /**
     * <pre>
     * The type of allocation.
     * </pre>
     *
     * <code>.protolca.AllocationType allocation_type = 3;</code>
     * @return The enum numeric value on the wire for allocationType.
     */
    int getAllocationTypeValue();
    /**
     * <pre>
     * The type of allocation.
     * </pre>
     *
     * <code>.protolca.AllocationType allocation_type = 3;</code>
     * @return The allocationType.
     */
    org.openlca.proto.Proto.AllocationType getAllocationType();

    /**
     * <pre>
     * The value of the allocation factor.
     * </pre>
     *
     * <code>double value = 4;</code>
     * @return The value.
     */
    double getValue();

    /**
     * <pre>
     * An optional formula from which the value of the allocation factor is
     * calculated.
     * </pre>
     *
     * <code>string formula = 5;</code>
     * @return The formula.
     */
    java.lang.String getFormula();
    /**
     * <pre>
     * An optional formula from which the value of the allocation factor is
     * calculated.
     * </pre>
     *
     * <code>string formula = 5;</code>
     * @return The bytes for formula.
     */
    com.google.protobuf.ByteString
        getFormulaBytes();

    /**
     * <pre>
     * An input product or elementary flow exchange which is allocated by this
     * factor. This is only valid for causal allocation where allocation factors
     * can be assigned to single exchanges.
     * </pre>
     *
     * <code>.protolca.Exchange allocated_exchange = 6;</code>
     * @return Whether the allocatedExchange field is set.
     */
    boolean hasAllocatedExchange();
    /**
     * <pre>
     * An input product or elementary flow exchange which is allocated by this
     * factor. This is only valid for causal allocation where allocation factors
     * can be assigned to single exchanges.
     * </pre>
     *
     * <code>.protolca.Exchange allocated_exchange = 6;</code>
     * @return The allocatedExchange.
     */
    org.openlca.proto.Proto.Exchange getAllocatedExchange();
    /**
     * <pre>
     * An input product or elementary flow exchange which is allocated by this
     * factor. This is only valid for causal allocation where allocation factors
     * can be assigned to single exchanges.
     * </pre>
     *
     * <code>.protolca.Exchange allocated_exchange = 6;</code>
     */
    org.openlca.proto.Proto.ExchangeOrBuilder getAllocatedExchangeOrBuilder();
  }
  /**
   * <pre>
   * A single allocation factor in a process.
   * </pre>
   *
   * Protobuf type {@code protolca.AllocationFactor}
   */
  public static final class AllocationFactor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.AllocationFactor)
      AllocationFactorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AllocationFactor.newBuilder() to construct.
    private AllocationFactor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AllocationFactor() {
      type_ = "";
      allocationType_ = 0;
      formula_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AllocationFactor();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AllocationFactor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              org.openlca.proto.Proto.Exchange.Builder subBuilder = null;
              if (productExchange_ != null) {
                subBuilder = productExchange_.toBuilder();
              }
              productExchange_ = input.readMessage(org.openlca.proto.Proto.Exchange.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(productExchange_);
                productExchange_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              allocationType_ = rawValue;
              break;
            }
            case 33: {

              value_ = input.readDouble();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              formula_ = s;
              break;
            }
            case 50: {
              org.openlca.proto.Proto.Exchange.Builder subBuilder = null;
              if (allocatedExchange_ != null) {
                subBuilder = allocatedExchange_.toBuilder();
              }
              allocatedExchange_ = input.readMessage(org.openlca.proto.Proto.Exchange.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(allocatedExchange_);
                allocatedExchange_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_AllocationFactor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_AllocationFactor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.AllocationFactor.class, org.openlca.proto.Proto.AllocationFactor.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRODUCT_EXCHANGE_FIELD_NUMBER = 2;
    private org.openlca.proto.Proto.Exchange productExchange_;
    /**
     * <pre>
     * The output product.
     * </pre>
     *
     * <code>.protolca.Exchange product_exchange = 2;</code>
     * @return Whether the productExchange field is set.
     */
    @java.lang.Override
    public boolean hasProductExchange() {
      return productExchange_ != null;
    }
    /**
     * <pre>
     * The output product.
     * </pre>
     *
     * <code>.protolca.Exchange product_exchange = 2;</code>
     * @return The productExchange.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Exchange getProductExchange() {
      return productExchange_ == null ? org.openlca.proto.Proto.Exchange.getDefaultInstance() : productExchange_;
    }
    /**
     * <pre>
     * The output product.
     * </pre>
     *
     * <code>.protolca.Exchange product_exchange = 2;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ExchangeOrBuilder getProductExchangeOrBuilder() {
      return getProductExchange();
    }

    public static final int ALLOCATION_TYPE_FIELD_NUMBER = 3;
    private int allocationType_;
    /**
     * <pre>
     * The type of allocation.
     * </pre>
     *
     * <code>.protolca.AllocationType allocation_type = 3;</code>
     * @return The enum numeric value on the wire for allocationType.
     */
    @java.lang.Override public int getAllocationTypeValue() {
      return allocationType_;
    }
    /**
     * <pre>
     * The type of allocation.
     * </pre>
     *
     * <code>.protolca.AllocationType allocation_type = 3;</code>
     * @return The allocationType.
     */
    @java.lang.Override public org.openlca.proto.Proto.AllocationType getAllocationType() {
      @SuppressWarnings("deprecation")
      org.openlca.proto.Proto.AllocationType result = org.openlca.proto.Proto.AllocationType.valueOf(allocationType_);
      return result == null ? org.openlca.proto.Proto.AllocationType.UNRECOGNIZED : result;
    }

    public static final int VALUE_FIELD_NUMBER = 4;
    private double value_;
    /**
     * <pre>
     * The value of the allocation factor.
     * </pre>
     *
     * <code>double value = 4;</code>
     * @return The value.
     */
    @java.lang.Override
    public double getValue() {
      return value_;
    }

    public static final int FORMULA_FIELD_NUMBER = 5;
    private volatile java.lang.Object formula_;
    /**
     * <pre>
     * An optional formula from which the value of the allocation factor is
     * calculated.
     * </pre>
     *
     * <code>string formula = 5;</code>
     * @return The formula.
     */
    @java.lang.Override
    public java.lang.String getFormula() {
      java.lang.Object ref = formula_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        formula_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * An optional formula from which the value of the allocation factor is
     * calculated.
     * </pre>
     *
     * <code>string formula = 5;</code>
     * @return The bytes for formula.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFormulaBytes() {
      java.lang.Object ref = formula_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        formula_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ALLOCATED_EXCHANGE_FIELD_NUMBER = 6;
    private org.openlca.proto.Proto.Exchange allocatedExchange_;
    /**
     * <pre>
     * An input product or elementary flow exchange which is allocated by this
     * factor. This is only valid for causal allocation where allocation factors
     * can be assigned to single exchanges.
     * </pre>
     *
     * <code>.protolca.Exchange allocated_exchange = 6;</code>
     * @return Whether the allocatedExchange field is set.
     */
    @java.lang.Override
    public boolean hasAllocatedExchange() {
      return allocatedExchange_ != null;
    }
    /**
     * <pre>
     * An input product or elementary flow exchange which is allocated by this
     * factor. This is only valid for causal allocation where allocation factors
     * can be assigned to single exchanges.
     * </pre>
     *
     * <code>.protolca.Exchange allocated_exchange = 6;</code>
     * @return The allocatedExchange.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Exchange getAllocatedExchange() {
      return allocatedExchange_ == null ? org.openlca.proto.Proto.Exchange.getDefaultInstance() : allocatedExchange_;
    }
    /**
     * <pre>
     * An input product or elementary flow exchange which is allocated by this
     * factor. This is only valid for causal allocation where allocation factors
     * can be assigned to single exchanges.
     * </pre>
     *
     * <code>.protolca.Exchange allocated_exchange = 6;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ExchangeOrBuilder getAllocatedExchangeOrBuilder() {
      return getAllocatedExchange();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (productExchange_ != null) {
        output.writeMessage(2, getProductExchange());
      }
      if (allocationType_ != org.openlca.proto.Proto.AllocationType.UNDEFINED_ALLOCATION_TYPE.getNumber()) {
        output.writeEnum(3, allocationType_);
      }
      if (value_ != 0D) {
        output.writeDouble(4, value_);
      }
      if (!getFormulaBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, formula_);
      }
      if (allocatedExchange_ != null) {
        output.writeMessage(6, getAllocatedExchange());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (productExchange_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getProductExchange());
      }
      if (allocationType_ != org.openlca.proto.Proto.AllocationType.UNDEFINED_ALLOCATION_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, allocationType_);
      }
      if (value_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, value_);
      }
      if (!getFormulaBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, formula_);
      }
      if (allocatedExchange_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getAllocatedExchange());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.AllocationFactor)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.AllocationFactor other = (org.openlca.proto.Proto.AllocationFactor) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (hasProductExchange() != other.hasProductExchange()) return false;
      if (hasProductExchange()) {
        if (!getProductExchange()
            .equals(other.getProductExchange())) return false;
      }
      if (allocationType_ != other.allocationType_) return false;
      if (java.lang.Double.doubleToLongBits(getValue())
          != java.lang.Double.doubleToLongBits(
              other.getValue())) return false;
      if (!getFormula()
          .equals(other.getFormula())) return false;
      if (hasAllocatedExchange() != other.hasAllocatedExchange()) return false;
      if (hasAllocatedExchange()) {
        if (!getAllocatedExchange()
            .equals(other.getAllocatedExchange())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      if (hasProductExchange()) {
        hash = (37 * hash) + PRODUCT_EXCHANGE_FIELD_NUMBER;
        hash = (53 * hash) + getProductExchange().hashCode();
      }
      hash = (37 * hash) + ALLOCATION_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + allocationType_;
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getValue()));
      hash = (37 * hash) + FORMULA_FIELD_NUMBER;
      hash = (53 * hash) + getFormula().hashCode();
      if (hasAllocatedExchange()) {
        hash = (37 * hash) + ALLOCATED_EXCHANGE_FIELD_NUMBER;
        hash = (53 * hash) + getAllocatedExchange().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.AllocationFactor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.AllocationFactor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.AllocationFactor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.AllocationFactor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.AllocationFactor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.AllocationFactor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.AllocationFactor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.AllocationFactor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.AllocationFactor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.AllocationFactor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.AllocationFactor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.AllocationFactor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.AllocationFactor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A single allocation factor in a process.
     * </pre>
     *
     * Protobuf type {@code protolca.AllocationFactor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.AllocationFactor)
        org.openlca.proto.Proto.AllocationFactorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_AllocationFactor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_AllocationFactor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.AllocationFactor.class, org.openlca.proto.Proto.AllocationFactor.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.AllocationFactor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        if (productExchangeBuilder_ == null) {
          productExchange_ = null;
        } else {
          productExchange_ = null;
          productExchangeBuilder_ = null;
        }
        allocationType_ = 0;

        value_ = 0D;

        formula_ = "";

        if (allocatedExchangeBuilder_ == null) {
          allocatedExchange_ = null;
        } else {
          allocatedExchange_ = null;
          allocatedExchangeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_AllocationFactor_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.AllocationFactor getDefaultInstanceForType() {
        return org.openlca.proto.Proto.AllocationFactor.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.AllocationFactor build() {
        org.openlca.proto.Proto.AllocationFactor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.AllocationFactor buildPartial() {
        org.openlca.proto.Proto.AllocationFactor result = new org.openlca.proto.Proto.AllocationFactor(this);
        result.type_ = type_;
        if (productExchangeBuilder_ == null) {
          result.productExchange_ = productExchange_;
        } else {
          result.productExchange_ = productExchangeBuilder_.build();
        }
        result.allocationType_ = allocationType_;
        result.value_ = value_;
        result.formula_ = formula_;
        if (allocatedExchangeBuilder_ == null) {
          result.allocatedExchange_ = allocatedExchange_;
        } else {
          result.allocatedExchange_ = allocatedExchangeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.AllocationFactor) {
          return mergeFrom((org.openlca.proto.Proto.AllocationFactor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.AllocationFactor other) {
        if (other == org.openlca.proto.Proto.AllocationFactor.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.hasProductExchange()) {
          mergeProductExchange(other.getProductExchange());
        }
        if (other.allocationType_ != 0) {
          setAllocationTypeValue(other.getAllocationTypeValue());
        }
        if (other.getValue() != 0D) {
          setValue(other.getValue());
        }
        if (!other.getFormula().isEmpty()) {
          formula_ = other.formula_;
          onChanged();
        }
        if (other.hasAllocatedExchange()) {
          mergeAllocatedExchange(other.getAllocatedExchange());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.AllocationFactor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.AllocationFactor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Exchange productExchange_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Exchange, org.openlca.proto.Proto.Exchange.Builder, org.openlca.proto.Proto.ExchangeOrBuilder> productExchangeBuilder_;
      /**
       * <pre>
       * The output product.
       * </pre>
       *
       * <code>.protolca.Exchange product_exchange = 2;</code>
       * @return Whether the productExchange field is set.
       */
      public boolean hasProductExchange() {
        return productExchangeBuilder_ != null || productExchange_ != null;
      }
      /**
       * <pre>
       * The output product.
       * </pre>
       *
       * <code>.protolca.Exchange product_exchange = 2;</code>
       * @return The productExchange.
       */
      public org.openlca.proto.Proto.Exchange getProductExchange() {
        if (productExchangeBuilder_ == null) {
          return productExchange_ == null ? org.openlca.proto.Proto.Exchange.getDefaultInstance() : productExchange_;
        } else {
          return productExchangeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The output product.
       * </pre>
       *
       * <code>.protolca.Exchange product_exchange = 2;</code>
       */
      public Builder setProductExchange(org.openlca.proto.Proto.Exchange value) {
        if (productExchangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          productExchange_ = value;
          onChanged();
        } else {
          productExchangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The output product.
       * </pre>
       *
       * <code>.protolca.Exchange product_exchange = 2;</code>
       */
      public Builder setProductExchange(
          org.openlca.proto.Proto.Exchange.Builder builderForValue) {
        if (productExchangeBuilder_ == null) {
          productExchange_ = builderForValue.build();
          onChanged();
        } else {
          productExchangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The output product.
       * </pre>
       *
       * <code>.protolca.Exchange product_exchange = 2;</code>
       */
      public Builder mergeProductExchange(org.openlca.proto.Proto.Exchange value) {
        if (productExchangeBuilder_ == null) {
          if (productExchange_ != null) {
            productExchange_ =
              org.openlca.proto.Proto.Exchange.newBuilder(productExchange_).mergeFrom(value).buildPartial();
          } else {
            productExchange_ = value;
          }
          onChanged();
        } else {
          productExchangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The output product.
       * </pre>
       *
       * <code>.protolca.Exchange product_exchange = 2;</code>
       */
      public Builder clearProductExchange() {
        if (productExchangeBuilder_ == null) {
          productExchange_ = null;
          onChanged();
        } else {
          productExchange_ = null;
          productExchangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The output product.
       * </pre>
       *
       * <code>.protolca.Exchange product_exchange = 2;</code>
       */
      public org.openlca.proto.Proto.Exchange.Builder getProductExchangeBuilder() {
        
        onChanged();
        return getProductExchangeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The output product.
       * </pre>
       *
       * <code>.protolca.Exchange product_exchange = 2;</code>
       */
      public org.openlca.proto.Proto.ExchangeOrBuilder getProductExchangeOrBuilder() {
        if (productExchangeBuilder_ != null) {
          return productExchangeBuilder_.getMessageOrBuilder();
        } else {
          return productExchange_ == null ?
              org.openlca.proto.Proto.Exchange.getDefaultInstance() : productExchange_;
        }
      }
      /**
       * <pre>
       * The output product.
       * </pre>
       *
       * <code>.protolca.Exchange product_exchange = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Exchange, org.openlca.proto.Proto.Exchange.Builder, org.openlca.proto.Proto.ExchangeOrBuilder> 
          getProductExchangeFieldBuilder() {
        if (productExchangeBuilder_ == null) {
          productExchangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Exchange, org.openlca.proto.Proto.Exchange.Builder, org.openlca.proto.Proto.ExchangeOrBuilder>(
                  getProductExchange(),
                  getParentForChildren(),
                  isClean());
          productExchange_ = null;
        }
        return productExchangeBuilder_;
      }

      private int allocationType_ = 0;
      /**
       * <pre>
       * The type of allocation.
       * </pre>
       *
       * <code>.protolca.AllocationType allocation_type = 3;</code>
       * @return The enum numeric value on the wire for allocationType.
       */
      @java.lang.Override public int getAllocationTypeValue() {
        return allocationType_;
      }
      /**
       * <pre>
       * The type of allocation.
       * </pre>
       *
       * <code>.protolca.AllocationType allocation_type = 3;</code>
       * @param value The enum numeric value on the wire for allocationType to set.
       * @return This builder for chaining.
       */
      public Builder setAllocationTypeValue(int value) {
        
        allocationType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of allocation.
       * </pre>
       *
       * <code>.protolca.AllocationType allocation_type = 3;</code>
       * @return The allocationType.
       */
      @java.lang.Override
      public org.openlca.proto.Proto.AllocationType getAllocationType() {
        @SuppressWarnings("deprecation")
        org.openlca.proto.Proto.AllocationType result = org.openlca.proto.Proto.AllocationType.valueOf(allocationType_);
        return result == null ? org.openlca.proto.Proto.AllocationType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The type of allocation.
       * </pre>
       *
       * <code>.protolca.AllocationType allocation_type = 3;</code>
       * @param value The allocationType to set.
       * @return This builder for chaining.
       */
      public Builder setAllocationType(org.openlca.proto.Proto.AllocationType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        allocationType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of allocation.
       * </pre>
       *
       * <code>.protolca.AllocationType allocation_type = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAllocationType() {
        
        allocationType_ = 0;
        onChanged();
        return this;
      }

      private double value_ ;
      /**
       * <pre>
       * The value of the allocation factor.
       * </pre>
       *
       * <code>double value = 4;</code>
       * @return The value.
       */
      @java.lang.Override
      public double getValue() {
        return value_;
      }
      /**
       * <pre>
       * The value of the allocation factor.
       * </pre>
       *
       * <code>double value = 4;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(double value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The value of the allocation factor.
       * </pre>
       *
       * <code>double value = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object formula_ = "";
      /**
       * <pre>
       * An optional formula from which the value of the allocation factor is
       * calculated.
       * </pre>
       *
       * <code>string formula = 5;</code>
       * @return The formula.
       */
      public java.lang.String getFormula() {
        java.lang.Object ref = formula_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          formula_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * An optional formula from which the value of the allocation factor is
       * calculated.
       * </pre>
       *
       * <code>string formula = 5;</code>
       * @return The bytes for formula.
       */
      public com.google.protobuf.ByteString
          getFormulaBytes() {
        java.lang.Object ref = formula_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          formula_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * An optional formula from which the value of the allocation factor is
       * calculated.
       * </pre>
       *
       * <code>string formula = 5;</code>
       * @param value The formula to set.
       * @return This builder for chaining.
       */
      public Builder setFormula(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        formula_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional formula from which the value of the allocation factor is
       * calculated.
       * </pre>
       *
       * <code>string formula = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearFormula() {
        
        formula_ = getDefaultInstance().getFormula();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional formula from which the value of the allocation factor is
       * calculated.
       * </pre>
       *
       * <code>string formula = 5;</code>
       * @param value The bytes for formula to set.
       * @return This builder for chaining.
       */
      public Builder setFormulaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        formula_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Exchange allocatedExchange_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Exchange, org.openlca.proto.Proto.Exchange.Builder, org.openlca.proto.Proto.ExchangeOrBuilder> allocatedExchangeBuilder_;
      /**
       * <pre>
       * An input product or elementary flow exchange which is allocated by this
       * factor. This is only valid for causal allocation where allocation factors
       * can be assigned to single exchanges.
       * </pre>
       *
       * <code>.protolca.Exchange allocated_exchange = 6;</code>
       * @return Whether the allocatedExchange field is set.
       */
      public boolean hasAllocatedExchange() {
        return allocatedExchangeBuilder_ != null || allocatedExchange_ != null;
      }
      /**
       * <pre>
       * An input product or elementary flow exchange which is allocated by this
       * factor. This is only valid for causal allocation where allocation factors
       * can be assigned to single exchanges.
       * </pre>
       *
       * <code>.protolca.Exchange allocated_exchange = 6;</code>
       * @return The allocatedExchange.
       */
      public org.openlca.proto.Proto.Exchange getAllocatedExchange() {
        if (allocatedExchangeBuilder_ == null) {
          return allocatedExchange_ == null ? org.openlca.proto.Proto.Exchange.getDefaultInstance() : allocatedExchange_;
        } else {
          return allocatedExchangeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * An input product or elementary flow exchange which is allocated by this
       * factor. This is only valid for causal allocation where allocation factors
       * can be assigned to single exchanges.
       * </pre>
       *
       * <code>.protolca.Exchange allocated_exchange = 6;</code>
       */
      public Builder setAllocatedExchange(org.openlca.proto.Proto.Exchange value) {
        if (allocatedExchangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          allocatedExchange_ = value;
          onChanged();
        } else {
          allocatedExchangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * An input product or elementary flow exchange which is allocated by this
       * factor. This is only valid for causal allocation where allocation factors
       * can be assigned to single exchanges.
       * </pre>
       *
       * <code>.protolca.Exchange allocated_exchange = 6;</code>
       */
      public Builder setAllocatedExchange(
          org.openlca.proto.Proto.Exchange.Builder builderForValue) {
        if (allocatedExchangeBuilder_ == null) {
          allocatedExchange_ = builderForValue.build();
          onChanged();
        } else {
          allocatedExchangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * An input product or elementary flow exchange which is allocated by this
       * factor. This is only valid for causal allocation where allocation factors
       * can be assigned to single exchanges.
       * </pre>
       *
       * <code>.protolca.Exchange allocated_exchange = 6;</code>
       */
      public Builder mergeAllocatedExchange(org.openlca.proto.Proto.Exchange value) {
        if (allocatedExchangeBuilder_ == null) {
          if (allocatedExchange_ != null) {
            allocatedExchange_ =
              org.openlca.proto.Proto.Exchange.newBuilder(allocatedExchange_).mergeFrom(value).buildPartial();
          } else {
            allocatedExchange_ = value;
          }
          onChanged();
        } else {
          allocatedExchangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * An input product or elementary flow exchange which is allocated by this
       * factor. This is only valid for causal allocation where allocation factors
       * can be assigned to single exchanges.
       * </pre>
       *
       * <code>.protolca.Exchange allocated_exchange = 6;</code>
       */
      public Builder clearAllocatedExchange() {
        if (allocatedExchangeBuilder_ == null) {
          allocatedExchange_ = null;
          onChanged();
        } else {
          allocatedExchange_ = null;
          allocatedExchangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * An input product or elementary flow exchange which is allocated by this
       * factor. This is only valid for causal allocation where allocation factors
       * can be assigned to single exchanges.
       * </pre>
       *
       * <code>.protolca.Exchange allocated_exchange = 6;</code>
       */
      public org.openlca.proto.Proto.Exchange.Builder getAllocatedExchangeBuilder() {
        
        onChanged();
        return getAllocatedExchangeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * An input product or elementary flow exchange which is allocated by this
       * factor. This is only valid for causal allocation where allocation factors
       * can be assigned to single exchanges.
       * </pre>
       *
       * <code>.protolca.Exchange allocated_exchange = 6;</code>
       */
      public org.openlca.proto.Proto.ExchangeOrBuilder getAllocatedExchangeOrBuilder() {
        if (allocatedExchangeBuilder_ != null) {
          return allocatedExchangeBuilder_.getMessageOrBuilder();
        } else {
          return allocatedExchange_ == null ?
              org.openlca.proto.Proto.Exchange.getDefaultInstance() : allocatedExchange_;
        }
      }
      /**
       * <pre>
       * An input product or elementary flow exchange which is allocated by this
       * factor. This is only valid for causal allocation where allocation factors
       * can be assigned to single exchanges.
       * </pre>
       *
       * <code>.protolca.Exchange allocated_exchange = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Exchange, org.openlca.proto.Proto.Exchange.Builder, org.openlca.proto.Proto.ExchangeOrBuilder> 
          getAllocatedExchangeFieldBuilder() {
        if (allocatedExchangeBuilder_ == null) {
          allocatedExchangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Exchange, org.openlca.proto.Proto.Exchange.Builder, org.openlca.proto.Proto.ExchangeOrBuilder>(
                  getAllocatedExchange(),
                  getParentForChildren(),
                  isClean());
          allocatedExchange_ = null;
        }
        return allocatedExchangeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.AllocationFactor)
    }

    // @@protoc_insertion_point(class_scope:protolca.AllocationFactor)
    private static final org.openlca.proto.Proto.AllocationFactor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.AllocationFactor();
    }

    public static org.openlca.proto.Proto.AllocationFactor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AllocationFactor>
        PARSER = new com.google.protobuf.AbstractParser<AllocationFactor>() {
      @java.lang.Override
      public AllocationFactor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AllocationFactor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AllocationFactor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AllocationFactor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.AllocationFactor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CalculationSetupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.CalculationSetup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The type of calculation that should be performed.
     * </pre>
     *
     * <code>.protolca.CalculationType calculation_type = 2;</code>
     * @return The enum numeric value on the wire for calculationType.
     */
    int getCalculationTypeValue();
    /**
     * <pre>
     * The type of calculation that should be performed.
     * </pre>
     *
     * <code>.protolca.CalculationType calculation_type = 2;</code>
     * @return The calculationType.
     */
    org.openlca.proto.Proto.CalculationType getCalculationType();

    /**
     * <pre>
     * The product system that should be calculated (required).
     * </pre>
     *
     * <code>.protolca.Ref product_system = 3;</code>
     * @return Whether the productSystem field is set.
     */
    boolean hasProductSystem();
    /**
     * <pre>
     * The product system that should be calculated (required).
     * </pre>
     *
     * <code>.protolca.Ref product_system = 3;</code>
     * @return The productSystem.
     */
    org.openlca.proto.Proto.Ref getProductSystem();
    /**
     * <pre>
     * The product system that should be calculated (required).
     * </pre>
     *
     * <code>.protolca.Ref product_system = 3;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getProductSystemOrBuilder();

    /**
     * <pre>
     * The LCIA method for the calculation (optional).
     * </pre>
     *
     * <code>.protolca.Ref impact_method = 4;</code>
     * @return Whether the impactMethod field is set.
     */
    boolean hasImpactMethod();
    /**
     * <pre>
     * The LCIA method for the calculation (optional).
     * </pre>
     *
     * <code>.protolca.Ref impact_method = 4;</code>
     * @return The impactMethod.
     */
    org.openlca.proto.Proto.Ref getImpactMethod();
    /**
     * <pre>
     * The LCIA method for the calculation (optional).
     * </pre>
     *
     * <code>.protolca.Ref impact_method = 4;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getImpactMethodOrBuilder();

    /**
     * <pre>
     * Indicates whether life cycle costs should be also calculated (optional).
     * </pre>
     *
     * <code>bool with_costs = 5;</code>
     * @return The withCosts.
     */
    boolean getWithCosts();

    /**
     * <pre>
     * The normalisation and weighting set for the calculation (optional).
     * </pre>
     *
     * <code>.protolca.Ref nw_set = 6;</code>
     * @return Whether the nwSet field is set.
     */
    boolean hasNwSet();
    /**
     * <pre>
     * The normalisation and weighting set for the calculation (optional).
     * </pre>
     *
     * <code>.protolca.Ref nw_set = 6;</code>
     * @return The nwSet.
     */
    org.openlca.proto.Proto.Ref getNwSet();
    /**
     * <pre>
     * The normalisation and weighting set for the calculation (optional).
     * </pre>
     *
     * <code>.protolca.Ref nw_set = 6;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getNwSetOrBuilder();

    /**
     * <pre>
     * The calculation type to be used in the calculation (optional).
     * </pre>
     *
     * <code>.protolca.AllocationType allocation_method = 7;</code>
     * @return The enum numeric value on the wire for allocationMethod.
     */
    int getAllocationMethodValue();
    /**
     * <pre>
     * The calculation type to be used in the calculation (optional).
     * </pre>
     *
     * <code>.protolca.AllocationType allocation_method = 7;</code>
     * @return The allocationMethod.
     */
    org.openlca.proto.Proto.AllocationType getAllocationMethod();

    /**
     * <pre>
     * A list of parameter redefinitions to be used in the calculation
     * (optional).
     * </pre>
     *
     * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
     */
    java.util.List<org.openlca.proto.Proto.ParameterRedef> 
        getParameterRedefsList();
    /**
     * <pre>
     * A list of parameter redefinitions to be used in the calculation
     * (optional).
     * </pre>
     *
     * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
     */
    org.openlca.proto.Proto.ParameterRedef getParameterRedefs(int index);
    /**
     * <pre>
     * A list of parameter redefinitions to be used in the calculation
     * (optional).
     * </pre>
     *
     * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
     */
    int getParameterRedefsCount();
    /**
     * <pre>
     * A list of parameter redefinitions to be used in the calculation
     * (optional).
     * </pre>
     *
     * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
     */
    java.util.List<? extends org.openlca.proto.Proto.ParameterRedefOrBuilder> 
        getParameterRedefsOrBuilderList();
    /**
     * <pre>
     * A list of parameter redefinitions to be used in the calculation
     * (optional).
     * </pre>
     *
     * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
     */
    org.openlca.proto.Proto.ParameterRedefOrBuilder getParameterRedefsOrBuilder(
        int index);

    /**
     * <pre>
     * (optional)
     * </pre>
     *
     * <code>double amount = 9;</code>
     * @return The amount.
     */
    double getAmount();

    /**
     * <pre>
     * (optional)
     * </pre>
     *
     * <code>.protolca.Ref unit = 10;</code>
     * @return Whether the unit field is set.
     */
    boolean hasUnit();
    /**
     * <pre>
     * (optional)
     * </pre>
     *
     * <code>.protolca.Ref unit = 10;</code>
     * @return The unit.
     */
    org.openlca.proto.Proto.Ref getUnit();
    /**
     * <pre>
     * (optional)
     * </pre>
     *
     * <code>.protolca.Ref unit = 10;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getUnitOrBuilder();

    /**
     * <pre>
     * (optional)
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 11;</code>
     * @return Whether the flowProperty field is set.
     */
    boolean hasFlowProperty();
    /**
     * <pre>
     * (optional)
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 11;</code>
     * @return The flowProperty.
     */
    org.openlca.proto.Proto.Ref getFlowProperty();
    /**
     * <pre>
     * (optional)
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 11;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getFlowPropertyOrBuilder();
  }
  /**
   * <pre>
   * A setup for a product system calculation.
   * </pre>
   *
   * Protobuf type {@code protolca.CalculationSetup}
   */
  public static final class CalculationSetup extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.CalculationSetup)
      CalculationSetupOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CalculationSetup.newBuilder() to construct.
    private CalculationSetup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CalculationSetup() {
      type_ = "";
      calculationType_ = 0;
      allocationMethod_ = 0;
      parameterRedefs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CalculationSetup();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CalculationSetup(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              calculationType_ = rawValue;
              break;
            }
            case 26: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (productSystem_ != null) {
                subBuilder = productSystem_.toBuilder();
              }
              productSystem_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(productSystem_);
                productSystem_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (impactMethod_ != null) {
                subBuilder = impactMethod_.toBuilder();
              }
              impactMethod_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(impactMethod_);
                impactMethod_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {

              withCosts_ = input.readBool();
              break;
            }
            case 50: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (nwSet_ != null) {
                subBuilder = nwSet_.toBuilder();
              }
              nwSet_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nwSet_);
                nwSet_ = subBuilder.buildPartial();
              }

              break;
            }
            case 56: {
              int rawValue = input.readEnum();

              allocationMethod_ = rawValue;
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                parameterRedefs_ = new java.util.ArrayList<org.openlca.proto.Proto.ParameterRedef>();
                mutable_bitField0_ |= 0x00000001;
              }
              parameterRedefs_.add(
                  input.readMessage(org.openlca.proto.Proto.ParameterRedef.parser(), extensionRegistry));
              break;
            }
            case 73: {

              amount_ = input.readDouble();
              break;
            }
            case 82: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (unit_ != null) {
                subBuilder = unit_.toBuilder();
              }
              unit_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(unit_);
                unit_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (flowProperty_ != null) {
                subBuilder = flowProperty_.toBuilder();
              }
              flowProperty_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(flowProperty_);
                flowProperty_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          parameterRedefs_ = java.util.Collections.unmodifiableList(parameterRedefs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_CalculationSetup_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_CalculationSetup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.CalculationSetup.class, org.openlca.proto.Proto.CalculationSetup.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CALCULATION_TYPE_FIELD_NUMBER = 2;
    private int calculationType_;
    /**
     * <pre>
     * The type of calculation that should be performed.
     * </pre>
     *
     * <code>.protolca.CalculationType calculation_type = 2;</code>
     * @return The enum numeric value on the wire for calculationType.
     */
    @java.lang.Override public int getCalculationTypeValue() {
      return calculationType_;
    }
    /**
     * <pre>
     * The type of calculation that should be performed.
     * </pre>
     *
     * <code>.protolca.CalculationType calculation_type = 2;</code>
     * @return The calculationType.
     */
    @java.lang.Override public org.openlca.proto.Proto.CalculationType getCalculationType() {
      @SuppressWarnings("deprecation")
      org.openlca.proto.Proto.CalculationType result = org.openlca.proto.Proto.CalculationType.valueOf(calculationType_);
      return result == null ? org.openlca.proto.Proto.CalculationType.UNRECOGNIZED : result;
    }

    public static final int PRODUCT_SYSTEM_FIELD_NUMBER = 3;
    private org.openlca.proto.Proto.Ref productSystem_;
    /**
     * <pre>
     * The product system that should be calculated (required).
     * </pre>
     *
     * <code>.protolca.Ref product_system = 3;</code>
     * @return Whether the productSystem field is set.
     */
    @java.lang.Override
    public boolean hasProductSystem() {
      return productSystem_ != null;
    }
    /**
     * <pre>
     * The product system that should be calculated (required).
     * </pre>
     *
     * <code>.protolca.Ref product_system = 3;</code>
     * @return The productSystem.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getProductSystem() {
      return productSystem_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : productSystem_;
    }
    /**
     * <pre>
     * The product system that should be calculated (required).
     * </pre>
     *
     * <code>.protolca.Ref product_system = 3;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getProductSystemOrBuilder() {
      return getProductSystem();
    }

    public static final int IMPACT_METHOD_FIELD_NUMBER = 4;
    private org.openlca.proto.Proto.Ref impactMethod_;
    /**
     * <pre>
     * The LCIA method for the calculation (optional).
     * </pre>
     *
     * <code>.protolca.Ref impact_method = 4;</code>
     * @return Whether the impactMethod field is set.
     */
    @java.lang.Override
    public boolean hasImpactMethod() {
      return impactMethod_ != null;
    }
    /**
     * <pre>
     * The LCIA method for the calculation (optional).
     * </pre>
     *
     * <code>.protolca.Ref impact_method = 4;</code>
     * @return The impactMethod.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getImpactMethod() {
      return impactMethod_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : impactMethod_;
    }
    /**
     * <pre>
     * The LCIA method for the calculation (optional).
     * </pre>
     *
     * <code>.protolca.Ref impact_method = 4;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getImpactMethodOrBuilder() {
      return getImpactMethod();
    }

    public static final int WITH_COSTS_FIELD_NUMBER = 5;
    private boolean withCosts_;
    /**
     * <pre>
     * Indicates whether life cycle costs should be also calculated (optional).
     * </pre>
     *
     * <code>bool with_costs = 5;</code>
     * @return The withCosts.
     */
    @java.lang.Override
    public boolean getWithCosts() {
      return withCosts_;
    }

    public static final int NW_SET_FIELD_NUMBER = 6;
    private org.openlca.proto.Proto.Ref nwSet_;
    /**
     * <pre>
     * The normalisation and weighting set for the calculation (optional).
     * </pre>
     *
     * <code>.protolca.Ref nw_set = 6;</code>
     * @return Whether the nwSet field is set.
     */
    @java.lang.Override
    public boolean hasNwSet() {
      return nwSet_ != null;
    }
    /**
     * <pre>
     * The normalisation and weighting set for the calculation (optional).
     * </pre>
     *
     * <code>.protolca.Ref nw_set = 6;</code>
     * @return The nwSet.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getNwSet() {
      return nwSet_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : nwSet_;
    }
    /**
     * <pre>
     * The normalisation and weighting set for the calculation (optional).
     * </pre>
     *
     * <code>.protolca.Ref nw_set = 6;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getNwSetOrBuilder() {
      return getNwSet();
    }

    public static final int ALLOCATION_METHOD_FIELD_NUMBER = 7;
    private int allocationMethod_;
    /**
     * <pre>
     * The calculation type to be used in the calculation (optional).
     * </pre>
     *
     * <code>.protolca.AllocationType allocation_method = 7;</code>
     * @return The enum numeric value on the wire for allocationMethod.
     */
    @java.lang.Override public int getAllocationMethodValue() {
      return allocationMethod_;
    }
    /**
     * <pre>
     * The calculation type to be used in the calculation (optional).
     * </pre>
     *
     * <code>.protolca.AllocationType allocation_method = 7;</code>
     * @return The allocationMethod.
     */
    @java.lang.Override public org.openlca.proto.Proto.AllocationType getAllocationMethod() {
      @SuppressWarnings("deprecation")
      org.openlca.proto.Proto.AllocationType result = org.openlca.proto.Proto.AllocationType.valueOf(allocationMethod_);
      return result == null ? org.openlca.proto.Proto.AllocationType.UNRECOGNIZED : result;
    }

    public static final int PARAMETER_REDEFS_FIELD_NUMBER = 8;
    private java.util.List<org.openlca.proto.Proto.ParameterRedef> parameterRedefs_;
    /**
     * <pre>
     * A list of parameter redefinitions to be used in the calculation
     * (optional).
     * </pre>
     *
     * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.proto.Proto.ParameterRedef> getParameterRedefsList() {
      return parameterRedefs_;
    }
    /**
     * <pre>
     * A list of parameter redefinitions to be used in the calculation
     * (optional).
     * </pre>
     *
     * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.proto.Proto.ParameterRedefOrBuilder> 
        getParameterRedefsOrBuilderList() {
      return parameterRedefs_;
    }
    /**
     * <pre>
     * A list of parameter redefinitions to be used in the calculation
     * (optional).
     * </pre>
     *
     * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
     */
    @java.lang.Override
    public int getParameterRedefsCount() {
      return parameterRedefs_.size();
    }
    /**
     * <pre>
     * A list of parameter redefinitions to be used in the calculation
     * (optional).
     * </pre>
     *
     * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ParameterRedef getParameterRedefs(int index) {
      return parameterRedefs_.get(index);
    }
    /**
     * <pre>
     * A list of parameter redefinitions to be used in the calculation
     * (optional).
     * </pre>
     *
     * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ParameterRedefOrBuilder getParameterRedefsOrBuilder(
        int index) {
      return parameterRedefs_.get(index);
    }

    public static final int AMOUNT_FIELD_NUMBER = 9;
    private double amount_;
    /**
     * <pre>
     * (optional)
     * </pre>
     *
     * <code>double amount = 9;</code>
     * @return The amount.
     */
    @java.lang.Override
    public double getAmount() {
      return amount_;
    }

    public static final int UNIT_FIELD_NUMBER = 10;
    private org.openlca.proto.Proto.Ref unit_;
    /**
     * <pre>
     * (optional)
     * </pre>
     *
     * <code>.protolca.Ref unit = 10;</code>
     * @return Whether the unit field is set.
     */
    @java.lang.Override
    public boolean hasUnit() {
      return unit_ != null;
    }
    /**
     * <pre>
     * (optional)
     * </pre>
     *
     * <code>.protolca.Ref unit = 10;</code>
     * @return The unit.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getUnit() {
      return unit_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : unit_;
    }
    /**
     * <pre>
     * (optional)
     * </pre>
     *
     * <code>.protolca.Ref unit = 10;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getUnitOrBuilder() {
      return getUnit();
    }

    public static final int FLOW_PROPERTY_FIELD_NUMBER = 11;
    private org.openlca.proto.Proto.Ref flowProperty_;
    /**
     * <pre>
     * (optional)
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 11;</code>
     * @return Whether the flowProperty field is set.
     */
    @java.lang.Override
    public boolean hasFlowProperty() {
      return flowProperty_ != null;
    }
    /**
     * <pre>
     * (optional)
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 11;</code>
     * @return The flowProperty.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getFlowProperty() {
      return flowProperty_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : flowProperty_;
    }
    /**
     * <pre>
     * (optional)
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 11;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getFlowPropertyOrBuilder() {
      return getFlowProperty();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (calculationType_ != org.openlca.proto.Proto.CalculationType.UNDEFINED_CALCULATION_TYPE.getNumber()) {
        output.writeEnum(2, calculationType_);
      }
      if (productSystem_ != null) {
        output.writeMessage(3, getProductSystem());
      }
      if (impactMethod_ != null) {
        output.writeMessage(4, getImpactMethod());
      }
      if (withCosts_ != false) {
        output.writeBool(5, withCosts_);
      }
      if (nwSet_ != null) {
        output.writeMessage(6, getNwSet());
      }
      if (allocationMethod_ != org.openlca.proto.Proto.AllocationType.UNDEFINED_ALLOCATION_TYPE.getNumber()) {
        output.writeEnum(7, allocationMethod_);
      }
      for (int i = 0; i < parameterRedefs_.size(); i++) {
        output.writeMessage(8, parameterRedefs_.get(i));
      }
      if (amount_ != 0D) {
        output.writeDouble(9, amount_);
      }
      if (unit_ != null) {
        output.writeMessage(10, getUnit());
      }
      if (flowProperty_ != null) {
        output.writeMessage(11, getFlowProperty());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (calculationType_ != org.openlca.proto.Proto.CalculationType.UNDEFINED_CALCULATION_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, calculationType_);
      }
      if (productSystem_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getProductSystem());
      }
      if (impactMethod_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getImpactMethod());
      }
      if (withCosts_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, withCosts_);
      }
      if (nwSet_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getNwSet());
      }
      if (allocationMethod_ != org.openlca.proto.Proto.AllocationType.UNDEFINED_ALLOCATION_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, allocationMethod_);
      }
      for (int i = 0; i < parameterRedefs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, parameterRedefs_.get(i));
      }
      if (amount_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, amount_);
      }
      if (unit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getUnit());
      }
      if (flowProperty_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getFlowProperty());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.CalculationSetup)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.CalculationSetup other = (org.openlca.proto.Proto.CalculationSetup) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (calculationType_ != other.calculationType_) return false;
      if (hasProductSystem() != other.hasProductSystem()) return false;
      if (hasProductSystem()) {
        if (!getProductSystem()
            .equals(other.getProductSystem())) return false;
      }
      if (hasImpactMethod() != other.hasImpactMethod()) return false;
      if (hasImpactMethod()) {
        if (!getImpactMethod()
            .equals(other.getImpactMethod())) return false;
      }
      if (getWithCosts()
          != other.getWithCosts()) return false;
      if (hasNwSet() != other.hasNwSet()) return false;
      if (hasNwSet()) {
        if (!getNwSet()
            .equals(other.getNwSet())) return false;
      }
      if (allocationMethod_ != other.allocationMethod_) return false;
      if (!getParameterRedefsList()
          .equals(other.getParameterRedefsList())) return false;
      if (java.lang.Double.doubleToLongBits(getAmount())
          != java.lang.Double.doubleToLongBits(
              other.getAmount())) return false;
      if (hasUnit() != other.hasUnit()) return false;
      if (hasUnit()) {
        if (!getUnit()
            .equals(other.getUnit())) return false;
      }
      if (hasFlowProperty() != other.hasFlowProperty()) return false;
      if (hasFlowProperty()) {
        if (!getFlowProperty()
            .equals(other.getFlowProperty())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + CALCULATION_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + calculationType_;
      if (hasProductSystem()) {
        hash = (37 * hash) + PRODUCT_SYSTEM_FIELD_NUMBER;
        hash = (53 * hash) + getProductSystem().hashCode();
      }
      if (hasImpactMethod()) {
        hash = (37 * hash) + IMPACT_METHOD_FIELD_NUMBER;
        hash = (53 * hash) + getImpactMethod().hashCode();
      }
      hash = (37 * hash) + WITH_COSTS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getWithCosts());
      if (hasNwSet()) {
        hash = (37 * hash) + NW_SET_FIELD_NUMBER;
        hash = (53 * hash) + getNwSet().hashCode();
      }
      hash = (37 * hash) + ALLOCATION_METHOD_FIELD_NUMBER;
      hash = (53 * hash) + allocationMethod_;
      if (getParameterRedefsCount() > 0) {
        hash = (37 * hash) + PARAMETER_REDEFS_FIELD_NUMBER;
        hash = (53 * hash) + getParameterRedefsList().hashCode();
      }
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAmount()));
      if (hasUnit()) {
        hash = (37 * hash) + UNIT_FIELD_NUMBER;
        hash = (53 * hash) + getUnit().hashCode();
      }
      if (hasFlowProperty()) {
        hash = (37 * hash) + FLOW_PROPERTY_FIELD_NUMBER;
        hash = (53 * hash) + getFlowProperty().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.CalculationSetup parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.CalculationSetup parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.CalculationSetup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.CalculationSetup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.CalculationSetup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.CalculationSetup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.CalculationSetup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.CalculationSetup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.CalculationSetup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.CalculationSetup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.CalculationSetup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.CalculationSetup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.CalculationSetup prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A setup for a product system calculation.
     * </pre>
     *
     * Protobuf type {@code protolca.CalculationSetup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.CalculationSetup)
        org.openlca.proto.Proto.CalculationSetupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_CalculationSetup_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_CalculationSetup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.CalculationSetup.class, org.openlca.proto.Proto.CalculationSetup.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.CalculationSetup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getParameterRedefsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        calculationType_ = 0;

        if (productSystemBuilder_ == null) {
          productSystem_ = null;
        } else {
          productSystem_ = null;
          productSystemBuilder_ = null;
        }
        if (impactMethodBuilder_ == null) {
          impactMethod_ = null;
        } else {
          impactMethod_ = null;
          impactMethodBuilder_ = null;
        }
        withCosts_ = false;

        if (nwSetBuilder_ == null) {
          nwSet_ = null;
        } else {
          nwSet_ = null;
          nwSetBuilder_ = null;
        }
        allocationMethod_ = 0;

        if (parameterRedefsBuilder_ == null) {
          parameterRedefs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          parameterRedefsBuilder_.clear();
        }
        amount_ = 0D;

        if (unitBuilder_ == null) {
          unit_ = null;
        } else {
          unit_ = null;
          unitBuilder_ = null;
        }
        if (flowPropertyBuilder_ == null) {
          flowProperty_ = null;
        } else {
          flowProperty_ = null;
          flowPropertyBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_CalculationSetup_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.CalculationSetup getDefaultInstanceForType() {
        return org.openlca.proto.Proto.CalculationSetup.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.CalculationSetup build() {
        org.openlca.proto.Proto.CalculationSetup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.CalculationSetup buildPartial() {
        org.openlca.proto.Proto.CalculationSetup result = new org.openlca.proto.Proto.CalculationSetup(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.calculationType_ = calculationType_;
        if (productSystemBuilder_ == null) {
          result.productSystem_ = productSystem_;
        } else {
          result.productSystem_ = productSystemBuilder_.build();
        }
        if (impactMethodBuilder_ == null) {
          result.impactMethod_ = impactMethod_;
        } else {
          result.impactMethod_ = impactMethodBuilder_.build();
        }
        result.withCosts_ = withCosts_;
        if (nwSetBuilder_ == null) {
          result.nwSet_ = nwSet_;
        } else {
          result.nwSet_ = nwSetBuilder_.build();
        }
        result.allocationMethod_ = allocationMethod_;
        if (parameterRedefsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            parameterRedefs_ = java.util.Collections.unmodifiableList(parameterRedefs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.parameterRedefs_ = parameterRedefs_;
        } else {
          result.parameterRedefs_ = parameterRedefsBuilder_.build();
        }
        result.amount_ = amount_;
        if (unitBuilder_ == null) {
          result.unit_ = unit_;
        } else {
          result.unit_ = unitBuilder_.build();
        }
        if (flowPropertyBuilder_ == null) {
          result.flowProperty_ = flowProperty_;
        } else {
          result.flowProperty_ = flowPropertyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.CalculationSetup) {
          return mergeFrom((org.openlca.proto.Proto.CalculationSetup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.CalculationSetup other) {
        if (other == org.openlca.proto.Proto.CalculationSetup.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.calculationType_ != 0) {
          setCalculationTypeValue(other.getCalculationTypeValue());
        }
        if (other.hasProductSystem()) {
          mergeProductSystem(other.getProductSystem());
        }
        if (other.hasImpactMethod()) {
          mergeImpactMethod(other.getImpactMethod());
        }
        if (other.getWithCosts() != false) {
          setWithCosts(other.getWithCosts());
        }
        if (other.hasNwSet()) {
          mergeNwSet(other.getNwSet());
        }
        if (other.allocationMethod_ != 0) {
          setAllocationMethodValue(other.getAllocationMethodValue());
        }
        if (parameterRedefsBuilder_ == null) {
          if (!other.parameterRedefs_.isEmpty()) {
            if (parameterRedefs_.isEmpty()) {
              parameterRedefs_ = other.parameterRedefs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureParameterRedefsIsMutable();
              parameterRedefs_.addAll(other.parameterRedefs_);
            }
            onChanged();
          }
        } else {
          if (!other.parameterRedefs_.isEmpty()) {
            if (parameterRedefsBuilder_.isEmpty()) {
              parameterRedefsBuilder_.dispose();
              parameterRedefsBuilder_ = null;
              parameterRedefs_ = other.parameterRedefs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              parameterRedefsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getParameterRedefsFieldBuilder() : null;
            } else {
              parameterRedefsBuilder_.addAllMessages(other.parameterRedefs_);
            }
          }
        }
        if (other.getAmount() != 0D) {
          setAmount(other.getAmount());
        }
        if (other.hasUnit()) {
          mergeUnit(other.getUnit());
        }
        if (other.hasFlowProperty()) {
          mergeFlowProperty(other.getFlowProperty());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.CalculationSetup parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.CalculationSetup) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private int calculationType_ = 0;
      /**
       * <pre>
       * The type of calculation that should be performed.
       * </pre>
       *
       * <code>.protolca.CalculationType calculation_type = 2;</code>
       * @return The enum numeric value on the wire for calculationType.
       */
      @java.lang.Override public int getCalculationTypeValue() {
        return calculationType_;
      }
      /**
       * <pre>
       * The type of calculation that should be performed.
       * </pre>
       *
       * <code>.protolca.CalculationType calculation_type = 2;</code>
       * @param value The enum numeric value on the wire for calculationType to set.
       * @return This builder for chaining.
       */
      public Builder setCalculationTypeValue(int value) {
        
        calculationType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of calculation that should be performed.
       * </pre>
       *
       * <code>.protolca.CalculationType calculation_type = 2;</code>
       * @return The calculationType.
       */
      @java.lang.Override
      public org.openlca.proto.Proto.CalculationType getCalculationType() {
        @SuppressWarnings("deprecation")
        org.openlca.proto.Proto.CalculationType result = org.openlca.proto.Proto.CalculationType.valueOf(calculationType_);
        return result == null ? org.openlca.proto.Proto.CalculationType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The type of calculation that should be performed.
       * </pre>
       *
       * <code>.protolca.CalculationType calculation_type = 2;</code>
       * @param value The calculationType to set.
       * @return This builder for chaining.
       */
      public Builder setCalculationType(org.openlca.proto.Proto.CalculationType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        calculationType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of calculation that should be performed.
       * </pre>
       *
       * <code>.protolca.CalculationType calculation_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCalculationType() {
        
        calculationType_ = 0;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref productSystem_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> productSystemBuilder_;
      /**
       * <pre>
       * The product system that should be calculated (required).
       * </pre>
       *
       * <code>.protolca.Ref product_system = 3;</code>
       * @return Whether the productSystem field is set.
       */
      public boolean hasProductSystem() {
        return productSystemBuilder_ != null || productSystem_ != null;
      }
      /**
       * <pre>
       * The product system that should be calculated (required).
       * </pre>
       *
       * <code>.protolca.Ref product_system = 3;</code>
       * @return The productSystem.
       */
      public org.openlca.proto.Proto.Ref getProductSystem() {
        if (productSystemBuilder_ == null) {
          return productSystem_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : productSystem_;
        } else {
          return productSystemBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The product system that should be calculated (required).
       * </pre>
       *
       * <code>.protolca.Ref product_system = 3;</code>
       */
      public Builder setProductSystem(org.openlca.proto.Proto.Ref value) {
        if (productSystemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          productSystem_ = value;
          onChanged();
        } else {
          productSystemBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The product system that should be calculated (required).
       * </pre>
       *
       * <code>.protolca.Ref product_system = 3;</code>
       */
      public Builder setProductSystem(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (productSystemBuilder_ == null) {
          productSystem_ = builderForValue.build();
          onChanged();
        } else {
          productSystemBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The product system that should be calculated (required).
       * </pre>
       *
       * <code>.protolca.Ref product_system = 3;</code>
       */
      public Builder mergeProductSystem(org.openlca.proto.Proto.Ref value) {
        if (productSystemBuilder_ == null) {
          if (productSystem_ != null) {
            productSystem_ =
              org.openlca.proto.Proto.Ref.newBuilder(productSystem_).mergeFrom(value).buildPartial();
          } else {
            productSystem_ = value;
          }
          onChanged();
        } else {
          productSystemBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The product system that should be calculated (required).
       * </pre>
       *
       * <code>.protolca.Ref product_system = 3;</code>
       */
      public Builder clearProductSystem() {
        if (productSystemBuilder_ == null) {
          productSystem_ = null;
          onChanged();
        } else {
          productSystem_ = null;
          productSystemBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The product system that should be calculated (required).
       * </pre>
       *
       * <code>.protolca.Ref product_system = 3;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getProductSystemBuilder() {
        
        onChanged();
        return getProductSystemFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The product system that should be calculated (required).
       * </pre>
       *
       * <code>.protolca.Ref product_system = 3;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getProductSystemOrBuilder() {
        if (productSystemBuilder_ != null) {
          return productSystemBuilder_.getMessageOrBuilder();
        } else {
          return productSystem_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : productSystem_;
        }
      }
      /**
       * <pre>
       * The product system that should be calculated (required).
       * </pre>
       *
       * <code>.protolca.Ref product_system = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getProductSystemFieldBuilder() {
        if (productSystemBuilder_ == null) {
          productSystemBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getProductSystem(),
                  getParentForChildren(),
                  isClean());
          productSystem_ = null;
        }
        return productSystemBuilder_;
      }

      private org.openlca.proto.Proto.Ref impactMethod_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> impactMethodBuilder_;
      /**
       * <pre>
       * The LCIA method for the calculation (optional).
       * </pre>
       *
       * <code>.protolca.Ref impact_method = 4;</code>
       * @return Whether the impactMethod field is set.
       */
      public boolean hasImpactMethod() {
        return impactMethodBuilder_ != null || impactMethod_ != null;
      }
      /**
       * <pre>
       * The LCIA method for the calculation (optional).
       * </pre>
       *
       * <code>.protolca.Ref impact_method = 4;</code>
       * @return The impactMethod.
       */
      public org.openlca.proto.Proto.Ref getImpactMethod() {
        if (impactMethodBuilder_ == null) {
          return impactMethod_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : impactMethod_;
        } else {
          return impactMethodBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The LCIA method for the calculation (optional).
       * </pre>
       *
       * <code>.protolca.Ref impact_method = 4;</code>
       */
      public Builder setImpactMethod(org.openlca.proto.Proto.Ref value) {
        if (impactMethodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          impactMethod_ = value;
          onChanged();
        } else {
          impactMethodBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The LCIA method for the calculation (optional).
       * </pre>
       *
       * <code>.protolca.Ref impact_method = 4;</code>
       */
      public Builder setImpactMethod(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (impactMethodBuilder_ == null) {
          impactMethod_ = builderForValue.build();
          onChanged();
        } else {
          impactMethodBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The LCIA method for the calculation (optional).
       * </pre>
       *
       * <code>.protolca.Ref impact_method = 4;</code>
       */
      public Builder mergeImpactMethod(org.openlca.proto.Proto.Ref value) {
        if (impactMethodBuilder_ == null) {
          if (impactMethod_ != null) {
            impactMethod_ =
              org.openlca.proto.Proto.Ref.newBuilder(impactMethod_).mergeFrom(value).buildPartial();
          } else {
            impactMethod_ = value;
          }
          onChanged();
        } else {
          impactMethodBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The LCIA method for the calculation (optional).
       * </pre>
       *
       * <code>.protolca.Ref impact_method = 4;</code>
       */
      public Builder clearImpactMethod() {
        if (impactMethodBuilder_ == null) {
          impactMethod_ = null;
          onChanged();
        } else {
          impactMethod_ = null;
          impactMethodBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The LCIA method for the calculation (optional).
       * </pre>
       *
       * <code>.protolca.Ref impact_method = 4;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getImpactMethodBuilder() {
        
        onChanged();
        return getImpactMethodFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The LCIA method for the calculation (optional).
       * </pre>
       *
       * <code>.protolca.Ref impact_method = 4;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getImpactMethodOrBuilder() {
        if (impactMethodBuilder_ != null) {
          return impactMethodBuilder_.getMessageOrBuilder();
        } else {
          return impactMethod_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : impactMethod_;
        }
      }
      /**
       * <pre>
       * The LCIA method for the calculation (optional).
       * </pre>
       *
       * <code>.protolca.Ref impact_method = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getImpactMethodFieldBuilder() {
        if (impactMethodBuilder_ == null) {
          impactMethodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getImpactMethod(),
                  getParentForChildren(),
                  isClean());
          impactMethod_ = null;
        }
        return impactMethodBuilder_;
      }

      private boolean withCosts_ ;
      /**
       * <pre>
       * Indicates whether life cycle costs should be also calculated (optional).
       * </pre>
       *
       * <code>bool with_costs = 5;</code>
       * @return The withCosts.
       */
      @java.lang.Override
      public boolean getWithCosts() {
        return withCosts_;
      }
      /**
       * <pre>
       * Indicates whether life cycle costs should be also calculated (optional).
       * </pre>
       *
       * <code>bool with_costs = 5;</code>
       * @param value The withCosts to set.
       * @return This builder for chaining.
       */
      public Builder setWithCosts(boolean value) {
        
        withCosts_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates whether life cycle costs should be also calculated (optional).
       * </pre>
       *
       * <code>bool with_costs = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearWithCosts() {
        
        withCosts_ = false;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref nwSet_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> nwSetBuilder_;
      /**
       * <pre>
       * The normalisation and weighting set for the calculation (optional).
       * </pre>
       *
       * <code>.protolca.Ref nw_set = 6;</code>
       * @return Whether the nwSet field is set.
       */
      public boolean hasNwSet() {
        return nwSetBuilder_ != null || nwSet_ != null;
      }
      /**
       * <pre>
       * The normalisation and weighting set for the calculation (optional).
       * </pre>
       *
       * <code>.protolca.Ref nw_set = 6;</code>
       * @return The nwSet.
       */
      public org.openlca.proto.Proto.Ref getNwSet() {
        if (nwSetBuilder_ == null) {
          return nwSet_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : nwSet_;
        } else {
          return nwSetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The normalisation and weighting set for the calculation (optional).
       * </pre>
       *
       * <code>.protolca.Ref nw_set = 6;</code>
       */
      public Builder setNwSet(org.openlca.proto.Proto.Ref value) {
        if (nwSetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nwSet_ = value;
          onChanged();
        } else {
          nwSetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The normalisation and weighting set for the calculation (optional).
       * </pre>
       *
       * <code>.protolca.Ref nw_set = 6;</code>
       */
      public Builder setNwSet(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (nwSetBuilder_ == null) {
          nwSet_ = builderForValue.build();
          onChanged();
        } else {
          nwSetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The normalisation and weighting set for the calculation (optional).
       * </pre>
       *
       * <code>.protolca.Ref nw_set = 6;</code>
       */
      public Builder mergeNwSet(org.openlca.proto.Proto.Ref value) {
        if (nwSetBuilder_ == null) {
          if (nwSet_ != null) {
            nwSet_ =
              org.openlca.proto.Proto.Ref.newBuilder(nwSet_).mergeFrom(value).buildPartial();
          } else {
            nwSet_ = value;
          }
          onChanged();
        } else {
          nwSetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The normalisation and weighting set for the calculation (optional).
       * </pre>
       *
       * <code>.protolca.Ref nw_set = 6;</code>
       */
      public Builder clearNwSet() {
        if (nwSetBuilder_ == null) {
          nwSet_ = null;
          onChanged();
        } else {
          nwSet_ = null;
          nwSetBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The normalisation and weighting set for the calculation (optional).
       * </pre>
       *
       * <code>.protolca.Ref nw_set = 6;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getNwSetBuilder() {
        
        onChanged();
        return getNwSetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The normalisation and weighting set for the calculation (optional).
       * </pre>
       *
       * <code>.protolca.Ref nw_set = 6;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getNwSetOrBuilder() {
        if (nwSetBuilder_ != null) {
          return nwSetBuilder_.getMessageOrBuilder();
        } else {
          return nwSet_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : nwSet_;
        }
      }
      /**
       * <pre>
       * The normalisation and weighting set for the calculation (optional).
       * </pre>
       *
       * <code>.protolca.Ref nw_set = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getNwSetFieldBuilder() {
        if (nwSetBuilder_ == null) {
          nwSetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getNwSet(),
                  getParentForChildren(),
                  isClean());
          nwSet_ = null;
        }
        return nwSetBuilder_;
      }

      private int allocationMethod_ = 0;
      /**
       * <pre>
       * The calculation type to be used in the calculation (optional).
       * </pre>
       *
       * <code>.protolca.AllocationType allocation_method = 7;</code>
       * @return The enum numeric value on the wire for allocationMethod.
       */
      @java.lang.Override public int getAllocationMethodValue() {
        return allocationMethod_;
      }
      /**
       * <pre>
       * The calculation type to be used in the calculation (optional).
       * </pre>
       *
       * <code>.protolca.AllocationType allocation_method = 7;</code>
       * @param value The enum numeric value on the wire for allocationMethod to set.
       * @return This builder for chaining.
       */
      public Builder setAllocationMethodValue(int value) {
        
        allocationMethod_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The calculation type to be used in the calculation (optional).
       * </pre>
       *
       * <code>.protolca.AllocationType allocation_method = 7;</code>
       * @return The allocationMethod.
       */
      @java.lang.Override
      public org.openlca.proto.Proto.AllocationType getAllocationMethod() {
        @SuppressWarnings("deprecation")
        org.openlca.proto.Proto.AllocationType result = org.openlca.proto.Proto.AllocationType.valueOf(allocationMethod_);
        return result == null ? org.openlca.proto.Proto.AllocationType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The calculation type to be used in the calculation (optional).
       * </pre>
       *
       * <code>.protolca.AllocationType allocation_method = 7;</code>
       * @param value The allocationMethod to set.
       * @return This builder for chaining.
       */
      public Builder setAllocationMethod(org.openlca.proto.Proto.AllocationType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        allocationMethod_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The calculation type to be used in the calculation (optional).
       * </pre>
       *
       * <code>.protolca.AllocationType allocation_method = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearAllocationMethod() {
        
        allocationMethod_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.openlca.proto.Proto.ParameterRedef> parameterRedefs_ =
        java.util.Collections.emptyList();
      private void ensureParameterRedefsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          parameterRedefs_ = new java.util.ArrayList<org.openlca.proto.Proto.ParameterRedef>(parameterRedefs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.ParameterRedef, org.openlca.proto.Proto.ParameterRedef.Builder, org.openlca.proto.Proto.ParameterRedefOrBuilder> parameterRedefsBuilder_;

      /**
       * <pre>
       * A list of parameter redefinitions to be used in the calculation
       * (optional).
       * </pre>
       *
       * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
       */
      public java.util.List<org.openlca.proto.Proto.ParameterRedef> getParameterRedefsList() {
        if (parameterRedefsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(parameterRedefs_);
        } else {
          return parameterRedefsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A list of parameter redefinitions to be used in the calculation
       * (optional).
       * </pre>
       *
       * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
       */
      public int getParameterRedefsCount() {
        if (parameterRedefsBuilder_ == null) {
          return parameterRedefs_.size();
        } else {
          return parameterRedefsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A list of parameter redefinitions to be used in the calculation
       * (optional).
       * </pre>
       *
       * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
       */
      public org.openlca.proto.Proto.ParameterRedef getParameterRedefs(int index) {
        if (parameterRedefsBuilder_ == null) {
          return parameterRedefs_.get(index);
        } else {
          return parameterRedefsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A list of parameter redefinitions to be used in the calculation
       * (optional).
       * </pre>
       *
       * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
       */
      public Builder setParameterRedefs(
          int index, org.openlca.proto.Proto.ParameterRedef value) {
        if (parameterRedefsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParameterRedefsIsMutable();
          parameterRedefs_.set(index, value);
          onChanged();
        } else {
          parameterRedefsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of parameter redefinitions to be used in the calculation
       * (optional).
       * </pre>
       *
       * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
       */
      public Builder setParameterRedefs(
          int index, org.openlca.proto.Proto.ParameterRedef.Builder builderForValue) {
        if (parameterRedefsBuilder_ == null) {
          ensureParameterRedefsIsMutable();
          parameterRedefs_.set(index, builderForValue.build());
          onChanged();
        } else {
          parameterRedefsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of parameter redefinitions to be used in the calculation
       * (optional).
       * </pre>
       *
       * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
       */
      public Builder addParameterRedefs(org.openlca.proto.Proto.ParameterRedef value) {
        if (parameterRedefsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParameterRedefsIsMutable();
          parameterRedefs_.add(value);
          onChanged();
        } else {
          parameterRedefsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of parameter redefinitions to be used in the calculation
       * (optional).
       * </pre>
       *
       * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
       */
      public Builder addParameterRedefs(
          int index, org.openlca.proto.Proto.ParameterRedef value) {
        if (parameterRedefsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParameterRedefsIsMutable();
          parameterRedefs_.add(index, value);
          onChanged();
        } else {
          parameterRedefsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of parameter redefinitions to be used in the calculation
       * (optional).
       * </pre>
       *
       * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
       */
      public Builder addParameterRedefs(
          org.openlca.proto.Proto.ParameterRedef.Builder builderForValue) {
        if (parameterRedefsBuilder_ == null) {
          ensureParameterRedefsIsMutable();
          parameterRedefs_.add(builderForValue.build());
          onChanged();
        } else {
          parameterRedefsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of parameter redefinitions to be used in the calculation
       * (optional).
       * </pre>
       *
       * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
       */
      public Builder addParameterRedefs(
          int index, org.openlca.proto.Proto.ParameterRedef.Builder builderForValue) {
        if (parameterRedefsBuilder_ == null) {
          ensureParameterRedefsIsMutable();
          parameterRedefs_.add(index, builderForValue.build());
          onChanged();
        } else {
          parameterRedefsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of parameter redefinitions to be used in the calculation
       * (optional).
       * </pre>
       *
       * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
       */
      public Builder addAllParameterRedefs(
          java.lang.Iterable<? extends org.openlca.proto.Proto.ParameterRedef> values) {
        if (parameterRedefsBuilder_ == null) {
          ensureParameterRedefsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, parameterRedefs_);
          onChanged();
        } else {
          parameterRedefsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A list of parameter redefinitions to be used in the calculation
       * (optional).
       * </pre>
       *
       * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
       */
      public Builder clearParameterRedefs() {
        if (parameterRedefsBuilder_ == null) {
          parameterRedefs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          parameterRedefsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A list of parameter redefinitions to be used in the calculation
       * (optional).
       * </pre>
       *
       * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
       */
      public Builder removeParameterRedefs(int index) {
        if (parameterRedefsBuilder_ == null) {
          ensureParameterRedefsIsMutable();
          parameterRedefs_.remove(index);
          onChanged();
        } else {
          parameterRedefsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A list of parameter redefinitions to be used in the calculation
       * (optional).
       * </pre>
       *
       * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
       */
      public org.openlca.proto.Proto.ParameterRedef.Builder getParameterRedefsBuilder(
          int index) {
        return getParameterRedefsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A list of parameter redefinitions to be used in the calculation
       * (optional).
       * </pre>
       *
       * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
       */
      public org.openlca.proto.Proto.ParameterRedefOrBuilder getParameterRedefsOrBuilder(
          int index) {
        if (parameterRedefsBuilder_ == null) {
          return parameterRedefs_.get(index);  } else {
          return parameterRedefsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A list of parameter redefinitions to be used in the calculation
       * (optional).
       * </pre>
       *
       * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
       */
      public java.util.List<? extends org.openlca.proto.Proto.ParameterRedefOrBuilder> 
           getParameterRedefsOrBuilderList() {
        if (parameterRedefsBuilder_ != null) {
          return parameterRedefsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(parameterRedefs_);
        }
      }
      /**
       * <pre>
       * A list of parameter redefinitions to be used in the calculation
       * (optional).
       * </pre>
       *
       * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
       */
      public org.openlca.proto.Proto.ParameterRedef.Builder addParameterRedefsBuilder() {
        return getParameterRedefsFieldBuilder().addBuilder(
            org.openlca.proto.Proto.ParameterRedef.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of parameter redefinitions to be used in the calculation
       * (optional).
       * </pre>
       *
       * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
       */
      public org.openlca.proto.Proto.ParameterRedef.Builder addParameterRedefsBuilder(
          int index) {
        return getParameterRedefsFieldBuilder().addBuilder(
            index, org.openlca.proto.Proto.ParameterRedef.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of parameter redefinitions to be used in the calculation
       * (optional).
       * </pre>
       *
       * <code>repeated .protolca.ParameterRedef parameter_redefs = 8;</code>
       */
      public java.util.List<org.openlca.proto.Proto.ParameterRedef.Builder> 
           getParameterRedefsBuilderList() {
        return getParameterRedefsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.ParameterRedef, org.openlca.proto.Proto.ParameterRedef.Builder, org.openlca.proto.Proto.ParameterRedefOrBuilder> 
          getParameterRedefsFieldBuilder() {
        if (parameterRedefsBuilder_ == null) {
          parameterRedefsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.proto.Proto.ParameterRedef, org.openlca.proto.Proto.ParameterRedef.Builder, org.openlca.proto.Proto.ParameterRedefOrBuilder>(
                  parameterRedefs_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          parameterRedefs_ = null;
        }
        return parameterRedefsBuilder_;
      }

      private double amount_ ;
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>double amount = 9;</code>
       * @return The amount.
       */
      @java.lang.Override
      public double getAmount() {
        return amount_;
      }
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>double amount = 9;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(double value) {
        
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>double amount = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        
        amount_ = 0D;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref unit_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> unitBuilder_;
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>.protolca.Ref unit = 10;</code>
       * @return Whether the unit field is set.
       */
      public boolean hasUnit() {
        return unitBuilder_ != null || unit_ != null;
      }
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>.protolca.Ref unit = 10;</code>
       * @return The unit.
       */
      public org.openlca.proto.Proto.Ref getUnit() {
        if (unitBuilder_ == null) {
          return unit_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : unit_;
        } else {
          return unitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>.protolca.Ref unit = 10;</code>
       */
      public Builder setUnit(org.openlca.proto.Proto.Ref value) {
        if (unitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          unit_ = value;
          onChanged();
        } else {
          unitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>.protolca.Ref unit = 10;</code>
       */
      public Builder setUnit(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (unitBuilder_ == null) {
          unit_ = builderForValue.build();
          onChanged();
        } else {
          unitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>.protolca.Ref unit = 10;</code>
       */
      public Builder mergeUnit(org.openlca.proto.Proto.Ref value) {
        if (unitBuilder_ == null) {
          if (unit_ != null) {
            unit_ =
              org.openlca.proto.Proto.Ref.newBuilder(unit_).mergeFrom(value).buildPartial();
          } else {
            unit_ = value;
          }
          onChanged();
        } else {
          unitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>.protolca.Ref unit = 10;</code>
       */
      public Builder clearUnit() {
        if (unitBuilder_ == null) {
          unit_ = null;
          onChanged();
        } else {
          unit_ = null;
          unitBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>.protolca.Ref unit = 10;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getUnitBuilder() {
        
        onChanged();
        return getUnitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>.protolca.Ref unit = 10;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getUnitOrBuilder() {
        if (unitBuilder_ != null) {
          return unitBuilder_.getMessageOrBuilder();
        } else {
          return unit_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : unit_;
        }
      }
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>.protolca.Ref unit = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getUnitFieldBuilder() {
        if (unitBuilder_ == null) {
          unitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getUnit(),
                  getParentForChildren(),
                  isClean());
          unit_ = null;
        }
        return unitBuilder_;
      }

      private org.openlca.proto.Proto.Ref flowProperty_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> flowPropertyBuilder_;
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 11;</code>
       * @return Whether the flowProperty field is set.
       */
      public boolean hasFlowProperty() {
        return flowPropertyBuilder_ != null || flowProperty_ != null;
      }
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 11;</code>
       * @return The flowProperty.
       */
      public org.openlca.proto.Proto.Ref getFlowProperty() {
        if (flowPropertyBuilder_ == null) {
          return flowProperty_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : flowProperty_;
        } else {
          return flowPropertyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 11;</code>
       */
      public Builder setFlowProperty(org.openlca.proto.Proto.Ref value) {
        if (flowPropertyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          flowProperty_ = value;
          onChanged();
        } else {
          flowPropertyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 11;</code>
       */
      public Builder setFlowProperty(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (flowPropertyBuilder_ == null) {
          flowProperty_ = builderForValue.build();
          onChanged();
        } else {
          flowPropertyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 11;</code>
       */
      public Builder mergeFlowProperty(org.openlca.proto.Proto.Ref value) {
        if (flowPropertyBuilder_ == null) {
          if (flowProperty_ != null) {
            flowProperty_ =
              org.openlca.proto.Proto.Ref.newBuilder(flowProperty_).mergeFrom(value).buildPartial();
          } else {
            flowProperty_ = value;
          }
          onChanged();
        } else {
          flowPropertyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 11;</code>
       */
      public Builder clearFlowProperty() {
        if (flowPropertyBuilder_ == null) {
          flowProperty_ = null;
          onChanged();
        } else {
          flowProperty_ = null;
          flowPropertyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 11;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getFlowPropertyBuilder() {
        
        onChanged();
        return getFlowPropertyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 11;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getFlowPropertyOrBuilder() {
        if (flowPropertyBuilder_ != null) {
          return flowPropertyBuilder_.getMessageOrBuilder();
        } else {
          return flowProperty_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : flowProperty_;
        }
      }
      /**
       * <pre>
       * (optional)
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getFlowPropertyFieldBuilder() {
        if (flowPropertyBuilder_ == null) {
          flowPropertyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getFlowProperty(),
                  getParentForChildren(),
                  isClean());
          flowProperty_ = null;
        }
        return flowPropertyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.CalculationSetup)
    }

    // @@protoc_insertion_point(class_scope:protolca.CalculationSetup)
    private static final org.openlca.proto.Proto.CalculationSetup DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.CalculationSetup();
    }

    public static org.openlca.proto.Proto.CalculationSetup getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CalculationSetup>
        PARSER = new com.google.protobuf.AbstractParser<CalculationSetup>() {
      @java.lang.Override
      public CalculationSetup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CalculationSetup(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CalculationSetup> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CalculationSetup> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.CalculationSetup getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CategoryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.Category)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    boolean hasCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    org.openlca.proto.Proto.Ref getCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder();

    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    java.util.List<java.lang.String>
        getTagsList();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    int getTagsCount();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    java.lang.String getTags(int index);
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);

    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    java.lang.String getLibrary();
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    com.google.protobuf.ByteString
        getLibraryBytes();

    /**
     * <pre>
     * The type of models that can be linked to the category.
     * </pre>
     *
     * <code>.protolca.ModelType model_type = 10;</code>
     * @return The enum numeric value on the wire for modelType.
     */
    int getModelTypeValue();
    /**
     * <pre>
     * The type of models that can be linked to the category.
     * </pre>
     *
     * <code>.protolca.ModelType model_type = 10;</code>
     * @return The modelType.
     */
    org.openlca.proto.Proto.ModelType getModelType();
  }
  /**
   * <pre>
   * A category is used for the categorisation of types like processes, flows,
   * etc. The tricky thing is that the `Category` class inherits also from the
   * [CategorizedEntity] type so that a category can have a category attribute
   * which is then the parent category of this category (uff).
   * </pre>
   *
   * Protobuf type {@code protolca.Category}
   */
  public static final class Category extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.Category)
      CategoryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Category.newBuilder() to construct.
    private Category(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Category() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      library_ = "";
      modelType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Category();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Category(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (category_ != null) {
                subBuilder = category_.toBuilder();
              }
              category_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(category_);
                category_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tags_.add(s);
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              library_ = s;
              break;
            }
            case 80: {
              int rawValue = input.readEnum();

              modelType_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_Category_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_Category_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.Category.class, org.openlca.proto.Proto.Category.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.Ref category_;
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    @java.lang.Override
    public boolean hasCategory() {
      return category_ != null;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getCategory() {
      return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
      return getCategory();
    }

    public static final int TAGS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    public static final int LIBRARY_FIELD_NUMBER = 9;
    private volatile java.lang.Object library_;
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    @java.lang.Override
    public java.lang.String getLibrary() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        library_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLibraryBytes() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        library_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MODEL_TYPE_FIELD_NUMBER = 10;
    private int modelType_;
    /**
     * <pre>
     * The type of models that can be linked to the category.
     * </pre>
     *
     * <code>.protolca.ModelType model_type = 10;</code>
     * @return The enum numeric value on the wire for modelType.
     */
    @java.lang.Override public int getModelTypeValue() {
      return modelType_;
    }
    /**
     * <pre>
     * The type of models that can be linked to the category.
     * </pre>
     *
     * <code>.protolca.ModelType model_type = 10;</code>
     * @return The modelType.
     */
    @java.lang.Override public org.openlca.proto.Proto.ModelType getModelType() {
      @SuppressWarnings("deprecation")
      org.openlca.proto.Proto.ModelType result = org.openlca.proto.Proto.ModelType.valueOf(modelType_);
      return result == null ? org.openlca.proto.Proto.ModelType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (category_ != null) {
        output.writeMessage(7, getCategory());
      }
      for (int i = 0; i < tags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, tags_.getRaw(i));
      }
      if (!getLibraryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, library_);
      }
      if (modelType_ != org.openlca.proto.Proto.ModelType.UNDEFINED_MODEL_TYPE.getNumber()) {
        output.writeEnum(10, modelType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (category_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCategory());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += computeStringSizeNoTag(tags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      if (!getLibraryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, library_);
      }
      if (modelType_ != org.openlca.proto.Proto.ModelType.UNDEFINED_MODEL_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, modelType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.Category)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.Category other = (org.openlca.proto.Proto.Category) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (hasCategory() != other.hasCategory()) return false;
      if (hasCategory()) {
        if (!getCategory()
            .equals(other.getCategory())) return false;
      }
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (!getLibrary()
          .equals(other.getLibrary())) return false;
      if (modelType_ != other.modelType_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (hasCategory()) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategory().hashCode();
      }
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibrary().hashCode();
      hash = (37 * hash) + MODEL_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + modelType_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.Category parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Category parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Category parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Category parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Category parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Category parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Category parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Category parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Category parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Category parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Category parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Category parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.Category prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A category is used for the categorisation of types like processes, flows,
     * etc. The tricky thing is that the `Category` class inherits also from the
     * [CategorizedEntity] type so that a category can have a category attribute
     * which is then the parent category of this category (uff).
     * </pre>
     *
     * Protobuf type {@code protolca.Category}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.Category)
        org.openlca.proto.Proto.CategoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_Category_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_Category_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.Category.class, org.openlca.proto.Proto.Category.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.Category.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        if (categoryBuilder_ == null) {
          category_ = null;
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        library_ = "";

        modelType_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_Category_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Category getDefaultInstanceForType() {
        return org.openlca.proto.Proto.Category.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Category build() {
        org.openlca.proto.Proto.Category result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Category buildPartial() {
        org.openlca.proto.Proto.Category result = new org.openlca.proto.Proto.Category(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (categoryBuilder_ == null) {
          result.category_ = category_;
        } else {
          result.category_ = categoryBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tags_ = tags_;
        result.library_ = library_;
        result.modelType_ = modelType_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.Category) {
          return mergeFrom((org.openlca.proto.Proto.Category)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.Category other) {
        if (other == org.openlca.proto.Proto.Category.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.hasCategory()) {
          mergeCategory(other.getCategory());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        if (!other.getLibrary().isEmpty()) {
          library_ = other.library_;
          onChanged();
        }
        if (other.modelType_ != 0) {
          setModelTypeValue(other.getModelTypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.Category parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.Category) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref category_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> categoryBuilder_;
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return Whether the category field is set.
       */
      public boolean hasCategory() {
        return categoryBuilder_ != null || category_ != null;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return The category.
       */
      public org.openlca.proto.Proto.Ref getCategory() {
        if (categoryBuilder_ == null) {
          return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        } else {
          return categoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          category_ = value;
          onChanged();
        } else {
          categoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          category_ = builderForValue.build();
          onChanged();
        } else {
          categoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder mergeCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (category_ != null) {
            category_ =
              org.openlca.proto.Proto.Ref.newBuilder(category_).mergeFrom(value).buildPartial();
          } else {
            category_ = value;
          }
          onChanged();
        } else {
          categoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder clearCategory() {
        if (categoryBuilder_ == null) {
          category_ = null;
          onChanged();
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getCategoryBuilder() {
        
        onChanged();
        return getCategoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
        if (categoryBuilder_ != null) {
          return categoryBuilder_.getMessageOrBuilder();
        } else {
          return category_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getCategoryFieldBuilder() {
        if (categoryBuilder_ == null) {
          categoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getCategory(),
                  getParentForChildren(),
                  isClean());
          category_ = null;
        }
        return categoryBuilder_;
      }

      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return A list containing the tags.
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return The count of tags.
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the element to return.
       * @return The tags at the given index.
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tags at the given index.
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index to set the value at.
       * @param value The tags to set.
       * @return This builder for chaining.
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The tags to add.
       * @return This builder for chaining.
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param values The tags to add.
       * @return This builder for chaining.
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The bytes of the tags to add.
       * @return This builder for chaining.
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object library_ = "";
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The library.
       */
      public java.lang.String getLibrary() {
        java.lang.Object ref = library_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          library_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The bytes for library.
       */
      public com.google.protobuf.ByteString
          getLibraryBytes() {
        java.lang.Object ref = library_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          library_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The library to set.
       * @return This builder for chaining.
       */
      public Builder setLibrary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        library_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLibrary() {
        
        library_ = getDefaultInstance().getLibrary();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The bytes for library to set.
       * @return This builder for chaining.
       */
      public Builder setLibraryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        library_ = value;
        onChanged();
        return this;
      }

      private int modelType_ = 0;
      /**
       * <pre>
       * The type of models that can be linked to the category.
       * </pre>
       *
       * <code>.protolca.ModelType model_type = 10;</code>
       * @return The enum numeric value on the wire for modelType.
       */
      @java.lang.Override public int getModelTypeValue() {
        return modelType_;
      }
      /**
       * <pre>
       * The type of models that can be linked to the category.
       * </pre>
       *
       * <code>.protolca.ModelType model_type = 10;</code>
       * @param value The enum numeric value on the wire for modelType to set.
       * @return This builder for chaining.
       */
      public Builder setModelTypeValue(int value) {
        
        modelType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of models that can be linked to the category.
       * </pre>
       *
       * <code>.protolca.ModelType model_type = 10;</code>
       * @return The modelType.
       */
      @java.lang.Override
      public org.openlca.proto.Proto.ModelType getModelType() {
        @SuppressWarnings("deprecation")
        org.openlca.proto.Proto.ModelType result = org.openlca.proto.Proto.ModelType.valueOf(modelType_);
        return result == null ? org.openlca.proto.Proto.ModelType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The type of models that can be linked to the category.
       * </pre>
       *
       * <code>.protolca.ModelType model_type = 10;</code>
       * @param value The modelType to set.
       * @return This builder for chaining.
       */
      public Builder setModelType(org.openlca.proto.Proto.ModelType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        modelType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of models that can be linked to the category.
       * </pre>
       *
       * <code>.protolca.ModelType model_type = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearModelType() {
        
        modelType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.Category)
    }

    // @@protoc_insertion_point(class_scope:protolca.Category)
    private static final org.openlca.proto.Proto.Category DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.Category();
    }

    public static org.openlca.proto.Proto.Category getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Category>
        PARSER = new com.google.protobuf.AbstractParser<Category>() {
      @java.lang.Override
      public Category parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Category(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Category> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Category> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.Category getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CurrencyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.Currency)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    boolean hasCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    org.openlca.proto.Proto.Ref getCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder();

    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    java.util.List<java.lang.String>
        getTagsList();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    int getTagsCount();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    java.lang.String getTags(int index);
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);

    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    java.lang.String getLibrary();
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    com.google.protobuf.ByteString
        getLibraryBytes();

    /**
     * <code>string code = 10;</code>
     * @return The code.
     */
    java.lang.String getCode();
    /**
     * <code>string code = 10;</code>
     * @return The bytes for code.
     */
    com.google.protobuf.ByteString
        getCodeBytes();

    /**
     * <code>double conversion_factor = 11;</code>
     * @return The conversionFactor.
     */
    double getConversionFactor();

    /**
     * <code>.protolca.Ref reference_currency = 12;</code>
     * @return Whether the referenceCurrency field is set.
     */
    boolean hasReferenceCurrency();
    /**
     * <code>.protolca.Ref reference_currency = 12;</code>
     * @return The referenceCurrency.
     */
    org.openlca.proto.Proto.Ref getReferenceCurrency();
    /**
     * <code>.protolca.Ref reference_currency = 12;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getReferenceCurrencyOrBuilder();
  }
  /**
   * Protobuf type {@code protolca.Currency}
   */
  public static final class Currency extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.Currency)
      CurrencyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Currency.newBuilder() to construct.
    private Currency(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Currency() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      library_ = "";
      code_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Currency();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Currency(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (category_ != null) {
                subBuilder = category_.toBuilder();
              }
              category_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(category_);
                category_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tags_.add(s);
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              library_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              code_ = s;
              break;
            }
            case 89: {

              conversionFactor_ = input.readDouble();
              break;
            }
            case 98: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (referenceCurrency_ != null) {
                subBuilder = referenceCurrency_.toBuilder();
              }
              referenceCurrency_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(referenceCurrency_);
                referenceCurrency_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_Currency_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_Currency_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.Currency.class, org.openlca.proto.Proto.Currency.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.Ref category_;
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    @java.lang.Override
    public boolean hasCategory() {
      return category_ != null;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getCategory() {
      return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
      return getCategory();
    }

    public static final int TAGS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    public static final int LIBRARY_FIELD_NUMBER = 9;
    private volatile java.lang.Object library_;
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    @java.lang.Override
    public java.lang.String getLibrary() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        library_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLibraryBytes() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        library_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CODE_FIELD_NUMBER = 10;
    private volatile java.lang.Object code_;
    /**
     * <code>string code = 10;</code>
     * @return The code.
     */
    @java.lang.Override
    public java.lang.String getCode() {
      java.lang.Object ref = code_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        code_ = s;
        return s;
      }
    }
    /**
     * <code>string code = 10;</code>
     * @return The bytes for code.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCodeBytes() {
      java.lang.Object ref = code_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        code_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONVERSION_FACTOR_FIELD_NUMBER = 11;
    private double conversionFactor_;
    /**
     * <code>double conversion_factor = 11;</code>
     * @return The conversionFactor.
     */
    @java.lang.Override
    public double getConversionFactor() {
      return conversionFactor_;
    }

    public static final int REFERENCE_CURRENCY_FIELD_NUMBER = 12;
    private org.openlca.proto.Proto.Ref referenceCurrency_;
    /**
     * <code>.protolca.Ref reference_currency = 12;</code>
     * @return Whether the referenceCurrency field is set.
     */
    @java.lang.Override
    public boolean hasReferenceCurrency() {
      return referenceCurrency_ != null;
    }
    /**
     * <code>.protolca.Ref reference_currency = 12;</code>
     * @return The referenceCurrency.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getReferenceCurrency() {
      return referenceCurrency_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : referenceCurrency_;
    }
    /**
     * <code>.protolca.Ref reference_currency = 12;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getReferenceCurrencyOrBuilder() {
      return getReferenceCurrency();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (category_ != null) {
        output.writeMessage(7, getCategory());
      }
      for (int i = 0; i < tags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, tags_.getRaw(i));
      }
      if (!getLibraryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, library_);
      }
      if (!getCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, code_);
      }
      if (conversionFactor_ != 0D) {
        output.writeDouble(11, conversionFactor_);
      }
      if (referenceCurrency_ != null) {
        output.writeMessage(12, getReferenceCurrency());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (category_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCategory());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += computeStringSizeNoTag(tags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      if (!getLibraryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, library_);
      }
      if (!getCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, code_);
      }
      if (conversionFactor_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, conversionFactor_);
      }
      if (referenceCurrency_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getReferenceCurrency());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.Currency)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.Currency other = (org.openlca.proto.Proto.Currency) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (hasCategory() != other.hasCategory()) return false;
      if (hasCategory()) {
        if (!getCategory()
            .equals(other.getCategory())) return false;
      }
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (!getLibrary()
          .equals(other.getLibrary())) return false;
      if (!getCode()
          .equals(other.getCode())) return false;
      if (java.lang.Double.doubleToLongBits(getConversionFactor())
          != java.lang.Double.doubleToLongBits(
              other.getConversionFactor())) return false;
      if (hasReferenceCurrency() != other.hasReferenceCurrency()) return false;
      if (hasReferenceCurrency()) {
        if (!getReferenceCurrency()
            .equals(other.getReferenceCurrency())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (hasCategory()) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategory().hashCode();
      }
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibrary().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCode().hashCode();
      hash = (37 * hash) + CONVERSION_FACTOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getConversionFactor()));
      if (hasReferenceCurrency()) {
        hash = (37 * hash) + REFERENCE_CURRENCY_FIELD_NUMBER;
        hash = (53 * hash) + getReferenceCurrency().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.Currency parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Currency parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Currency parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Currency parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Currency parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Currency parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Currency parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Currency parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Currency parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Currency parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Currency parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Currency parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.Currency prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protolca.Currency}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.Currency)
        org.openlca.proto.Proto.CurrencyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_Currency_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_Currency_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.Currency.class, org.openlca.proto.Proto.Currency.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.Currency.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        if (categoryBuilder_ == null) {
          category_ = null;
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        library_ = "";

        code_ = "";

        conversionFactor_ = 0D;

        if (referenceCurrencyBuilder_ == null) {
          referenceCurrency_ = null;
        } else {
          referenceCurrency_ = null;
          referenceCurrencyBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_Currency_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Currency getDefaultInstanceForType() {
        return org.openlca.proto.Proto.Currency.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Currency build() {
        org.openlca.proto.Proto.Currency result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Currency buildPartial() {
        org.openlca.proto.Proto.Currency result = new org.openlca.proto.Proto.Currency(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (categoryBuilder_ == null) {
          result.category_ = category_;
        } else {
          result.category_ = categoryBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tags_ = tags_;
        result.library_ = library_;
        result.code_ = code_;
        result.conversionFactor_ = conversionFactor_;
        if (referenceCurrencyBuilder_ == null) {
          result.referenceCurrency_ = referenceCurrency_;
        } else {
          result.referenceCurrency_ = referenceCurrencyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.Currency) {
          return mergeFrom((org.openlca.proto.Proto.Currency)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.Currency other) {
        if (other == org.openlca.proto.Proto.Currency.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.hasCategory()) {
          mergeCategory(other.getCategory());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        if (!other.getLibrary().isEmpty()) {
          library_ = other.library_;
          onChanged();
        }
        if (!other.getCode().isEmpty()) {
          code_ = other.code_;
          onChanged();
        }
        if (other.getConversionFactor() != 0D) {
          setConversionFactor(other.getConversionFactor());
        }
        if (other.hasReferenceCurrency()) {
          mergeReferenceCurrency(other.getReferenceCurrency());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.Currency parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.Currency) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref category_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> categoryBuilder_;
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return Whether the category field is set.
       */
      public boolean hasCategory() {
        return categoryBuilder_ != null || category_ != null;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return The category.
       */
      public org.openlca.proto.Proto.Ref getCategory() {
        if (categoryBuilder_ == null) {
          return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        } else {
          return categoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          category_ = value;
          onChanged();
        } else {
          categoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          category_ = builderForValue.build();
          onChanged();
        } else {
          categoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder mergeCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (category_ != null) {
            category_ =
              org.openlca.proto.Proto.Ref.newBuilder(category_).mergeFrom(value).buildPartial();
          } else {
            category_ = value;
          }
          onChanged();
        } else {
          categoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder clearCategory() {
        if (categoryBuilder_ == null) {
          category_ = null;
          onChanged();
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getCategoryBuilder() {
        
        onChanged();
        return getCategoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
        if (categoryBuilder_ != null) {
          return categoryBuilder_.getMessageOrBuilder();
        } else {
          return category_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getCategoryFieldBuilder() {
        if (categoryBuilder_ == null) {
          categoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getCategory(),
                  getParentForChildren(),
                  isClean());
          category_ = null;
        }
        return categoryBuilder_;
      }

      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return A list containing the tags.
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return The count of tags.
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the element to return.
       * @return The tags at the given index.
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tags at the given index.
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index to set the value at.
       * @param value The tags to set.
       * @return This builder for chaining.
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The tags to add.
       * @return This builder for chaining.
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param values The tags to add.
       * @return This builder for chaining.
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The bytes of the tags to add.
       * @return This builder for chaining.
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object library_ = "";
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The library.
       */
      public java.lang.String getLibrary() {
        java.lang.Object ref = library_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          library_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The bytes for library.
       */
      public com.google.protobuf.ByteString
          getLibraryBytes() {
        java.lang.Object ref = library_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          library_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The library to set.
       * @return This builder for chaining.
       */
      public Builder setLibrary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        library_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLibrary() {
        
        library_ = getDefaultInstance().getLibrary();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The bytes for library to set.
       * @return This builder for chaining.
       */
      public Builder setLibraryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        library_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object code_ = "";
      /**
       * <code>string code = 10;</code>
       * @return The code.
       */
      public java.lang.String getCode() {
        java.lang.Object ref = code_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          code_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string code = 10;</code>
       * @return The bytes for code.
       */
      public com.google.protobuf.ByteString
          getCodeBytes() {
        java.lang.Object ref = code_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          code_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string code = 10;</code>
       * @param value The code to set.
       * @return This builder for chaining.
       */
      public Builder setCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string code = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearCode() {
        
        code_ = getDefaultInstance().getCode();
        onChanged();
        return this;
      }
      /**
       * <code>string code = 10;</code>
       * @param value The bytes for code to set.
       * @return This builder for chaining.
       */
      public Builder setCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        code_ = value;
        onChanged();
        return this;
      }

      private double conversionFactor_ ;
      /**
       * <code>double conversion_factor = 11;</code>
       * @return The conversionFactor.
       */
      @java.lang.Override
      public double getConversionFactor() {
        return conversionFactor_;
      }
      /**
       * <code>double conversion_factor = 11;</code>
       * @param value The conversionFactor to set.
       * @return This builder for chaining.
       */
      public Builder setConversionFactor(double value) {
        
        conversionFactor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double conversion_factor = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearConversionFactor() {
        
        conversionFactor_ = 0D;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref referenceCurrency_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> referenceCurrencyBuilder_;
      /**
       * <code>.protolca.Ref reference_currency = 12;</code>
       * @return Whether the referenceCurrency field is set.
       */
      public boolean hasReferenceCurrency() {
        return referenceCurrencyBuilder_ != null || referenceCurrency_ != null;
      }
      /**
       * <code>.protolca.Ref reference_currency = 12;</code>
       * @return The referenceCurrency.
       */
      public org.openlca.proto.Proto.Ref getReferenceCurrency() {
        if (referenceCurrencyBuilder_ == null) {
          return referenceCurrency_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : referenceCurrency_;
        } else {
          return referenceCurrencyBuilder_.getMessage();
        }
      }
      /**
       * <code>.protolca.Ref reference_currency = 12;</code>
       */
      public Builder setReferenceCurrency(org.openlca.proto.Proto.Ref value) {
        if (referenceCurrencyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          referenceCurrency_ = value;
          onChanged();
        } else {
          referenceCurrencyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref reference_currency = 12;</code>
       */
      public Builder setReferenceCurrency(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (referenceCurrencyBuilder_ == null) {
          referenceCurrency_ = builderForValue.build();
          onChanged();
        } else {
          referenceCurrencyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protolca.Ref reference_currency = 12;</code>
       */
      public Builder mergeReferenceCurrency(org.openlca.proto.Proto.Ref value) {
        if (referenceCurrencyBuilder_ == null) {
          if (referenceCurrency_ != null) {
            referenceCurrency_ =
              org.openlca.proto.Proto.Ref.newBuilder(referenceCurrency_).mergeFrom(value).buildPartial();
          } else {
            referenceCurrency_ = value;
          }
          onChanged();
        } else {
          referenceCurrencyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref reference_currency = 12;</code>
       */
      public Builder clearReferenceCurrency() {
        if (referenceCurrencyBuilder_ == null) {
          referenceCurrency_ = null;
          onChanged();
        } else {
          referenceCurrency_ = null;
          referenceCurrencyBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protolca.Ref reference_currency = 12;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getReferenceCurrencyBuilder() {
        
        onChanged();
        return getReferenceCurrencyFieldBuilder().getBuilder();
      }
      /**
       * <code>.protolca.Ref reference_currency = 12;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getReferenceCurrencyOrBuilder() {
        if (referenceCurrencyBuilder_ != null) {
          return referenceCurrencyBuilder_.getMessageOrBuilder();
        } else {
          return referenceCurrency_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : referenceCurrency_;
        }
      }
      /**
       * <code>.protolca.Ref reference_currency = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getReferenceCurrencyFieldBuilder() {
        if (referenceCurrencyBuilder_ == null) {
          referenceCurrencyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getReferenceCurrency(),
                  getParentForChildren(),
                  isClean());
          referenceCurrency_ = null;
        }
        return referenceCurrencyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.Currency)
    }

    // @@protoc_insertion_point(class_scope:protolca.Currency)
    private static final org.openlca.proto.Proto.Currency DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.Currency();
    }

    public static org.openlca.proto.Proto.Currency getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Currency>
        PARSER = new com.google.protobuf.AbstractParser<Currency>() {
      @java.lang.Override
      public Currency parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Currency(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Currency> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Currency> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.Currency getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DqIndicatorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.DqIndicator)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>int32 position = 3;</code>
     * @return The position.
     */
    int getPosition();

    /**
     * <code>repeated .protolca.DqScore scores = 4;</code>
     */
    java.util.List<org.openlca.proto.Proto.DqScore> 
        getScoresList();
    /**
     * <code>repeated .protolca.DqScore scores = 4;</code>
     */
    org.openlca.proto.Proto.DqScore getScores(int index);
    /**
     * <code>repeated .protolca.DqScore scores = 4;</code>
     */
    int getScoresCount();
    /**
     * <code>repeated .protolca.DqScore scores = 4;</code>
     */
    java.util.List<? extends org.openlca.proto.Proto.DqScoreOrBuilder> 
        getScoresOrBuilderList();
    /**
     * <code>repeated .protolca.DqScore scores = 4;</code>
     */
    org.openlca.proto.Proto.DqScoreOrBuilder getScoresOrBuilder(
        int index);
  }
  /**
   * <pre>
   * An indicator of a data quality system ([DqSystem]).
   * </pre>
   *
   * Protobuf type {@code protolca.DqIndicator}
   */
  public static final class DqIndicator extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.DqIndicator)
      DqIndicatorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DqIndicator.newBuilder() to construct.
    private DqIndicator(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DqIndicator() {
      type_ = "";
      name_ = "";
      scores_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DqIndicator();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DqIndicator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 24: {

              position_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                scores_ = new java.util.ArrayList<org.openlca.proto.Proto.DqScore>();
                mutable_bitField0_ |= 0x00000001;
              }
              scores_.add(
                  input.readMessage(org.openlca.proto.Proto.DqScore.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          scores_ = java.util.Collections.unmodifiableList(scores_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_DqIndicator_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_DqIndicator_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.DqIndicator.class, org.openlca.proto.Proto.DqIndicator.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POSITION_FIELD_NUMBER = 3;
    private int position_;
    /**
     * <code>int32 position = 3;</code>
     * @return The position.
     */
    @java.lang.Override
    public int getPosition() {
      return position_;
    }

    public static final int SCORES_FIELD_NUMBER = 4;
    private java.util.List<org.openlca.proto.Proto.DqScore> scores_;
    /**
     * <code>repeated .protolca.DqScore scores = 4;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.proto.Proto.DqScore> getScoresList() {
      return scores_;
    }
    /**
     * <code>repeated .protolca.DqScore scores = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.proto.Proto.DqScoreOrBuilder> 
        getScoresOrBuilderList() {
      return scores_;
    }
    /**
     * <code>repeated .protolca.DqScore scores = 4;</code>
     */
    @java.lang.Override
    public int getScoresCount() {
      return scores_.size();
    }
    /**
     * <code>repeated .protolca.DqScore scores = 4;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.DqScore getScores(int index) {
      return scores_.get(index);
    }
    /**
     * <code>repeated .protolca.DqScore scores = 4;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.DqScoreOrBuilder getScoresOrBuilder(
        int index) {
      return scores_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (position_ != 0) {
        output.writeInt32(3, position_);
      }
      for (int i = 0; i < scores_.size(); i++) {
        output.writeMessage(4, scores_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (position_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, position_);
      }
      for (int i = 0; i < scores_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, scores_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.DqIndicator)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.DqIndicator other = (org.openlca.proto.Proto.DqIndicator) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (getPosition()
          != other.getPosition()) return false;
      if (!getScoresList()
          .equals(other.getScoresList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + POSITION_FIELD_NUMBER;
      hash = (53 * hash) + getPosition();
      if (getScoresCount() > 0) {
        hash = (37 * hash) + SCORES_FIELD_NUMBER;
        hash = (53 * hash) + getScoresList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.DqIndicator parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.DqIndicator parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.DqIndicator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.DqIndicator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.DqIndicator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.DqIndicator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.DqIndicator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.DqIndicator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.DqIndicator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.DqIndicator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.DqIndicator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.DqIndicator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.DqIndicator prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * An indicator of a data quality system ([DqSystem]).
     * </pre>
     *
     * Protobuf type {@code protolca.DqIndicator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.DqIndicator)
        org.openlca.proto.Proto.DqIndicatorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_DqIndicator_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_DqIndicator_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.DqIndicator.class, org.openlca.proto.Proto.DqIndicator.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.DqIndicator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getScoresFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        name_ = "";

        position_ = 0;

        if (scoresBuilder_ == null) {
          scores_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          scoresBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_DqIndicator_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.DqIndicator getDefaultInstanceForType() {
        return org.openlca.proto.Proto.DqIndicator.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.DqIndicator build() {
        org.openlca.proto.Proto.DqIndicator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.DqIndicator buildPartial() {
        org.openlca.proto.Proto.DqIndicator result = new org.openlca.proto.Proto.DqIndicator(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.name_ = name_;
        result.position_ = position_;
        if (scoresBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            scores_ = java.util.Collections.unmodifiableList(scores_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.scores_ = scores_;
        } else {
          result.scores_ = scoresBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.DqIndicator) {
          return mergeFrom((org.openlca.proto.Proto.DqIndicator)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.DqIndicator other) {
        if (other == org.openlca.proto.Proto.DqIndicator.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getPosition() != 0) {
          setPosition(other.getPosition());
        }
        if (scoresBuilder_ == null) {
          if (!other.scores_.isEmpty()) {
            if (scores_.isEmpty()) {
              scores_ = other.scores_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureScoresIsMutable();
              scores_.addAll(other.scores_);
            }
            onChanged();
          }
        } else {
          if (!other.scores_.isEmpty()) {
            if (scoresBuilder_.isEmpty()) {
              scoresBuilder_.dispose();
              scoresBuilder_ = null;
              scores_ = other.scores_;
              bitField0_ = (bitField0_ & ~0x00000001);
              scoresBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getScoresFieldBuilder() : null;
            } else {
              scoresBuilder_.addAllMessages(other.scores_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.DqIndicator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.DqIndicator) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int position_ ;
      /**
       * <code>int32 position = 3;</code>
       * @return The position.
       */
      @java.lang.Override
      public int getPosition() {
        return position_;
      }
      /**
       * <code>int32 position = 3;</code>
       * @param value The position to set.
       * @return This builder for chaining.
       */
      public Builder setPosition(int value) {
        
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 position = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPosition() {
        
        position_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.openlca.proto.Proto.DqScore> scores_ =
        java.util.Collections.emptyList();
      private void ensureScoresIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          scores_ = new java.util.ArrayList<org.openlca.proto.Proto.DqScore>(scores_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.DqScore, org.openlca.proto.Proto.DqScore.Builder, org.openlca.proto.Proto.DqScoreOrBuilder> scoresBuilder_;

      /**
       * <code>repeated .protolca.DqScore scores = 4;</code>
       */
      public java.util.List<org.openlca.proto.Proto.DqScore> getScoresList() {
        if (scoresBuilder_ == null) {
          return java.util.Collections.unmodifiableList(scores_);
        } else {
          return scoresBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protolca.DqScore scores = 4;</code>
       */
      public int getScoresCount() {
        if (scoresBuilder_ == null) {
          return scores_.size();
        } else {
          return scoresBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protolca.DqScore scores = 4;</code>
       */
      public org.openlca.proto.Proto.DqScore getScores(int index) {
        if (scoresBuilder_ == null) {
          return scores_.get(index);
        } else {
          return scoresBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protolca.DqScore scores = 4;</code>
       */
      public Builder setScores(
          int index, org.openlca.proto.Proto.DqScore value) {
        if (scoresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScoresIsMutable();
          scores_.set(index, value);
          onChanged();
        } else {
          scoresBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.DqScore scores = 4;</code>
       */
      public Builder setScores(
          int index, org.openlca.proto.Proto.DqScore.Builder builderForValue) {
        if (scoresBuilder_ == null) {
          ensureScoresIsMutable();
          scores_.set(index, builderForValue.build());
          onChanged();
        } else {
          scoresBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.DqScore scores = 4;</code>
       */
      public Builder addScores(org.openlca.proto.Proto.DqScore value) {
        if (scoresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScoresIsMutable();
          scores_.add(value);
          onChanged();
        } else {
          scoresBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.DqScore scores = 4;</code>
       */
      public Builder addScores(
          int index, org.openlca.proto.Proto.DqScore value) {
        if (scoresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScoresIsMutable();
          scores_.add(index, value);
          onChanged();
        } else {
          scoresBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.DqScore scores = 4;</code>
       */
      public Builder addScores(
          org.openlca.proto.Proto.DqScore.Builder builderForValue) {
        if (scoresBuilder_ == null) {
          ensureScoresIsMutable();
          scores_.add(builderForValue.build());
          onChanged();
        } else {
          scoresBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.DqScore scores = 4;</code>
       */
      public Builder addScores(
          int index, org.openlca.proto.Proto.DqScore.Builder builderForValue) {
        if (scoresBuilder_ == null) {
          ensureScoresIsMutable();
          scores_.add(index, builderForValue.build());
          onChanged();
        } else {
          scoresBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.DqScore scores = 4;</code>
       */
      public Builder addAllScores(
          java.lang.Iterable<? extends org.openlca.proto.Proto.DqScore> values) {
        if (scoresBuilder_ == null) {
          ensureScoresIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, scores_);
          onChanged();
        } else {
          scoresBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.DqScore scores = 4;</code>
       */
      public Builder clearScores() {
        if (scoresBuilder_ == null) {
          scores_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          scoresBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protolca.DqScore scores = 4;</code>
       */
      public Builder removeScores(int index) {
        if (scoresBuilder_ == null) {
          ensureScoresIsMutable();
          scores_.remove(index);
          onChanged();
        } else {
          scoresBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.DqScore scores = 4;</code>
       */
      public org.openlca.proto.Proto.DqScore.Builder getScoresBuilder(
          int index) {
        return getScoresFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protolca.DqScore scores = 4;</code>
       */
      public org.openlca.proto.Proto.DqScoreOrBuilder getScoresOrBuilder(
          int index) {
        if (scoresBuilder_ == null) {
          return scores_.get(index);  } else {
          return scoresBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protolca.DqScore scores = 4;</code>
       */
      public java.util.List<? extends org.openlca.proto.Proto.DqScoreOrBuilder> 
           getScoresOrBuilderList() {
        if (scoresBuilder_ != null) {
          return scoresBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(scores_);
        }
      }
      /**
       * <code>repeated .protolca.DqScore scores = 4;</code>
       */
      public org.openlca.proto.Proto.DqScore.Builder addScoresBuilder() {
        return getScoresFieldBuilder().addBuilder(
            org.openlca.proto.Proto.DqScore.getDefaultInstance());
      }
      /**
       * <code>repeated .protolca.DqScore scores = 4;</code>
       */
      public org.openlca.proto.Proto.DqScore.Builder addScoresBuilder(
          int index) {
        return getScoresFieldBuilder().addBuilder(
            index, org.openlca.proto.Proto.DqScore.getDefaultInstance());
      }
      /**
       * <code>repeated .protolca.DqScore scores = 4;</code>
       */
      public java.util.List<org.openlca.proto.Proto.DqScore.Builder> 
           getScoresBuilderList() {
        return getScoresFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.DqScore, org.openlca.proto.Proto.DqScore.Builder, org.openlca.proto.Proto.DqScoreOrBuilder> 
          getScoresFieldBuilder() {
        if (scoresBuilder_ == null) {
          scoresBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.proto.Proto.DqScore, org.openlca.proto.Proto.DqScore.Builder, org.openlca.proto.Proto.DqScoreOrBuilder>(
                  scores_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          scores_ = null;
        }
        return scoresBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.DqIndicator)
    }

    // @@protoc_insertion_point(class_scope:protolca.DqIndicator)
    private static final org.openlca.proto.Proto.DqIndicator DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.DqIndicator();
    }

    public static org.openlca.proto.Proto.DqIndicator getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DqIndicator>
        PARSER = new com.google.protobuf.AbstractParser<DqIndicator>() {
      @java.lang.Override
      public DqIndicator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DqIndicator(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DqIndicator> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DqIndicator> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.DqIndicator getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DqScoreOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.DqScore)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <code>int32 position = 2;</code>
     * @return The position.
     */
    int getPosition();

    /**
     * <code>string label = 3;</code>
     * @return The label.
     */
    java.lang.String getLabel();
    /**
     * <code>string label = 3;</code>
     * @return The bytes for label.
     */
    com.google.protobuf.ByteString
        getLabelBytes();

    /**
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <code>double uncertainty = 5;</code>
     * @return The uncertainty.
     */
    double getUncertainty();
  }
  /**
   * <pre>
   * An score value of an indicator ([DqIndicator]) in a data quality system
   * ([DqSystem]).
   * </pre>
   *
   * Protobuf type {@code protolca.DqScore}
   */
  public static final class DqScore extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.DqScore)
      DqScoreOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DqScore.newBuilder() to construct.
    private DqScore(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DqScore() {
      type_ = "";
      label_ = "";
      description_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DqScore();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DqScore(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 16: {

              position_ = input.readInt32();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              label_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 41: {

              uncertainty_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_DqScore_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_DqScore_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.DqScore.class, org.openlca.proto.Proto.DqScore.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POSITION_FIELD_NUMBER = 2;
    private int position_;
    /**
     * <code>int32 position = 2;</code>
     * @return The position.
     */
    @java.lang.Override
    public int getPosition() {
      return position_;
    }

    public static final int LABEL_FIELD_NUMBER = 3;
    private volatile java.lang.Object label_;
    /**
     * <code>string label = 3;</code>
     * @return The label.
     */
    @java.lang.Override
    public java.lang.String getLabel() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        label_ = s;
        return s;
      }
    }
    /**
     * <code>string label = 3;</code>
     * @return The bytes for label.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLabelBytes() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UNCERTAINTY_FIELD_NUMBER = 5;
    private double uncertainty_;
    /**
     * <code>double uncertainty = 5;</code>
     * @return The uncertainty.
     */
    @java.lang.Override
    public double getUncertainty() {
      return uncertainty_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (position_ != 0) {
        output.writeInt32(2, position_);
      }
      if (!getLabelBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, label_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (uncertainty_ != 0D) {
        output.writeDouble(5, uncertainty_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (position_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, position_);
      }
      if (!getLabelBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, label_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (uncertainty_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, uncertainty_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.DqScore)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.DqScore other = (org.openlca.proto.Proto.DqScore) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (getPosition()
          != other.getPosition()) return false;
      if (!getLabel()
          .equals(other.getLabel())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (java.lang.Double.doubleToLongBits(getUncertainty())
          != java.lang.Double.doubleToLongBits(
              other.getUncertainty())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + POSITION_FIELD_NUMBER;
      hash = (53 * hash) + getPosition();
      hash = (37 * hash) + LABEL_FIELD_NUMBER;
      hash = (53 * hash) + getLabel().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + UNCERTAINTY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getUncertainty()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.DqScore parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.DqScore parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.DqScore parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.DqScore parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.DqScore parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.DqScore parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.DqScore parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.DqScore parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.DqScore parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.DqScore parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.DqScore parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.DqScore parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.DqScore prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * An score value of an indicator ([DqIndicator]) in a data quality system
     * ([DqSystem]).
     * </pre>
     *
     * Protobuf type {@code protolca.DqScore}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.DqScore)
        org.openlca.proto.Proto.DqScoreOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_DqScore_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_DqScore_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.DqScore.class, org.openlca.proto.Proto.DqScore.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.DqScore.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        position_ = 0;

        label_ = "";

        description_ = "";

        uncertainty_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_DqScore_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.DqScore getDefaultInstanceForType() {
        return org.openlca.proto.Proto.DqScore.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.DqScore build() {
        org.openlca.proto.Proto.DqScore result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.DqScore buildPartial() {
        org.openlca.proto.Proto.DqScore result = new org.openlca.proto.Proto.DqScore(this);
        result.type_ = type_;
        result.position_ = position_;
        result.label_ = label_;
        result.description_ = description_;
        result.uncertainty_ = uncertainty_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.DqScore) {
          return mergeFrom((org.openlca.proto.Proto.DqScore)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.DqScore other) {
        if (other == org.openlca.proto.Proto.DqScore.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.getPosition() != 0) {
          setPosition(other.getPosition());
        }
        if (!other.getLabel().isEmpty()) {
          label_ = other.label_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (other.getUncertainty() != 0D) {
          setUncertainty(other.getUncertainty());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.DqScore parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.DqScore) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private int position_ ;
      /**
       * <code>int32 position = 2;</code>
       * @return The position.
       */
      @java.lang.Override
      public int getPosition() {
        return position_;
      }
      /**
       * <code>int32 position = 2;</code>
       * @param value The position to set.
       * @return This builder for chaining.
       */
      public Builder setPosition(int value) {
        
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 position = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPosition() {
        
        position_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object label_ = "";
      /**
       * <code>string label = 3;</code>
       * @return The label.
       */
      public java.lang.String getLabel() {
        java.lang.Object ref = label_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          label_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string label = 3;</code>
       * @return The bytes for label.
       */
      public com.google.protobuf.ByteString
          getLabelBytes() {
        java.lang.Object ref = label_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          label_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string label = 3;</code>
       * @param value The label to set.
       * @return This builder for chaining.
       */
      public Builder setLabel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        label_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string label = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLabel() {
        
        label_ = getDefaultInstance().getLabel();
        onChanged();
        return this;
      }
      /**
       * <code>string label = 3;</code>
       * @param value The bytes for label to set.
       * @return This builder for chaining.
       */
      public Builder setLabelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        label_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private double uncertainty_ ;
      /**
       * <code>double uncertainty = 5;</code>
       * @return The uncertainty.
       */
      @java.lang.Override
      public double getUncertainty() {
        return uncertainty_;
      }
      /**
       * <code>double uncertainty = 5;</code>
       * @param value The uncertainty to set.
       * @return This builder for chaining.
       */
      public Builder setUncertainty(double value) {
        
        uncertainty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double uncertainty = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUncertainty() {
        
        uncertainty_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.DqScore)
    }

    // @@protoc_insertion_point(class_scope:protolca.DqScore)
    private static final org.openlca.proto.Proto.DqScore DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.DqScore();
    }

    public static org.openlca.proto.Proto.DqScore getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DqScore>
        PARSER = new com.google.protobuf.AbstractParser<DqScore>() {
      @java.lang.Override
      public DqScore parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DqScore(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DqScore> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DqScore> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.DqScore getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DqSystemOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.DqSystem)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    boolean hasCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    org.openlca.proto.Proto.Ref getCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder();

    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    java.util.List<java.lang.String>
        getTagsList();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    int getTagsCount();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    java.lang.String getTags(int index);
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);

    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    java.lang.String getLibrary();
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    com.google.protobuf.ByteString
        getLibraryBytes();

    /**
     * <code>bool has_uncertainties = 10;</code>
     * @return The hasUncertainties.
     */
    boolean getHasUncertainties();

    /**
     * <code>.protolca.Ref source = 11;</code>
     * @return Whether the source field is set.
     */
    boolean hasSource();
    /**
     * <code>.protolca.Ref source = 11;</code>
     * @return The source.
     */
    org.openlca.proto.Proto.Ref getSource();
    /**
     * <code>.protolca.Ref source = 11;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getSourceOrBuilder();

    /**
     * <code>repeated .protolca.DqIndicator indicators = 12;</code>
     */
    java.util.List<org.openlca.proto.Proto.DqIndicator> 
        getIndicatorsList();
    /**
     * <code>repeated .protolca.DqIndicator indicators = 12;</code>
     */
    org.openlca.proto.Proto.DqIndicator getIndicators(int index);
    /**
     * <code>repeated .protolca.DqIndicator indicators = 12;</code>
     */
    int getIndicatorsCount();
    /**
     * <code>repeated .protolca.DqIndicator indicators = 12;</code>
     */
    java.util.List<? extends org.openlca.proto.Proto.DqIndicatorOrBuilder> 
        getIndicatorsOrBuilderList();
    /**
     * <code>repeated .protolca.DqIndicator indicators = 12;</code>
     */
    org.openlca.proto.Proto.DqIndicatorOrBuilder getIndicatorsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A data quality system (DQS) in openLCA describes a pedigree matrix of $m$
   * data quality indicators (DQIs) and $n$ data quality scores (DQ scores). Such
   * a system can then be used to assess the data quality of processes and
   * exchanges by tagging them with an instance of the system $D$ where $D$ is a
   * $m * n$ matrix with an entry $d_{ij}$ containing the value of the data
   * quality score $j$ for indicator $i$. As each indicator in $D$ can only have
   * a single score value, $D$ can be stored in a vector $d$ where $d_i$ contains
   * the data quality score for indicator $i$. The possible values of the data
   * quality scores are defined as a linear order $1 &#92;dots n$. In openLCA, the
   * data quality entry $d$ of a process or exchange is stored as a string like
   * `(3;2;4;n.a.;2)` which means the data quality score for the first indicator
   * is `3`, for the second `2` etc. A specific value is `n.a.` which stands for
   * _not applicable_. In calculations, these data quality entries can be
   * aggregated in different ways. For example, the data quality entry of a flow
   * $f$ with a contribution of `0.5 kg` and a data quality entry of
   * `(3;2;4;n.a.;2)` in a process $p$ and a contribution of `1.5 kg` and a data
   * quality entry of `(2;3;1;n.a.;5)` in a process $q$ could be aggregated to
   * `(2;3;2;n.a.;4)` by applying an weighted average and rounding. Finally,
   * custom labels like `A, B, C, ...` or `Very good, Good, Fair, ...` for the DQ
   * scores can be assigned by the user. These labels are then displayed instead
   * of `1, 2, 3 ...` in the user interface or result exports. However,
   * internally the numeric values are used in the data model and calculations.
   * </pre>
   *
   * Protobuf type {@code protolca.DqSystem}
   */
  public static final class DqSystem extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.DqSystem)
      DqSystemOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DqSystem.newBuilder() to construct.
    private DqSystem(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DqSystem() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      library_ = "";
      indicators_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DqSystem();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DqSystem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (category_ != null) {
                subBuilder = category_.toBuilder();
              }
              category_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(category_);
                category_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tags_.add(s);
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              library_ = s;
              break;
            }
            case 80: {

              hasUncertainties_ = input.readBool();
              break;
            }
            case 90: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (source_ != null) {
                subBuilder = source_.toBuilder();
              }
              source_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(source_);
                source_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                indicators_ = new java.util.ArrayList<org.openlca.proto.Proto.DqIndicator>();
                mutable_bitField0_ |= 0x00000002;
              }
              indicators_.add(
                  input.readMessage(org.openlca.proto.Proto.DqIndicator.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          indicators_ = java.util.Collections.unmodifiableList(indicators_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_DqSystem_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_DqSystem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.DqSystem.class, org.openlca.proto.Proto.DqSystem.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.Ref category_;
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    @java.lang.Override
    public boolean hasCategory() {
      return category_ != null;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getCategory() {
      return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
      return getCategory();
    }

    public static final int TAGS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    public static final int LIBRARY_FIELD_NUMBER = 9;
    private volatile java.lang.Object library_;
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    @java.lang.Override
    public java.lang.String getLibrary() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        library_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLibraryBytes() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        library_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HAS_UNCERTAINTIES_FIELD_NUMBER = 10;
    private boolean hasUncertainties_;
    /**
     * <code>bool has_uncertainties = 10;</code>
     * @return The hasUncertainties.
     */
    @java.lang.Override
    public boolean getHasUncertainties() {
      return hasUncertainties_;
    }

    public static final int SOURCE_FIELD_NUMBER = 11;
    private org.openlca.proto.Proto.Ref source_;
    /**
     * <code>.protolca.Ref source = 11;</code>
     * @return Whether the source field is set.
     */
    @java.lang.Override
    public boolean hasSource() {
      return source_ != null;
    }
    /**
     * <code>.protolca.Ref source = 11;</code>
     * @return The source.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getSource() {
      return source_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : source_;
    }
    /**
     * <code>.protolca.Ref source = 11;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getSourceOrBuilder() {
      return getSource();
    }

    public static final int INDICATORS_FIELD_NUMBER = 12;
    private java.util.List<org.openlca.proto.Proto.DqIndicator> indicators_;
    /**
     * <code>repeated .protolca.DqIndicator indicators = 12;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.proto.Proto.DqIndicator> getIndicatorsList() {
      return indicators_;
    }
    /**
     * <code>repeated .protolca.DqIndicator indicators = 12;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.proto.Proto.DqIndicatorOrBuilder> 
        getIndicatorsOrBuilderList() {
      return indicators_;
    }
    /**
     * <code>repeated .protolca.DqIndicator indicators = 12;</code>
     */
    @java.lang.Override
    public int getIndicatorsCount() {
      return indicators_.size();
    }
    /**
     * <code>repeated .protolca.DqIndicator indicators = 12;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.DqIndicator getIndicators(int index) {
      return indicators_.get(index);
    }
    /**
     * <code>repeated .protolca.DqIndicator indicators = 12;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.DqIndicatorOrBuilder getIndicatorsOrBuilder(
        int index) {
      return indicators_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (category_ != null) {
        output.writeMessage(7, getCategory());
      }
      for (int i = 0; i < tags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, tags_.getRaw(i));
      }
      if (!getLibraryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, library_);
      }
      if (hasUncertainties_ != false) {
        output.writeBool(10, hasUncertainties_);
      }
      if (source_ != null) {
        output.writeMessage(11, getSource());
      }
      for (int i = 0; i < indicators_.size(); i++) {
        output.writeMessage(12, indicators_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (category_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCategory());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += computeStringSizeNoTag(tags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      if (!getLibraryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, library_);
      }
      if (hasUncertainties_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, hasUncertainties_);
      }
      if (source_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getSource());
      }
      for (int i = 0; i < indicators_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, indicators_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.DqSystem)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.DqSystem other = (org.openlca.proto.Proto.DqSystem) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (hasCategory() != other.hasCategory()) return false;
      if (hasCategory()) {
        if (!getCategory()
            .equals(other.getCategory())) return false;
      }
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (!getLibrary()
          .equals(other.getLibrary())) return false;
      if (getHasUncertainties()
          != other.getHasUncertainties()) return false;
      if (hasSource() != other.hasSource()) return false;
      if (hasSource()) {
        if (!getSource()
            .equals(other.getSource())) return false;
      }
      if (!getIndicatorsList()
          .equals(other.getIndicatorsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (hasCategory()) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategory().hashCode();
      }
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibrary().hashCode();
      hash = (37 * hash) + HAS_UNCERTAINTIES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHasUncertainties());
      if (hasSource()) {
        hash = (37 * hash) + SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getSource().hashCode();
      }
      if (getIndicatorsCount() > 0) {
        hash = (37 * hash) + INDICATORS_FIELD_NUMBER;
        hash = (53 * hash) + getIndicatorsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.DqSystem parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.DqSystem parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.DqSystem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.DqSystem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.DqSystem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.DqSystem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.DqSystem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.DqSystem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.DqSystem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.DqSystem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.DqSystem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.DqSystem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.DqSystem prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A data quality system (DQS) in openLCA describes a pedigree matrix of $m$
     * data quality indicators (DQIs) and $n$ data quality scores (DQ scores). Such
     * a system can then be used to assess the data quality of processes and
     * exchanges by tagging them with an instance of the system $D$ where $D$ is a
     * $m * n$ matrix with an entry $d_{ij}$ containing the value of the data
     * quality score $j$ for indicator $i$. As each indicator in $D$ can only have
     * a single score value, $D$ can be stored in a vector $d$ where $d_i$ contains
     * the data quality score for indicator $i$. The possible values of the data
     * quality scores are defined as a linear order $1 &#92;dots n$. In openLCA, the
     * data quality entry $d$ of a process or exchange is stored as a string like
     * `(3;2;4;n.a.;2)` which means the data quality score for the first indicator
     * is `3`, for the second `2` etc. A specific value is `n.a.` which stands for
     * _not applicable_. In calculations, these data quality entries can be
     * aggregated in different ways. For example, the data quality entry of a flow
     * $f$ with a contribution of `0.5 kg` and a data quality entry of
     * `(3;2;4;n.a.;2)` in a process $p$ and a contribution of `1.5 kg` and a data
     * quality entry of `(2;3;1;n.a.;5)` in a process $q$ could be aggregated to
     * `(2;3;2;n.a.;4)` by applying an weighted average and rounding. Finally,
     * custom labels like `A, B, C, ...` or `Very good, Good, Fair, ...` for the DQ
     * scores can be assigned by the user. These labels are then displayed instead
     * of `1, 2, 3 ...` in the user interface or result exports. However,
     * internally the numeric values are used in the data model and calculations.
     * </pre>
     *
     * Protobuf type {@code protolca.DqSystem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.DqSystem)
        org.openlca.proto.Proto.DqSystemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_DqSystem_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_DqSystem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.DqSystem.class, org.openlca.proto.Proto.DqSystem.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.DqSystem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getIndicatorsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        if (categoryBuilder_ == null) {
          category_ = null;
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        library_ = "";

        hasUncertainties_ = false;

        if (sourceBuilder_ == null) {
          source_ = null;
        } else {
          source_ = null;
          sourceBuilder_ = null;
        }
        if (indicatorsBuilder_ == null) {
          indicators_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          indicatorsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_DqSystem_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.DqSystem getDefaultInstanceForType() {
        return org.openlca.proto.Proto.DqSystem.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.DqSystem build() {
        org.openlca.proto.Proto.DqSystem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.DqSystem buildPartial() {
        org.openlca.proto.Proto.DqSystem result = new org.openlca.proto.Proto.DqSystem(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (categoryBuilder_ == null) {
          result.category_ = category_;
        } else {
          result.category_ = categoryBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tags_ = tags_;
        result.library_ = library_;
        result.hasUncertainties_ = hasUncertainties_;
        if (sourceBuilder_ == null) {
          result.source_ = source_;
        } else {
          result.source_ = sourceBuilder_.build();
        }
        if (indicatorsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            indicators_ = java.util.Collections.unmodifiableList(indicators_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.indicators_ = indicators_;
        } else {
          result.indicators_ = indicatorsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.DqSystem) {
          return mergeFrom((org.openlca.proto.Proto.DqSystem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.DqSystem other) {
        if (other == org.openlca.proto.Proto.DqSystem.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.hasCategory()) {
          mergeCategory(other.getCategory());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        if (!other.getLibrary().isEmpty()) {
          library_ = other.library_;
          onChanged();
        }
        if (other.getHasUncertainties() != false) {
          setHasUncertainties(other.getHasUncertainties());
        }
        if (other.hasSource()) {
          mergeSource(other.getSource());
        }
        if (indicatorsBuilder_ == null) {
          if (!other.indicators_.isEmpty()) {
            if (indicators_.isEmpty()) {
              indicators_ = other.indicators_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureIndicatorsIsMutable();
              indicators_.addAll(other.indicators_);
            }
            onChanged();
          }
        } else {
          if (!other.indicators_.isEmpty()) {
            if (indicatorsBuilder_.isEmpty()) {
              indicatorsBuilder_.dispose();
              indicatorsBuilder_ = null;
              indicators_ = other.indicators_;
              bitField0_ = (bitField0_ & ~0x00000002);
              indicatorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getIndicatorsFieldBuilder() : null;
            } else {
              indicatorsBuilder_.addAllMessages(other.indicators_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.DqSystem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.DqSystem) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref category_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> categoryBuilder_;
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return Whether the category field is set.
       */
      public boolean hasCategory() {
        return categoryBuilder_ != null || category_ != null;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return The category.
       */
      public org.openlca.proto.Proto.Ref getCategory() {
        if (categoryBuilder_ == null) {
          return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        } else {
          return categoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          category_ = value;
          onChanged();
        } else {
          categoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          category_ = builderForValue.build();
          onChanged();
        } else {
          categoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder mergeCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (category_ != null) {
            category_ =
              org.openlca.proto.Proto.Ref.newBuilder(category_).mergeFrom(value).buildPartial();
          } else {
            category_ = value;
          }
          onChanged();
        } else {
          categoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder clearCategory() {
        if (categoryBuilder_ == null) {
          category_ = null;
          onChanged();
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getCategoryBuilder() {
        
        onChanged();
        return getCategoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
        if (categoryBuilder_ != null) {
          return categoryBuilder_.getMessageOrBuilder();
        } else {
          return category_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getCategoryFieldBuilder() {
        if (categoryBuilder_ == null) {
          categoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getCategory(),
                  getParentForChildren(),
                  isClean());
          category_ = null;
        }
        return categoryBuilder_;
      }

      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return A list containing the tags.
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return The count of tags.
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the element to return.
       * @return The tags at the given index.
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tags at the given index.
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index to set the value at.
       * @param value The tags to set.
       * @return This builder for chaining.
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The tags to add.
       * @return This builder for chaining.
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param values The tags to add.
       * @return This builder for chaining.
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The bytes of the tags to add.
       * @return This builder for chaining.
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object library_ = "";
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The library.
       */
      public java.lang.String getLibrary() {
        java.lang.Object ref = library_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          library_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The bytes for library.
       */
      public com.google.protobuf.ByteString
          getLibraryBytes() {
        java.lang.Object ref = library_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          library_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The library to set.
       * @return This builder for chaining.
       */
      public Builder setLibrary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        library_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLibrary() {
        
        library_ = getDefaultInstance().getLibrary();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The bytes for library to set.
       * @return This builder for chaining.
       */
      public Builder setLibraryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        library_ = value;
        onChanged();
        return this;
      }

      private boolean hasUncertainties_ ;
      /**
       * <code>bool has_uncertainties = 10;</code>
       * @return The hasUncertainties.
       */
      @java.lang.Override
      public boolean getHasUncertainties() {
        return hasUncertainties_;
      }
      /**
       * <code>bool has_uncertainties = 10;</code>
       * @param value The hasUncertainties to set.
       * @return This builder for chaining.
       */
      public Builder setHasUncertainties(boolean value) {
        
        hasUncertainties_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool has_uncertainties = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearHasUncertainties() {
        
        hasUncertainties_ = false;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref source_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> sourceBuilder_;
      /**
       * <code>.protolca.Ref source = 11;</code>
       * @return Whether the source field is set.
       */
      public boolean hasSource() {
        return sourceBuilder_ != null || source_ != null;
      }
      /**
       * <code>.protolca.Ref source = 11;</code>
       * @return The source.
       */
      public org.openlca.proto.Proto.Ref getSource() {
        if (sourceBuilder_ == null) {
          return source_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : source_;
        } else {
          return sourceBuilder_.getMessage();
        }
      }
      /**
       * <code>.protolca.Ref source = 11;</code>
       */
      public Builder setSource(org.openlca.proto.Proto.Ref value) {
        if (sourceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          source_ = value;
          onChanged();
        } else {
          sourceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref source = 11;</code>
       */
      public Builder setSource(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (sourceBuilder_ == null) {
          source_ = builderForValue.build();
          onChanged();
        } else {
          sourceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protolca.Ref source = 11;</code>
       */
      public Builder mergeSource(org.openlca.proto.Proto.Ref value) {
        if (sourceBuilder_ == null) {
          if (source_ != null) {
            source_ =
              org.openlca.proto.Proto.Ref.newBuilder(source_).mergeFrom(value).buildPartial();
          } else {
            source_ = value;
          }
          onChanged();
        } else {
          sourceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref source = 11;</code>
       */
      public Builder clearSource() {
        if (sourceBuilder_ == null) {
          source_ = null;
          onChanged();
        } else {
          source_ = null;
          sourceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protolca.Ref source = 11;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getSourceBuilder() {
        
        onChanged();
        return getSourceFieldBuilder().getBuilder();
      }
      /**
       * <code>.protolca.Ref source = 11;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getSourceOrBuilder() {
        if (sourceBuilder_ != null) {
          return sourceBuilder_.getMessageOrBuilder();
        } else {
          return source_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : source_;
        }
      }
      /**
       * <code>.protolca.Ref source = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getSourceFieldBuilder() {
        if (sourceBuilder_ == null) {
          sourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getSource(),
                  getParentForChildren(),
                  isClean());
          source_ = null;
        }
        return sourceBuilder_;
      }

      private java.util.List<org.openlca.proto.Proto.DqIndicator> indicators_ =
        java.util.Collections.emptyList();
      private void ensureIndicatorsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          indicators_ = new java.util.ArrayList<org.openlca.proto.Proto.DqIndicator>(indicators_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.DqIndicator, org.openlca.proto.Proto.DqIndicator.Builder, org.openlca.proto.Proto.DqIndicatorOrBuilder> indicatorsBuilder_;

      /**
       * <code>repeated .protolca.DqIndicator indicators = 12;</code>
       */
      public java.util.List<org.openlca.proto.Proto.DqIndicator> getIndicatorsList() {
        if (indicatorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(indicators_);
        } else {
          return indicatorsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protolca.DqIndicator indicators = 12;</code>
       */
      public int getIndicatorsCount() {
        if (indicatorsBuilder_ == null) {
          return indicators_.size();
        } else {
          return indicatorsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protolca.DqIndicator indicators = 12;</code>
       */
      public org.openlca.proto.Proto.DqIndicator getIndicators(int index) {
        if (indicatorsBuilder_ == null) {
          return indicators_.get(index);
        } else {
          return indicatorsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protolca.DqIndicator indicators = 12;</code>
       */
      public Builder setIndicators(
          int index, org.openlca.proto.Proto.DqIndicator value) {
        if (indicatorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIndicatorsIsMutable();
          indicators_.set(index, value);
          onChanged();
        } else {
          indicatorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.DqIndicator indicators = 12;</code>
       */
      public Builder setIndicators(
          int index, org.openlca.proto.Proto.DqIndicator.Builder builderForValue) {
        if (indicatorsBuilder_ == null) {
          ensureIndicatorsIsMutable();
          indicators_.set(index, builderForValue.build());
          onChanged();
        } else {
          indicatorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.DqIndicator indicators = 12;</code>
       */
      public Builder addIndicators(org.openlca.proto.Proto.DqIndicator value) {
        if (indicatorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIndicatorsIsMutable();
          indicators_.add(value);
          onChanged();
        } else {
          indicatorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.DqIndicator indicators = 12;</code>
       */
      public Builder addIndicators(
          int index, org.openlca.proto.Proto.DqIndicator value) {
        if (indicatorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIndicatorsIsMutable();
          indicators_.add(index, value);
          onChanged();
        } else {
          indicatorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.DqIndicator indicators = 12;</code>
       */
      public Builder addIndicators(
          org.openlca.proto.Proto.DqIndicator.Builder builderForValue) {
        if (indicatorsBuilder_ == null) {
          ensureIndicatorsIsMutable();
          indicators_.add(builderForValue.build());
          onChanged();
        } else {
          indicatorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.DqIndicator indicators = 12;</code>
       */
      public Builder addIndicators(
          int index, org.openlca.proto.Proto.DqIndicator.Builder builderForValue) {
        if (indicatorsBuilder_ == null) {
          ensureIndicatorsIsMutable();
          indicators_.add(index, builderForValue.build());
          onChanged();
        } else {
          indicatorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.DqIndicator indicators = 12;</code>
       */
      public Builder addAllIndicators(
          java.lang.Iterable<? extends org.openlca.proto.Proto.DqIndicator> values) {
        if (indicatorsBuilder_ == null) {
          ensureIndicatorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, indicators_);
          onChanged();
        } else {
          indicatorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.DqIndicator indicators = 12;</code>
       */
      public Builder clearIndicators() {
        if (indicatorsBuilder_ == null) {
          indicators_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          indicatorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protolca.DqIndicator indicators = 12;</code>
       */
      public Builder removeIndicators(int index) {
        if (indicatorsBuilder_ == null) {
          ensureIndicatorsIsMutable();
          indicators_.remove(index);
          onChanged();
        } else {
          indicatorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.DqIndicator indicators = 12;</code>
       */
      public org.openlca.proto.Proto.DqIndicator.Builder getIndicatorsBuilder(
          int index) {
        return getIndicatorsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protolca.DqIndicator indicators = 12;</code>
       */
      public org.openlca.proto.Proto.DqIndicatorOrBuilder getIndicatorsOrBuilder(
          int index) {
        if (indicatorsBuilder_ == null) {
          return indicators_.get(index);  } else {
          return indicatorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protolca.DqIndicator indicators = 12;</code>
       */
      public java.util.List<? extends org.openlca.proto.Proto.DqIndicatorOrBuilder> 
           getIndicatorsOrBuilderList() {
        if (indicatorsBuilder_ != null) {
          return indicatorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(indicators_);
        }
      }
      /**
       * <code>repeated .protolca.DqIndicator indicators = 12;</code>
       */
      public org.openlca.proto.Proto.DqIndicator.Builder addIndicatorsBuilder() {
        return getIndicatorsFieldBuilder().addBuilder(
            org.openlca.proto.Proto.DqIndicator.getDefaultInstance());
      }
      /**
       * <code>repeated .protolca.DqIndicator indicators = 12;</code>
       */
      public org.openlca.proto.Proto.DqIndicator.Builder addIndicatorsBuilder(
          int index) {
        return getIndicatorsFieldBuilder().addBuilder(
            index, org.openlca.proto.Proto.DqIndicator.getDefaultInstance());
      }
      /**
       * <code>repeated .protolca.DqIndicator indicators = 12;</code>
       */
      public java.util.List<org.openlca.proto.Proto.DqIndicator.Builder> 
           getIndicatorsBuilderList() {
        return getIndicatorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.DqIndicator, org.openlca.proto.Proto.DqIndicator.Builder, org.openlca.proto.Proto.DqIndicatorOrBuilder> 
          getIndicatorsFieldBuilder() {
        if (indicatorsBuilder_ == null) {
          indicatorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.proto.Proto.DqIndicator, org.openlca.proto.Proto.DqIndicator.Builder, org.openlca.proto.Proto.DqIndicatorOrBuilder>(
                  indicators_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          indicators_ = null;
        }
        return indicatorsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.DqSystem)
    }

    // @@protoc_insertion_point(class_scope:protolca.DqSystem)
    private static final org.openlca.proto.Proto.DqSystem DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.DqSystem();
    }

    public static org.openlca.proto.Proto.DqSystem getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DqSystem>
        PARSER = new com.google.protobuf.AbstractParser<DqSystem>() {
      @java.lang.Override
      public DqSystem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DqSystem(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DqSystem> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DqSystem> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.DqSystem getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ExchangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.Exchange)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The process internal ID of the exchange. This is used to identify
     * exchanges unambiguously within a process (e.g. when linking exchanges in a
     * product system where multiple exchanges with the same flow are allowed).
     * The value should be &gt;= 1.
     * </pre>
     *
     * <code>int32 internal_id = 2;</code>
     * @return The internalId.
     */
    int getInternalId();

    /**
     * <pre>
     * Indicates whether this exchange is an avoided product.
     * </pre>
     *
     * <code>bool avoided_product = 3;</code>
     * @return The avoidedProduct.
     */
    boolean getAvoidedProduct();

    /**
     * <pre>
     * The reference to the flow of the exchange.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 4;</code>
     * @return Whether the flow field is set.
     */
    boolean hasFlow();
    /**
     * <pre>
     * The reference to the flow of the exchange.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 4;</code>
     * @return The flow.
     */
    org.openlca.proto.Proto.FlowRef getFlow();
    /**
     * <pre>
     * The reference to the flow of the exchange.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 4;</code>
     */
    org.openlca.proto.Proto.FlowRefOrBuilder getFlowOrBuilder();

    /**
     * <pre>
     * The quantity in which the amount is given.
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 5;</code>
     * @return Whether the flowProperty field is set.
     */
    boolean hasFlowProperty();
    /**
     * <pre>
     * The quantity in which the amount is given.
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 5;</code>
     * @return The flowProperty.
     */
    org.openlca.proto.Proto.Ref getFlowProperty();
    /**
     * <pre>
     * The quantity in which the amount is given.
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 5;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getFlowPropertyOrBuilder();

    /**
     * <code>bool input = 6;</code>
     * @return The input.
     */
    boolean getInput();

    /**
     * <pre>
     * Indicates whether the exchange is the quantitative reference of the
     * process.
     * </pre>
     *
     * <code>bool quantitative_reference = 7;</code>
     * @return The quantitativeReference.
     */
    boolean getQuantitativeReference();

    /**
     * <code>double base_uncertainty = 8;</code>
     * @return The baseUncertainty.
     */
    double getBaseUncertainty();

    /**
     * <pre>
     * A default provider is a [Process] that is linked as the provider of a
     * product input or the waste treatment provider of a waste output. It is
     * just an optional default setting which can be also ignored when building
     * product systems in openLCA. The user is always free to link processes in
     * product systems ignoring these defaults (but the flows and flow directions
     * have to match of course).
     * </pre>
     *
     * <code>.protolca.ProcessRef default_provider = 9;</code>
     * @return Whether the defaultProvider field is set.
     */
    boolean hasDefaultProvider();
    /**
     * <pre>
     * A default provider is a [Process] that is linked as the provider of a
     * product input or the waste treatment provider of a waste output. It is
     * just an optional default setting which can be also ignored when building
     * product systems in openLCA. The user is always free to link processes in
     * product systems ignoring these defaults (but the flows and flow directions
     * have to match of course).
     * </pre>
     *
     * <code>.protolca.ProcessRef default_provider = 9;</code>
     * @return The defaultProvider.
     */
    org.openlca.proto.Proto.ProcessRef getDefaultProvider();
    /**
     * <pre>
     * A default provider is a [Process] that is linked as the provider of a
     * product input or the waste treatment provider of a waste output. It is
     * just an optional default setting which can be also ignored when building
     * product systems in openLCA. The user is always free to link processes in
     * product systems ignoring these defaults (but the flows and flow directions
     * have to match of course).
     * </pre>
     *
     * <code>.protolca.ProcessRef default_provider = 9;</code>
     */
    org.openlca.proto.Proto.ProcessRefOrBuilder getDefaultProviderOrBuilder();

    /**
     * <code>double amount = 10;</code>
     * @return The amount.
     */
    double getAmount();

    /**
     * <code>string amount_formula = 11;</code>
     * @return The amountFormula.
     */
    java.lang.String getAmountFormula();
    /**
     * <code>string amount_formula = 11;</code>
     * @return The bytes for amountFormula.
     */
    com.google.protobuf.ByteString
        getAmountFormulaBytes();

    /**
     * <code>.protolca.Ref unit = 12;</code>
     * @return Whether the unit field is set.
     */
    boolean hasUnit();
    /**
     * <code>.protolca.Ref unit = 12;</code>
     * @return The unit.
     */
    org.openlca.proto.Proto.Ref getUnit();
    /**
     * <code>.protolca.Ref unit = 12;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getUnitOrBuilder();

    /**
     * <pre>
     * A data quality entry like `(1;3;2;5;1)`. The entry is a vector of data
     * quality values that need to match the data quality scheme for flow inputs
     * and outputs that is assigned to the [Process]. In such a scheme the data
     * quality indicators have fixed positions and the respective values in the
     * `dqEntry` vector map to these positions.
     * </pre>
     *
     * <code>string dq_entry = 13;</code>
     * @return The dqEntry.
     */
    java.lang.String getDqEntry();
    /**
     * <pre>
     * A data quality entry like `(1;3;2;5;1)`. The entry is a vector of data
     * quality values that need to match the data quality scheme for flow inputs
     * and outputs that is assigned to the [Process]. In such a scheme the data
     * quality indicators have fixed positions and the respective values in the
     * `dqEntry` vector map to these positions.
     * </pre>
     *
     * <code>string dq_entry = 13;</code>
     * @return The bytes for dqEntry.
     */
    com.google.protobuf.ByteString
        getDqEntryBytes();

    /**
     * <code>.protolca.Uncertainty uncertainty = 14;</code>
     * @return Whether the uncertainty field is set.
     */
    boolean hasUncertainty();
    /**
     * <code>.protolca.Uncertainty uncertainty = 14;</code>
     * @return The uncertainty.
     */
    org.openlca.proto.Proto.Uncertainty getUncertainty();
    /**
     * <code>.protolca.Uncertainty uncertainty = 14;</code>
     */
    org.openlca.proto.Proto.UncertaintyOrBuilder getUncertaintyOrBuilder();

    /**
     * <pre>
     * A general comment about the input or output.
     * </pre>
     *
     * <code>string description = 15;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * A general comment about the input or output.
     * </pre>
     *
     * <code>string description = 15;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();
  }
  /**
   * <pre>
   * An Exchange is an input or output of a [Flow] in a [Process]. The amount of
   * an exchange is given in a specific unit of a quantity ([FlowProperty]) of
   * the flow. The allowed units and flow properties that can be used for a flow
   * in an exchange are defined by the flow property information in that flow
   * (see also the [FlowPropertyFactor] type).
   * </pre>
   *
   * Protobuf type {@code protolca.Exchange}
   */
  public static final class Exchange extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.Exchange)
      ExchangeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Exchange.newBuilder() to construct.
    private Exchange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Exchange() {
      type_ = "";
      amountFormula_ = "";
      dqEntry_ = "";
      description_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Exchange();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Exchange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 16: {

              internalId_ = input.readInt32();
              break;
            }
            case 24: {

              avoidedProduct_ = input.readBool();
              break;
            }
            case 34: {
              org.openlca.proto.Proto.FlowRef.Builder subBuilder = null;
              if (flow_ != null) {
                subBuilder = flow_.toBuilder();
              }
              flow_ = input.readMessage(org.openlca.proto.Proto.FlowRef.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(flow_);
                flow_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (flowProperty_ != null) {
                subBuilder = flowProperty_.toBuilder();
              }
              flowProperty_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(flowProperty_);
                flowProperty_ = subBuilder.buildPartial();
              }

              break;
            }
            case 48: {

              input_ = input.readBool();
              break;
            }
            case 56: {

              quantitativeReference_ = input.readBool();
              break;
            }
            case 65: {

              baseUncertainty_ = input.readDouble();
              break;
            }
            case 74: {
              org.openlca.proto.Proto.ProcessRef.Builder subBuilder = null;
              if (defaultProvider_ != null) {
                subBuilder = defaultProvider_.toBuilder();
              }
              defaultProvider_ = input.readMessage(org.openlca.proto.Proto.ProcessRef.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(defaultProvider_);
                defaultProvider_ = subBuilder.buildPartial();
              }

              break;
            }
            case 81: {

              amount_ = input.readDouble();
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              amountFormula_ = s;
              break;
            }
            case 98: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (unit_ != null) {
                subBuilder = unit_.toBuilder();
              }
              unit_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(unit_);
                unit_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              java.lang.String s = input.readStringRequireUtf8();

              dqEntry_ = s;
              break;
            }
            case 114: {
              org.openlca.proto.Proto.Uncertainty.Builder subBuilder = null;
              if (uncertainty_ != null) {
                subBuilder = uncertainty_.toBuilder();
              }
              uncertainty_ = input.readMessage(org.openlca.proto.Proto.Uncertainty.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(uncertainty_);
                uncertainty_ = subBuilder.buildPartial();
              }

              break;
            }
            case 122: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_Exchange_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_Exchange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.Exchange.class, org.openlca.proto.Proto.Exchange.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INTERNAL_ID_FIELD_NUMBER = 2;
    private int internalId_;
    /**
     * <pre>
     * The process internal ID of the exchange. This is used to identify
     * exchanges unambiguously within a process (e.g. when linking exchanges in a
     * product system where multiple exchanges with the same flow are allowed).
     * The value should be &gt;= 1.
     * </pre>
     *
     * <code>int32 internal_id = 2;</code>
     * @return The internalId.
     */
    @java.lang.Override
    public int getInternalId() {
      return internalId_;
    }

    public static final int AVOIDED_PRODUCT_FIELD_NUMBER = 3;
    private boolean avoidedProduct_;
    /**
     * <pre>
     * Indicates whether this exchange is an avoided product.
     * </pre>
     *
     * <code>bool avoided_product = 3;</code>
     * @return The avoidedProduct.
     */
    @java.lang.Override
    public boolean getAvoidedProduct() {
      return avoidedProduct_;
    }

    public static final int FLOW_FIELD_NUMBER = 4;
    private org.openlca.proto.Proto.FlowRef flow_;
    /**
     * <pre>
     * The reference to the flow of the exchange.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 4;</code>
     * @return Whether the flow field is set.
     */
    @java.lang.Override
    public boolean hasFlow() {
      return flow_ != null;
    }
    /**
     * <pre>
     * The reference to the flow of the exchange.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 4;</code>
     * @return The flow.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.FlowRef getFlow() {
      return flow_ == null ? org.openlca.proto.Proto.FlowRef.getDefaultInstance() : flow_;
    }
    /**
     * <pre>
     * The reference to the flow of the exchange.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 4;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.FlowRefOrBuilder getFlowOrBuilder() {
      return getFlow();
    }

    public static final int FLOW_PROPERTY_FIELD_NUMBER = 5;
    private org.openlca.proto.Proto.Ref flowProperty_;
    /**
     * <pre>
     * The quantity in which the amount is given.
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 5;</code>
     * @return Whether the flowProperty field is set.
     */
    @java.lang.Override
    public boolean hasFlowProperty() {
      return flowProperty_ != null;
    }
    /**
     * <pre>
     * The quantity in which the amount is given.
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 5;</code>
     * @return The flowProperty.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getFlowProperty() {
      return flowProperty_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : flowProperty_;
    }
    /**
     * <pre>
     * The quantity in which the amount is given.
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 5;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getFlowPropertyOrBuilder() {
      return getFlowProperty();
    }

    public static final int INPUT_FIELD_NUMBER = 6;
    private boolean input_;
    /**
     * <code>bool input = 6;</code>
     * @return The input.
     */
    @java.lang.Override
    public boolean getInput() {
      return input_;
    }

    public static final int QUANTITATIVE_REFERENCE_FIELD_NUMBER = 7;
    private boolean quantitativeReference_;
    /**
     * <pre>
     * Indicates whether the exchange is the quantitative reference of the
     * process.
     * </pre>
     *
     * <code>bool quantitative_reference = 7;</code>
     * @return The quantitativeReference.
     */
    @java.lang.Override
    public boolean getQuantitativeReference() {
      return quantitativeReference_;
    }

    public static final int BASE_UNCERTAINTY_FIELD_NUMBER = 8;
    private double baseUncertainty_;
    /**
     * <code>double base_uncertainty = 8;</code>
     * @return The baseUncertainty.
     */
    @java.lang.Override
    public double getBaseUncertainty() {
      return baseUncertainty_;
    }

    public static final int DEFAULT_PROVIDER_FIELD_NUMBER = 9;
    private org.openlca.proto.Proto.ProcessRef defaultProvider_;
    /**
     * <pre>
     * A default provider is a [Process] that is linked as the provider of a
     * product input or the waste treatment provider of a waste output. It is
     * just an optional default setting which can be also ignored when building
     * product systems in openLCA. The user is always free to link processes in
     * product systems ignoring these defaults (but the flows and flow directions
     * have to match of course).
     * </pre>
     *
     * <code>.protolca.ProcessRef default_provider = 9;</code>
     * @return Whether the defaultProvider field is set.
     */
    @java.lang.Override
    public boolean hasDefaultProvider() {
      return defaultProvider_ != null;
    }
    /**
     * <pre>
     * A default provider is a [Process] that is linked as the provider of a
     * product input or the waste treatment provider of a waste output. It is
     * just an optional default setting which can be also ignored when building
     * product systems in openLCA. The user is always free to link processes in
     * product systems ignoring these defaults (but the flows and flow directions
     * have to match of course).
     * </pre>
     *
     * <code>.protolca.ProcessRef default_provider = 9;</code>
     * @return The defaultProvider.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ProcessRef getDefaultProvider() {
      return defaultProvider_ == null ? org.openlca.proto.Proto.ProcessRef.getDefaultInstance() : defaultProvider_;
    }
    /**
     * <pre>
     * A default provider is a [Process] that is linked as the provider of a
     * product input or the waste treatment provider of a waste output. It is
     * just an optional default setting which can be also ignored when building
     * product systems in openLCA. The user is always free to link processes in
     * product systems ignoring these defaults (but the flows and flow directions
     * have to match of course).
     * </pre>
     *
     * <code>.protolca.ProcessRef default_provider = 9;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ProcessRefOrBuilder getDefaultProviderOrBuilder() {
      return getDefaultProvider();
    }

    public static final int AMOUNT_FIELD_NUMBER = 10;
    private double amount_;
    /**
     * <code>double amount = 10;</code>
     * @return The amount.
     */
    @java.lang.Override
    public double getAmount() {
      return amount_;
    }

    public static final int AMOUNT_FORMULA_FIELD_NUMBER = 11;
    private volatile java.lang.Object amountFormula_;
    /**
     * <code>string amount_formula = 11;</code>
     * @return The amountFormula.
     */
    @java.lang.Override
    public java.lang.String getAmountFormula() {
      java.lang.Object ref = amountFormula_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        amountFormula_ = s;
        return s;
      }
    }
    /**
     * <code>string amount_formula = 11;</code>
     * @return The bytes for amountFormula.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAmountFormulaBytes() {
      java.lang.Object ref = amountFormula_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        amountFormula_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UNIT_FIELD_NUMBER = 12;
    private org.openlca.proto.Proto.Ref unit_;
    /**
     * <code>.protolca.Ref unit = 12;</code>
     * @return Whether the unit field is set.
     */
    @java.lang.Override
    public boolean hasUnit() {
      return unit_ != null;
    }
    /**
     * <code>.protolca.Ref unit = 12;</code>
     * @return The unit.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getUnit() {
      return unit_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : unit_;
    }
    /**
     * <code>.protolca.Ref unit = 12;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getUnitOrBuilder() {
      return getUnit();
    }

    public static final int DQ_ENTRY_FIELD_NUMBER = 13;
    private volatile java.lang.Object dqEntry_;
    /**
     * <pre>
     * A data quality entry like `(1;3;2;5;1)`. The entry is a vector of data
     * quality values that need to match the data quality scheme for flow inputs
     * and outputs that is assigned to the [Process]. In such a scheme the data
     * quality indicators have fixed positions and the respective values in the
     * `dqEntry` vector map to these positions.
     * </pre>
     *
     * <code>string dq_entry = 13;</code>
     * @return The dqEntry.
     */
    @java.lang.Override
    public java.lang.String getDqEntry() {
      java.lang.Object ref = dqEntry_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dqEntry_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A data quality entry like `(1;3;2;5;1)`. The entry is a vector of data
     * quality values that need to match the data quality scheme for flow inputs
     * and outputs that is assigned to the [Process]. In such a scheme the data
     * quality indicators have fixed positions and the respective values in the
     * `dqEntry` vector map to these positions.
     * </pre>
     *
     * <code>string dq_entry = 13;</code>
     * @return The bytes for dqEntry.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDqEntryBytes() {
      java.lang.Object ref = dqEntry_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dqEntry_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UNCERTAINTY_FIELD_NUMBER = 14;
    private org.openlca.proto.Proto.Uncertainty uncertainty_;
    /**
     * <code>.protolca.Uncertainty uncertainty = 14;</code>
     * @return Whether the uncertainty field is set.
     */
    @java.lang.Override
    public boolean hasUncertainty() {
      return uncertainty_ != null;
    }
    /**
     * <code>.protolca.Uncertainty uncertainty = 14;</code>
     * @return The uncertainty.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Uncertainty getUncertainty() {
      return uncertainty_ == null ? org.openlca.proto.Proto.Uncertainty.getDefaultInstance() : uncertainty_;
    }
    /**
     * <code>.protolca.Uncertainty uncertainty = 14;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.UncertaintyOrBuilder getUncertaintyOrBuilder() {
      return getUncertainty();
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 15;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * A general comment about the input or output.
     * </pre>
     *
     * <code>string description = 15;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A general comment about the input or output.
     * </pre>
     *
     * <code>string description = 15;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (internalId_ != 0) {
        output.writeInt32(2, internalId_);
      }
      if (avoidedProduct_ != false) {
        output.writeBool(3, avoidedProduct_);
      }
      if (flow_ != null) {
        output.writeMessage(4, getFlow());
      }
      if (flowProperty_ != null) {
        output.writeMessage(5, getFlowProperty());
      }
      if (input_ != false) {
        output.writeBool(6, input_);
      }
      if (quantitativeReference_ != false) {
        output.writeBool(7, quantitativeReference_);
      }
      if (baseUncertainty_ != 0D) {
        output.writeDouble(8, baseUncertainty_);
      }
      if (defaultProvider_ != null) {
        output.writeMessage(9, getDefaultProvider());
      }
      if (amount_ != 0D) {
        output.writeDouble(10, amount_);
      }
      if (!getAmountFormulaBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, amountFormula_);
      }
      if (unit_ != null) {
        output.writeMessage(12, getUnit());
      }
      if (!getDqEntryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, dqEntry_);
      }
      if (uncertainty_ != null) {
        output.writeMessage(14, getUncertainty());
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, description_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (internalId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, internalId_);
      }
      if (avoidedProduct_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, avoidedProduct_);
      }
      if (flow_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getFlow());
      }
      if (flowProperty_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getFlowProperty());
      }
      if (input_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, input_);
      }
      if (quantitativeReference_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, quantitativeReference_);
      }
      if (baseUncertainty_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, baseUncertainty_);
      }
      if (defaultProvider_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getDefaultProvider());
      }
      if (amount_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, amount_);
      }
      if (!getAmountFormulaBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, amountFormula_);
      }
      if (unit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getUnit());
      }
      if (!getDqEntryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, dqEntry_);
      }
      if (uncertainty_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getUncertainty());
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, description_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.Exchange)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.Exchange other = (org.openlca.proto.Proto.Exchange) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (getInternalId()
          != other.getInternalId()) return false;
      if (getAvoidedProduct()
          != other.getAvoidedProduct()) return false;
      if (hasFlow() != other.hasFlow()) return false;
      if (hasFlow()) {
        if (!getFlow()
            .equals(other.getFlow())) return false;
      }
      if (hasFlowProperty() != other.hasFlowProperty()) return false;
      if (hasFlowProperty()) {
        if (!getFlowProperty()
            .equals(other.getFlowProperty())) return false;
      }
      if (getInput()
          != other.getInput()) return false;
      if (getQuantitativeReference()
          != other.getQuantitativeReference()) return false;
      if (java.lang.Double.doubleToLongBits(getBaseUncertainty())
          != java.lang.Double.doubleToLongBits(
              other.getBaseUncertainty())) return false;
      if (hasDefaultProvider() != other.hasDefaultProvider()) return false;
      if (hasDefaultProvider()) {
        if (!getDefaultProvider()
            .equals(other.getDefaultProvider())) return false;
      }
      if (java.lang.Double.doubleToLongBits(getAmount())
          != java.lang.Double.doubleToLongBits(
              other.getAmount())) return false;
      if (!getAmountFormula()
          .equals(other.getAmountFormula())) return false;
      if (hasUnit() != other.hasUnit()) return false;
      if (hasUnit()) {
        if (!getUnit()
            .equals(other.getUnit())) return false;
      }
      if (!getDqEntry()
          .equals(other.getDqEntry())) return false;
      if (hasUncertainty() != other.hasUncertainty()) return false;
      if (hasUncertainty()) {
        if (!getUncertainty()
            .equals(other.getUncertainty())) return false;
      }
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + INTERNAL_ID_FIELD_NUMBER;
      hash = (53 * hash) + getInternalId();
      hash = (37 * hash) + AVOIDED_PRODUCT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAvoidedProduct());
      if (hasFlow()) {
        hash = (37 * hash) + FLOW_FIELD_NUMBER;
        hash = (53 * hash) + getFlow().hashCode();
      }
      if (hasFlowProperty()) {
        hash = (37 * hash) + FLOW_PROPERTY_FIELD_NUMBER;
        hash = (53 * hash) + getFlowProperty().hashCode();
      }
      hash = (37 * hash) + INPUT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getInput());
      hash = (37 * hash) + QUANTITATIVE_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getQuantitativeReference());
      hash = (37 * hash) + BASE_UNCERTAINTY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBaseUncertainty()));
      if (hasDefaultProvider()) {
        hash = (37 * hash) + DEFAULT_PROVIDER_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultProvider().hashCode();
      }
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAmount()));
      hash = (37 * hash) + AMOUNT_FORMULA_FIELD_NUMBER;
      hash = (53 * hash) + getAmountFormula().hashCode();
      if (hasUnit()) {
        hash = (37 * hash) + UNIT_FIELD_NUMBER;
        hash = (53 * hash) + getUnit().hashCode();
      }
      hash = (37 * hash) + DQ_ENTRY_FIELD_NUMBER;
      hash = (53 * hash) + getDqEntry().hashCode();
      if (hasUncertainty()) {
        hash = (37 * hash) + UNCERTAINTY_FIELD_NUMBER;
        hash = (53 * hash) + getUncertainty().hashCode();
      }
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.Exchange parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Exchange parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Exchange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Exchange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Exchange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Exchange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Exchange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Exchange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Exchange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Exchange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Exchange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Exchange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.Exchange prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * An Exchange is an input or output of a [Flow] in a [Process]. The amount of
     * an exchange is given in a specific unit of a quantity ([FlowProperty]) of
     * the flow. The allowed units and flow properties that can be used for a flow
     * in an exchange are defined by the flow property information in that flow
     * (see also the [FlowPropertyFactor] type).
     * </pre>
     *
     * Protobuf type {@code protolca.Exchange}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.Exchange)
        org.openlca.proto.Proto.ExchangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_Exchange_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_Exchange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.Exchange.class, org.openlca.proto.Proto.Exchange.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.Exchange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        internalId_ = 0;

        avoidedProduct_ = false;

        if (flowBuilder_ == null) {
          flow_ = null;
        } else {
          flow_ = null;
          flowBuilder_ = null;
        }
        if (flowPropertyBuilder_ == null) {
          flowProperty_ = null;
        } else {
          flowProperty_ = null;
          flowPropertyBuilder_ = null;
        }
        input_ = false;

        quantitativeReference_ = false;

        baseUncertainty_ = 0D;

        if (defaultProviderBuilder_ == null) {
          defaultProvider_ = null;
        } else {
          defaultProvider_ = null;
          defaultProviderBuilder_ = null;
        }
        amount_ = 0D;

        amountFormula_ = "";

        if (unitBuilder_ == null) {
          unit_ = null;
        } else {
          unit_ = null;
          unitBuilder_ = null;
        }
        dqEntry_ = "";

        if (uncertaintyBuilder_ == null) {
          uncertainty_ = null;
        } else {
          uncertainty_ = null;
          uncertaintyBuilder_ = null;
        }
        description_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_Exchange_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Exchange getDefaultInstanceForType() {
        return org.openlca.proto.Proto.Exchange.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Exchange build() {
        org.openlca.proto.Proto.Exchange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Exchange buildPartial() {
        org.openlca.proto.Proto.Exchange result = new org.openlca.proto.Proto.Exchange(this);
        result.type_ = type_;
        result.internalId_ = internalId_;
        result.avoidedProduct_ = avoidedProduct_;
        if (flowBuilder_ == null) {
          result.flow_ = flow_;
        } else {
          result.flow_ = flowBuilder_.build();
        }
        if (flowPropertyBuilder_ == null) {
          result.flowProperty_ = flowProperty_;
        } else {
          result.flowProperty_ = flowPropertyBuilder_.build();
        }
        result.input_ = input_;
        result.quantitativeReference_ = quantitativeReference_;
        result.baseUncertainty_ = baseUncertainty_;
        if (defaultProviderBuilder_ == null) {
          result.defaultProvider_ = defaultProvider_;
        } else {
          result.defaultProvider_ = defaultProviderBuilder_.build();
        }
        result.amount_ = amount_;
        result.amountFormula_ = amountFormula_;
        if (unitBuilder_ == null) {
          result.unit_ = unit_;
        } else {
          result.unit_ = unitBuilder_.build();
        }
        result.dqEntry_ = dqEntry_;
        if (uncertaintyBuilder_ == null) {
          result.uncertainty_ = uncertainty_;
        } else {
          result.uncertainty_ = uncertaintyBuilder_.build();
        }
        result.description_ = description_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.Exchange) {
          return mergeFrom((org.openlca.proto.Proto.Exchange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.Exchange other) {
        if (other == org.openlca.proto.Proto.Exchange.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.getInternalId() != 0) {
          setInternalId(other.getInternalId());
        }
        if (other.getAvoidedProduct() != false) {
          setAvoidedProduct(other.getAvoidedProduct());
        }
        if (other.hasFlow()) {
          mergeFlow(other.getFlow());
        }
        if (other.hasFlowProperty()) {
          mergeFlowProperty(other.getFlowProperty());
        }
        if (other.getInput() != false) {
          setInput(other.getInput());
        }
        if (other.getQuantitativeReference() != false) {
          setQuantitativeReference(other.getQuantitativeReference());
        }
        if (other.getBaseUncertainty() != 0D) {
          setBaseUncertainty(other.getBaseUncertainty());
        }
        if (other.hasDefaultProvider()) {
          mergeDefaultProvider(other.getDefaultProvider());
        }
        if (other.getAmount() != 0D) {
          setAmount(other.getAmount());
        }
        if (!other.getAmountFormula().isEmpty()) {
          amountFormula_ = other.amountFormula_;
          onChanged();
        }
        if (other.hasUnit()) {
          mergeUnit(other.getUnit());
        }
        if (!other.getDqEntry().isEmpty()) {
          dqEntry_ = other.dqEntry_;
          onChanged();
        }
        if (other.hasUncertainty()) {
          mergeUncertainty(other.getUncertainty());
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.Exchange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.Exchange) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private int internalId_ ;
      /**
       * <pre>
       * The process internal ID of the exchange. This is used to identify
       * exchanges unambiguously within a process (e.g. when linking exchanges in a
       * product system where multiple exchanges with the same flow are allowed).
       * The value should be &gt;= 1.
       * </pre>
       *
       * <code>int32 internal_id = 2;</code>
       * @return The internalId.
       */
      @java.lang.Override
      public int getInternalId() {
        return internalId_;
      }
      /**
       * <pre>
       * The process internal ID of the exchange. This is used to identify
       * exchanges unambiguously within a process (e.g. when linking exchanges in a
       * product system where multiple exchanges with the same flow are allowed).
       * The value should be &gt;= 1.
       * </pre>
       *
       * <code>int32 internal_id = 2;</code>
       * @param value The internalId to set.
       * @return This builder for chaining.
       */
      public Builder setInternalId(int value) {
        
        internalId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The process internal ID of the exchange. This is used to identify
       * exchanges unambiguously within a process (e.g. when linking exchanges in a
       * product system where multiple exchanges with the same flow are allowed).
       * The value should be &gt;= 1.
       * </pre>
       *
       * <code>int32 internal_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearInternalId() {
        
        internalId_ = 0;
        onChanged();
        return this;
      }

      private boolean avoidedProduct_ ;
      /**
       * <pre>
       * Indicates whether this exchange is an avoided product.
       * </pre>
       *
       * <code>bool avoided_product = 3;</code>
       * @return The avoidedProduct.
       */
      @java.lang.Override
      public boolean getAvoidedProduct() {
        return avoidedProduct_;
      }
      /**
       * <pre>
       * Indicates whether this exchange is an avoided product.
       * </pre>
       *
       * <code>bool avoided_product = 3;</code>
       * @param value The avoidedProduct to set.
       * @return This builder for chaining.
       */
      public Builder setAvoidedProduct(boolean value) {
        
        avoidedProduct_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates whether this exchange is an avoided product.
       * </pre>
       *
       * <code>bool avoided_product = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAvoidedProduct() {
        
        avoidedProduct_ = false;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.FlowRef flow_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.FlowRef, org.openlca.proto.Proto.FlowRef.Builder, org.openlca.proto.Proto.FlowRefOrBuilder> flowBuilder_;
      /**
       * <pre>
       * The reference to the flow of the exchange.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 4;</code>
       * @return Whether the flow field is set.
       */
      public boolean hasFlow() {
        return flowBuilder_ != null || flow_ != null;
      }
      /**
       * <pre>
       * The reference to the flow of the exchange.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 4;</code>
       * @return The flow.
       */
      public org.openlca.proto.Proto.FlowRef getFlow() {
        if (flowBuilder_ == null) {
          return flow_ == null ? org.openlca.proto.Proto.FlowRef.getDefaultInstance() : flow_;
        } else {
          return flowBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The reference to the flow of the exchange.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 4;</code>
       */
      public Builder setFlow(org.openlca.proto.Proto.FlowRef value) {
        if (flowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          flow_ = value;
          onChanged();
        } else {
          flowBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The reference to the flow of the exchange.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 4;</code>
       */
      public Builder setFlow(
          org.openlca.proto.Proto.FlowRef.Builder builderForValue) {
        if (flowBuilder_ == null) {
          flow_ = builderForValue.build();
          onChanged();
        } else {
          flowBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The reference to the flow of the exchange.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 4;</code>
       */
      public Builder mergeFlow(org.openlca.proto.Proto.FlowRef value) {
        if (flowBuilder_ == null) {
          if (flow_ != null) {
            flow_ =
              org.openlca.proto.Proto.FlowRef.newBuilder(flow_).mergeFrom(value).buildPartial();
          } else {
            flow_ = value;
          }
          onChanged();
        } else {
          flowBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The reference to the flow of the exchange.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 4;</code>
       */
      public Builder clearFlow() {
        if (flowBuilder_ == null) {
          flow_ = null;
          onChanged();
        } else {
          flow_ = null;
          flowBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The reference to the flow of the exchange.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 4;</code>
       */
      public org.openlca.proto.Proto.FlowRef.Builder getFlowBuilder() {
        
        onChanged();
        return getFlowFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The reference to the flow of the exchange.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 4;</code>
       */
      public org.openlca.proto.Proto.FlowRefOrBuilder getFlowOrBuilder() {
        if (flowBuilder_ != null) {
          return flowBuilder_.getMessageOrBuilder();
        } else {
          return flow_ == null ?
              org.openlca.proto.Proto.FlowRef.getDefaultInstance() : flow_;
        }
      }
      /**
       * <pre>
       * The reference to the flow of the exchange.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.FlowRef, org.openlca.proto.Proto.FlowRef.Builder, org.openlca.proto.Proto.FlowRefOrBuilder> 
          getFlowFieldBuilder() {
        if (flowBuilder_ == null) {
          flowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.FlowRef, org.openlca.proto.Proto.FlowRef.Builder, org.openlca.proto.Proto.FlowRefOrBuilder>(
                  getFlow(),
                  getParentForChildren(),
                  isClean());
          flow_ = null;
        }
        return flowBuilder_;
      }

      private org.openlca.proto.Proto.Ref flowProperty_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> flowPropertyBuilder_;
      /**
       * <pre>
       * The quantity in which the amount is given.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 5;</code>
       * @return Whether the flowProperty field is set.
       */
      public boolean hasFlowProperty() {
        return flowPropertyBuilder_ != null || flowProperty_ != null;
      }
      /**
       * <pre>
       * The quantity in which the amount is given.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 5;</code>
       * @return The flowProperty.
       */
      public org.openlca.proto.Proto.Ref getFlowProperty() {
        if (flowPropertyBuilder_ == null) {
          return flowProperty_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : flowProperty_;
        } else {
          return flowPropertyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The quantity in which the amount is given.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 5;</code>
       */
      public Builder setFlowProperty(org.openlca.proto.Proto.Ref value) {
        if (flowPropertyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          flowProperty_ = value;
          onChanged();
        } else {
          flowPropertyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The quantity in which the amount is given.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 5;</code>
       */
      public Builder setFlowProperty(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (flowPropertyBuilder_ == null) {
          flowProperty_ = builderForValue.build();
          onChanged();
        } else {
          flowPropertyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The quantity in which the amount is given.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 5;</code>
       */
      public Builder mergeFlowProperty(org.openlca.proto.Proto.Ref value) {
        if (flowPropertyBuilder_ == null) {
          if (flowProperty_ != null) {
            flowProperty_ =
              org.openlca.proto.Proto.Ref.newBuilder(flowProperty_).mergeFrom(value).buildPartial();
          } else {
            flowProperty_ = value;
          }
          onChanged();
        } else {
          flowPropertyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The quantity in which the amount is given.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 5;</code>
       */
      public Builder clearFlowProperty() {
        if (flowPropertyBuilder_ == null) {
          flowProperty_ = null;
          onChanged();
        } else {
          flowProperty_ = null;
          flowPropertyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The quantity in which the amount is given.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 5;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getFlowPropertyBuilder() {
        
        onChanged();
        return getFlowPropertyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The quantity in which the amount is given.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 5;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getFlowPropertyOrBuilder() {
        if (flowPropertyBuilder_ != null) {
          return flowPropertyBuilder_.getMessageOrBuilder();
        } else {
          return flowProperty_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : flowProperty_;
        }
      }
      /**
       * <pre>
       * The quantity in which the amount is given.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getFlowPropertyFieldBuilder() {
        if (flowPropertyBuilder_ == null) {
          flowPropertyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getFlowProperty(),
                  getParentForChildren(),
                  isClean());
          flowProperty_ = null;
        }
        return flowPropertyBuilder_;
      }

      private boolean input_ ;
      /**
       * <code>bool input = 6;</code>
       * @return The input.
       */
      @java.lang.Override
      public boolean getInput() {
        return input_;
      }
      /**
       * <code>bool input = 6;</code>
       * @param value The input to set.
       * @return This builder for chaining.
       */
      public Builder setInput(boolean value) {
        
        input_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool input = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearInput() {
        
        input_ = false;
        onChanged();
        return this;
      }

      private boolean quantitativeReference_ ;
      /**
       * <pre>
       * Indicates whether the exchange is the quantitative reference of the
       * process.
       * </pre>
       *
       * <code>bool quantitative_reference = 7;</code>
       * @return The quantitativeReference.
       */
      @java.lang.Override
      public boolean getQuantitativeReference() {
        return quantitativeReference_;
      }
      /**
       * <pre>
       * Indicates whether the exchange is the quantitative reference of the
       * process.
       * </pre>
       *
       * <code>bool quantitative_reference = 7;</code>
       * @param value The quantitativeReference to set.
       * @return This builder for chaining.
       */
      public Builder setQuantitativeReference(boolean value) {
        
        quantitativeReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates whether the exchange is the quantitative reference of the
       * process.
       * </pre>
       *
       * <code>bool quantitative_reference = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearQuantitativeReference() {
        
        quantitativeReference_ = false;
        onChanged();
        return this;
      }

      private double baseUncertainty_ ;
      /**
       * <code>double base_uncertainty = 8;</code>
       * @return The baseUncertainty.
       */
      @java.lang.Override
      public double getBaseUncertainty() {
        return baseUncertainty_;
      }
      /**
       * <code>double base_uncertainty = 8;</code>
       * @param value The baseUncertainty to set.
       * @return This builder for chaining.
       */
      public Builder setBaseUncertainty(double value) {
        
        baseUncertainty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double base_uncertainty = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearBaseUncertainty() {
        
        baseUncertainty_ = 0D;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.ProcessRef defaultProvider_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.ProcessRef, org.openlca.proto.Proto.ProcessRef.Builder, org.openlca.proto.Proto.ProcessRefOrBuilder> defaultProviderBuilder_;
      /**
       * <pre>
       * A default provider is a [Process] that is linked as the provider of a
       * product input or the waste treatment provider of a waste output. It is
       * just an optional default setting which can be also ignored when building
       * product systems in openLCA. The user is always free to link processes in
       * product systems ignoring these defaults (but the flows and flow directions
       * have to match of course).
       * </pre>
       *
       * <code>.protolca.ProcessRef default_provider = 9;</code>
       * @return Whether the defaultProvider field is set.
       */
      public boolean hasDefaultProvider() {
        return defaultProviderBuilder_ != null || defaultProvider_ != null;
      }
      /**
       * <pre>
       * A default provider is a [Process] that is linked as the provider of a
       * product input or the waste treatment provider of a waste output. It is
       * just an optional default setting which can be also ignored when building
       * product systems in openLCA. The user is always free to link processes in
       * product systems ignoring these defaults (but the flows and flow directions
       * have to match of course).
       * </pre>
       *
       * <code>.protolca.ProcessRef default_provider = 9;</code>
       * @return The defaultProvider.
       */
      public org.openlca.proto.Proto.ProcessRef getDefaultProvider() {
        if (defaultProviderBuilder_ == null) {
          return defaultProvider_ == null ? org.openlca.proto.Proto.ProcessRef.getDefaultInstance() : defaultProvider_;
        } else {
          return defaultProviderBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * A default provider is a [Process] that is linked as the provider of a
       * product input or the waste treatment provider of a waste output. It is
       * just an optional default setting which can be also ignored when building
       * product systems in openLCA. The user is always free to link processes in
       * product systems ignoring these defaults (but the flows and flow directions
       * have to match of course).
       * </pre>
       *
       * <code>.protolca.ProcessRef default_provider = 9;</code>
       */
      public Builder setDefaultProvider(org.openlca.proto.Proto.ProcessRef value) {
        if (defaultProviderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          defaultProvider_ = value;
          onChanged();
        } else {
          defaultProviderBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * A default provider is a [Process] that is linked as the provider of a
       * product input or the waste treatment provider of a waste output. It is
       * just an optional default setting which can be also ignored when building
       * product systems in openLCA. The user is always free to link processes in
       * product systems ignoring these defaults (but the flows and flow directions
       * have to match of course).
       * </pre>
       *
       * <code>.protolca.ProcessRef default_provider = 9;</code>
       */
      public Builder setDefaultProvider(
          org.openlca.proto.Proto.ProcessRef.Builder builderForValue) {
        if (defaultProviderBuilder_ == null) {
          defaultProvider_ = builderForValue.build();
          onChanged();
        } else {
          defaultProviderBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * A default provider is a [Process] that is linked as the provider of a
       * product input or the waste treatment provider of a waste output. It is
       * just an optional default setting which can be also ignored when building
       * product systems in openLCA. The user is always free to link processes in
       * product systems ignoring these defaults (but the flows and flow directions
       * have to match of course).
       * </pre>
       *
       * <code>.protolca.ProcessRef default_provider = 9;</code>
       */
      public Builder mergeDefaultProvider(org.openlca.proto.Proto.ProcessRef value) {
        if (defaultProviderBuilder_ == null) {
          if (defaultProvider_ != null) {
            defaultProvider_ =
              org.openlca.proto.Proto.ProcessRef.newBuilder(defaultProvider_).mergeFrom(value).buildPartial();
          } else {
            defaultProvider_ = value;
          }
          onChanged();
        } else {
          defaultProviderBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * A default provider is a [Process] that is linked as the provider of a
       * product input or the waste treatment provider of a waste output. It is
       * just an optional default setting which can be also ignored when building
       * product systems in openLCA. The user is always free to link processes in
       * product systems ignoring these defaults (but the flows and flow directions
       * have to match of course).
       * </pre>
       *
       * <code>.protolca.ProcessRef default_provider = 9;</code>
       */
      public Builder clearDefaultProvider() {
        if (defaultProviderBuilder_ == null) {
          defaultProvider_ = null;
          onChanged();
        } else {
          defaultProvider_ = null;
          defaultProviderBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * A default provider is a [Process] that is linked as the provider of a
       * product input or the waste treatment provider of a waste output. It is
       * just an optional default setting which can be also ignored when building
       * product systems in openLCA. The user is always free to link processes in
       * product systems ignoring these defaults (but the flows and flow directions
       * have to match of course).
       * </pre>
       *
       * <code>.protolca.ProcessRef default_provider = 9;</code>
       */
      public org.openlca.proto.Proto.ProcessRef.Builder getDefaultProviderBuilder() {
        
        onChanged();
        return getDefaultProviderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A default provider is a [Process] that is linked as the provider of a
       * product input or the waste treatment provider of a waste output. It is
       * just an optional default setting which can be also ignored when building
       * product systems in openLCA. The user is always free to link processes in
       * product systems ignoring these defaults (but the flows and flow directions
       * have to match of course).
       * </pre>
       *
       * <code>.protolca.ProcessRef default_provider = 9;</code>
       */
      public org.openlca.proto.Proto.ProcessRefOrBuilder getDefaultProviderOrBuilder() {
        if (defaultProviderBuilder_ != null) {
          return defaultProviderBuilder_.getMessageOrBuilder();
        } else {
          return defaultProvider_ == null ?
              org.openlca.proto.Proto.ProcessRef.getDefaultInstance() : defaultProvider_;
        }
      }
      /**
       * <pre>
       * A default provider is a [Process] that is linked as the provider of a
       * product input or the waste treatment provider of a waste output. It is
       * just an optional default setting which can be also ignored when building
       * product systems in openLCA. The user is always free to link processes in
       * product systems ignoring these defaults (but the flows and flow directions
       * have to match of course).
       * </pre>
       *
       * <code>.protolca.ProcessRef default_provider = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.ProcessRef, org.openlca.proto.Proto.ProcessRef.Builder, org.openlca.proto.Proto.ProcessRefOrBuilder> 
          getDefaultProviderFieldBuilder() {
        if (defaultProviderBuilder_ == null) {
          defaultProviderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.ProcessRef, org.openlca.proto.Proto.ProcessRef.Builder, org.openlca.proto.Proto.ProcessRefOrBuilder>(
                  getDefaultProvider(),
                  getParentForChildren(),
                  isClean());
          defaultProvider_ = null;
        }
        return defaultProviderBuilder_;
      }

      private double amount_ ;
      /**
       * <code>double amount = 10;</code>
       * @return The amount.
       */
      @java.lang.Override
      public double getAmount() {
        return amount_;
      }
      /**
       * <code>double amount = 10;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(double value) {
        
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double amount = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        
        amount_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object amountFormula_ = "";
      /**
       * <code>string amount_formula = 11;</code>
       * @return The amountFormula.
       */
      public java.lang.String getAmountFormula() {
        java.lang.Object ref = amountFormula_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          amountFormula_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string amount_formula = 11;</code>
       * @return The bytes for amountFormula.
       */
      public com.google.protobuf.ByteString
          getAmountFormulaBytes() {
        java.lang.Object ref = amountFormula_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          amountFormula_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string amount_formula = 11;</code>
       * @param value The amountFormula to set.
       * @return This builder for chaining.
       */
      public Builder setAmountFormula(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        amountFormula_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string amount_formula = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmountFormula() {
        
        amountFormula_ = getDefaultInstance().getAmountFormula();
        onChanged();
        return this;
      }
      /**
       * <code>string amount_formula = 11;</code>
       * @param value The bytes for amountFormula to set.
       * @return This builder for chaining.
       */
      public Builder setAmountFormulaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        amountFormula_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref unit_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> unitBuilder_;
      /**
       * <code>.protolca.Ref unit = 12;</code>
       * @return Whether the unit field is set.
       */
      public boolean hasUnit() {
        return unitBuilder_ != null || unit_ != null;
      }
      /**
       * <code>.protolca.Ref unit = 12;</code>
       * @return The unit.
       */
      public org.openlca.proto.Proto.Ref getUnit() {
        if (unitBuilder_ == null) {
          return unit_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : unit_;
        } else {
          return unitBuilder_.getMessage();
        }
      }
      /**
       * <code>.protolca.Ref unit = 12;</code>
       */
      public Builder setUnit(org.openlca.proto.Proto.Ref value) {
        if (unitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          unit_ = value;
          onChanged();
        } else {
          unitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref unit = 12;</code>
       */
      public Builder setUnit(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (unitBuilder_ == null) {
          unit_ = builderForValue.build();
          onChanged();
        } else {
          unitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protolca.Ref unit = 12;</code>
       */
      public Builder mergeUnit(org.openlca.proto.Proto.Ref value) {
        if (unitBuilder_ == null) {
          if (unit_ != null) {
            unit_ =
              org.openlca.proto.Proto.Ref.newBuilder(unit_).mergeFrom(value).buildPartial();
          } else {
            unit_ = value;
          }
          onChanged();
        } else {
          unitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref unit = 12;</code>
       */
      public Builder clearUnit() {
        if (unitBuilder_ == null) {
          unit_ = null;
          onChanged();
        } else {
          unit_ = null;
          unitBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protolca.Ref unit = 12;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getUnitBuilder() {
        
        onChanged();
        return getUnitFieldBuilder().getBuilder();
      }
      /**
       * <code>.protolca.Ref unit = 12;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getUnitOrBuilder() {
        if (unitBuilder_ != null) {
          return unitBuilder_.getMessageOrBuilder();
        } else {
          return unit_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : unit_;
        }
      }
      /**
       * <code>.protolca.Ref unit = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getUnitFieldBuilder() {
        if (unitBuilder_ == null) {
          unitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getUnit(),
                  getParentForChildren(),
                  isClean());
          unit_ = null;
        }
        return unitBuilder_;
      }

      private java.lang.Object dqEntry_ = "";
      /**
       * <pre>
       * A data quality entry like `(1;3;2;5;1)`. The entry is a vector of data
       * quality values that need to match the data quality scheme for flow inputs
       * and outputs that is assigned to the [Process]. In such a scheme the data
       * quality indicators have fixed positions and the respective values in the
       * `dqEntry` vector map to these positions.
       * </pre>
       *
       * <code>string dq_entry = 13;</code>
       * @return The dqEntry.
       */
      public java.lang.String getDqEntry() {
        java.lang.Object ref = dqEntry_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dqEntry_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A data quality entry like `(1;3;2;5;1)`. The entry is a vector of data
       * quality values that need to match the data quality scheme for flow inputs
       * and outputs that is assigned to the [Process]. In such a scheme the data
       * quality indicators have fixed positions and the respective values in the
       * `dqEntry` vector map to these positions.
       * </pre>
       *
       * <code>string dq_entry = 13;</code>
       * @return The bytes for dqEntry.
       */
      public com.google.protobuf.ByteString
          getDqEntryBytes() {
        java.lang.Object ref = dqEntry_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dqEntry_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A data quality entry like `(1;3;2;5;1)`. The entry is a vector of data
       * quality values that need to match the data quality scheme for flow inputs
       * and outputs that is assigned to the [Process]. In such a scheme the data
       * quality indicators have fixed positions and the respective values in the
       * `dqEntry` vector map to these positions.
       * </pre>
       *
       * <code>string dq_entry = 13;</code>
       * @param value The dqEntry to set.
       * @return This builder for chaining.
       */
      public Builder setDqEntry(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dqEntry_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A data quality entry like `(1;3;2;5;1)`. The entry is a vector of data
       * quality values that need to match the data quality scheme for flow inputs
       * and outputs that is assigned to the [Process]. In such a scheme the data
       * quality indicators have fixed positions and the respective values in the
       * `dqEntry` vector map to these positions.
       * </pre>
       *
       * <code>string dq_entry = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearDqEntry() {
        
        dqEntry_ = getDefaultInstance().getDqEntry();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A data quality entry like `(1;3;2;5;1)`. The entry is a vector of data
       * quality values that need to match the data quality scheme for flow inputs
       * and outputs that is assigned to the [Process]. In such a scheme the data
       * quality indicators have fixed positions and the respective values in the
       * `dqEntry` vector map to these positions.
       * </pre>
       *
       * <code>string dq_entry = 13;</code>
       * @param value The bytes for dqEntry to set.
       * @return This builder for chaining.
       */
      public Builder setDqEntryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dqEntry_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Uncertainty uncertainty_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Uncertainty, org.openlca.proto.Proto.Uncertainty.Builder, org.openlca.proto.Proto.UncertaintyOrBuilder> uncertaintyBuilder_;
      /**
       * <code>.protolca.Uncertainty uncertainty = 14;</code>
       * @return Whether the uncertainty field is set.
       */
      public boolean hasUncertainty() {
        return uncertaintyBuilder_ != null || uncertainty_ != null;
      }
      /**
       * <code>.protolca.Uncertainty uncertainty = 14;</code>
       * @return The uncertainty.
       */
      public org.openlca.proto.Proto.Uncertainty getUncertainty() {
        if (uncertaintyBuilder_ == null) {
          return uncertainty_ == null ? org.openlca.proto.Proto.Uncertainty.getDefaultInstance() : uncertainty_;
        } else {
          return uncertaintyBuilder_.getMessage();
        }
      }
      /**
       * <code>.protolca.Uncertainty uncertainty = 14;</code>
       */
      public Builder setUncertainty(org.openlca.proto.Proto.Uncertainty value) {
        if (uncertaintyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          uncertainty_ = value;
          onChanged();
        } else {
          uncertaintyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Uncertainty uncertainty = 14;</code>
       */
      public Builder setUncertainty(
          org.openlca.proto.Proto.Uncertainty.Builder builderForValue) {
        if (uncertaintyBuilder_ == null) {
          uncertainty_ = builderForValue.build();
          onChanged();
        } else {
          uncertaintyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protolca.Uncertainty uncertainty = 14;</code>
       */
      public Builder mergeUncertainty(org.openlca.proto.Proto.Uncertainty value) {
        if (uncertaintyBuilder_ == null) {
          if (uncertainty_ != null) {
            uncertainty_ =
              org.openlca.proto.Proto.Uncertainty.newBuilder(uncertainty_).mergeFrom(value).buildPartial();
          } else {
            uncertainty_ = value;
          }
          onChanged();
        } else {
          uncertaintyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Uncertainty uncertainty = 14;</code>
       */
      public Builder clearUncertainty() {
        if (uncertaintyBuilder_ == null) {
          uncertainty_ = null;
          onChanged();
        } else {
          uncertainty_ = null;
          uncertaintyBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protolca.Uncertainty uncertainty = 14;</code>
       */
      public org.openlca.proto.Proto.Uncertainty.Builder getUncertaintyBuilder() {
        
        onChanged();
        return getUncertaintyFieldBuilder().getBuilder();
      }
      /**
       * <code>.protolca.Uncertainty uncertainty = 14;</code>
       */
      public org.openlca.proto.Proto.UncertaintyOrBuilder getUncertaintyOrBuilder() {
        if (uncertaintyBuilder_ != null) {
          return uncertaintyBuilder_.getMessageOrBuilder();
        } else {
          return uncertainty_ == null ?
              org.openlca.proto.Proto.Uncertainty.getDefaultInstance() : uncertainty_;
        }
      }
      /**
       * <code>.protolca.Uncertainty uncertainty = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Uncertainty, org.openlca.proto.Proto.Uncertainty.Builder, org.openlca.proto.Proto.UncertaintyOrBuilder> 
          getUncertaintyFieldBuilder() {
        if (uncertaintyBuilder_ == null) {
          uncertaintyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Uncertainty, org.openlca.proto.Proto.Uncertainty.Builder, org.openlca.proto.Proto.UncertaintyOrBuilder>(
                  getUncertainty(),
                  getParentForChildren(),
                  isClean());
          uncertainty_ = null;
        }
        return uncertaintyBuilder_;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * A general comment about the input or output.
       * </pre>
       *
       * <code>string description = 15;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A general comment about the input or output.
       * </pre>
       *
       * <code>string description = 15;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A general comment about the input or output.
       * </pre>
       *
       * <code>string description = 15;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A general comment about the input or output.
       * </pre>
       *
       * <code>string description = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A general comment about the input or output.
       * </pre>
       *
       * <code>string description = 15;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.Exchange)
    }

    // @@protoc_insertion_point(class_scope:protolca.Exchange)
    private static final org.openlca.proto.Proto.Exchange DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.Exchange();
    }

    public static org.openlca.proto.Proto.Exchange getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Exchange>
        PARSER = new com.google.protobuf.AbstractParser<Exchange>() {
      @java.lang.Override
      public Exchange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Exchange(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Exchange> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Exchange> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.Exchange getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FlowOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.Flow)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    boolean hasCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    org.openlca.proto.Proto.Ref getCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder();

    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    java.util.List<java.lang.String>
        getTagsList();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    int getTagsCount();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    java.lang.String getTags(int index);
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);

    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    java.lang.String getLibrary();
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    com.google.protobuf.ByteString
        getLibraryBytes();

    /**
     * <pre>
     * The type of the flow. Note that this type is more a descriptor of how the
     * flow is handled in calculations.
     * </pre>
     *
     * <code>.protolca.FlowType flow_type = 10;</code>
     * @return The enum numeric value on the wire for flowType.
     */
    int getFlowTypeValue();
    /**
     * <pre>
     * The type of the flow. Note that this type is more a descriptor of how the
     * flow is handled in calculations.
     * </pre>
     *
     * <code>.protolca.FlowType flow_type = 10;</code>
     * @return The flowType.
     */
    org.openlca.proto.Proto.FlowType getFlowType();

    /**
     * <pre>
     * A CAS number of the flow.
     * </pre>
     *
     * <code>string cas = 11;</code>
     * @return The cas.
     */
    java.lang.String getCas();
    /**
     * <pre>
     * A CAS number of the flow.
     * </pre>
     *
     * <code>string cas = 11;</code>
     * @return The bytes for cas.
     */
    com.google.protobuf.ByteString
        getCasBytes();

    /**
     * <pre>
     * A chemical formula of the flow.
     * </pre>
     *
     * <code>string formula = 12;</code>
     * @return The formula.
     */
    java.lang.String getFormula();
    /**
     * <pre>
     * A chemical formula of the flow.
     * </pre>
     *
     * <code>string formula = 12;</code>
     * @return The bytes for formula.
     */
    com.google.protobuf.ByteString
        getFormulaBytes();

    /**
     * <pre>
     * The flow properties (quantities) in which amounts of the flow can be
     * expressed together with conversion factors between these flow flow
     * properties.
     * </pre>
     *
     * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
     */
    java.util.List<org.openlca.proto.Proto.FlowPropertyFactor> 
        getFlowPropertiesList();
    /**
     * <pre>
     * The flow properties (quantities) in which amounts of the flow can be
     * expressed together with conversion factors between these flow flow
     * properties.
     * </pre>
     *
     * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
     */
    org.openlca.proto.Proto.FlowPropertyFactor getFlowProperties(int index);
    /**
     * <pre>
     * The flow properties (quantities) in which amounts of the flow can be
     * expressed together with conversion factors between these flow flow
     * properties.
     * </pre>
     *
     * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
     */
    int getFlowPropertiesCount();
    /**
     * <pre>
     * The flow properties (quantities) in which amounts of the flow can be
     * expressed together with conversion factors between these flow flow
     * properties.
     * </pre>
     *
     * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
     */
    java.util.List<? extends org.openlca.proto.Proto.FlowPropertyFactorOrBuilder> 
        getFlowPropertiesOrBuilderList();
    /**
     * <pre>
     * The flow properties (quantities) in which amounts of the flow can be
     * expressed together with conversion factors between these flow flow
     * properties.
     * </pre>
     *
     * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
     */
    org.openlca.proto.Proto.FlowPropertyFactorOrBuilder getFlowPropertiesOrBuilder(
        int index);

    /**
     * <pre>
     * The location of the flow. Normally the location of a flow is defined by
     * the process location where the flow is an input or output. However, some
     * data formats define a location as a property of a flow.
     * </pre>
     *
     * <code>.protolca.Ref location = 14;</code>
     * @return Whether the location field is set.
     */
    boolean hasLocation();
    /**
     * <pre>
     * The location of the flow. Normally the location of a flow is defined by
     * the process location where the flow is an input or output. However, some
     * data formats define a location as a property of a flow.
     * </pre>
     *
     * <code>.protolca.Ref location = 14;</code>
     * @return The location.
     */
    org.openlca.proto.Proto.Ref getLocation();
    /**
     * <pre>
     * The location of the flow. Normally the location of a flow is defined by
     * the process location where the flow is an input or output. However, some
     * data formats define a location as a property of a flow.
     * </pre>
     *
     * <code>.protolca.Ref location = 14;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getLocationOrBuilder();
  }
  /**
   * <pre>
   * Everything that can be an input or output of a process (e.g. a substance, a
   * product, a waste, a service etc.)
   * </pre>
   *
   * Protobuf type {@code protolca.Flow}
   */
  public static final class Flow extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.Flow)
      FlowOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Flow.newBuilder() to construct.
    private Flow(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Flow() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      library_ = "";
      flowType_ = 0;
      cas_ = "";
      formula_ = "";
      flowProperties_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Flow();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Flow(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (category_ != null) {
                subBuilder = category_.toBuilder();
              }
              category_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(category_);
                category_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tags_.add(s);
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              library_ = s;
              break;
            }
            case 80: {
              int rawValue = input.readEnum();

              flowType_ = rawValue;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              cas_ = s;
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              formula_ = s;
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                flowProperties_ = new java.util.ArrayList<org.openlca.proto.Proto.FlowPropertyFactor>();
                mutable_bitField0_ |= 0x00000002;
              }
              flowProperties_.add(
                  input.readMessage(org.openlca.proto.Proto.FlowPropertyFactor.parser(), extensionRegistry));
              break;
            }
            case 114: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (location_ != null) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          flowProperties_ = java.util.Collections.unmodifiableList(flowProperties_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_Flow_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_Flow_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.Flow.class, org.openlca.proto.Proto.Flow.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.Ref category_;
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    @java.lang.Override
    public boolean hasCategory() {
      return category_ != null;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getCategory() {
      return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
      return getCategory();
    }

    public static final int TAGS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    public static final int LIBRARY_FIELD_NUMBER = 9;
    private volatile java.lang.Object library_;
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    @java.lang.Override
    public java.lang.String getLibrary() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        library_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLibraryBytes() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        library_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLOW_TYPE_FIELD_NUMBER = 10;
    private int flowType_;
    /**
     * <pre>
     * The type of the flow. Note that this type is more a descriptor of how the
     * flow is handled in calculations.
     * </pre>
     *
     * <code>.protolca.FlowType flow_type = 10;</code>
     * @return The enum numeric value on the wire for flowType.
     */
    @java.lang.Override public int getFlowTypeValue() {
      return flowType_;
    }
    /**
     * <pre>
     * The type of the flow. Note that this type is more a descriptor of how the
     * flow is handled in calculations.
     * </pre>
     *
     * <code>.protolca.FlowType flow_type = 10;</code>
     * @return The flowType.
     */
    @java.lang.Override public org.openlca.proto.Proto.FlowType getFlowType() {
      @SuppressWarnings("deprecation")
      org.openlca.proto.Proto.FlowType result = org.openlca.proto.Proto.FlowType.valueOf(flowType_);
      return result == null ? org.openlca.proto.Proto.FlowType.UNRECOGNIZED : result;
    }

    public static final int CAS_FIELD_NUMBER = 11;
    private volatile java.lang.Object cas_;
    /**
     * <pre>
     * A CAS number of the flow.
     * </pre>
     *
     * <code>string cas = 11;</code>
     * @return The cas.
     */
    @java.lang.Override
    public java.lang.String getCas() {
      java.lang.Object ref = cas_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cas_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A CAS number of the flow.
     * </pre>
     *
     * <code>string cas = 11;</code>
     * @return The bytes for cas.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCasBytes() {
      java.lang.Object ref = cas_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cas_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FORMULA_FIELD_NUMBER = 12;
    private volatile java.lang.Object formula_;
    /**
     * <pre>
     * A chemical formula of the flow.
     * </pre>
     *
     * <code>string formula = 12;</code>
     * @return The formula.
     */
    @java.lang.Override
    public java.lang.String getFormula() {
      java.lang.Object ref = formula_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        formula_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A chemical formula of the flow.
     * </pre>
     *
     * <code>string formula = 12;</code>
     * @return The bytes for formula.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFormulaBytes() {
      java.lang.Object ref = formula_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        formula_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLOW_PROPERTIES_FIELD_NUMBER = 13;
    private java.util.List<org.openlca.proto.Proto.FlowPropertyFactor> flowProperties_;
    /**
     * <pre>
     * The flow properties (quantities) in which amounts of the flow can be
     * expressed together with conversion factors between these flow flow
     * properties.
     * </pre>
     *
     * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.proto.Proto.FlowPropertyFactor> getFlowPropertiesList() {
      return flowProperties_;
    }
    /**
     * <pre>
     * The flow properties (quantities) in which amounts of the flow can be
     * expressed together with conversion factors between these flow flow
     * properties.
     * </pre>
     *
     * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.proto.Proto.FlowPropertyFactorOrBuilder> 
        getFlowPropertiesOrBuilderList() {
      return flowProperties_;
    }
    /**
     * <pre>
     * The flow properties (quantities) in which amounts of the flow can be
     * expressed together with conversion factors between these flow flow
     * properties.
     * </pre>
     *
     * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
     */
    @java.lang.Override
    public int getFlowPropertiesCount() {
      return flowProperties_.size();
    }
    /**
     * <pre>
     * The flow properties (quantities) in which amounts of the flow can be
     * expressed together with conversion factors between these flow flow
     * properties.
     * </pre>
     *
     * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.FlowPropertyFactor getFlowProperties(int index) {
      return flowProperties_.get(index);
    }
    /**
     * <pre>
     * The flow properties (quantities) in which amounts of the flow can be
     * expressed together with conversion factors between these flow flow
     * properties.
     * </pre>
     *
     * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.FlowPropertyFactorOrBuilder getFlowPropertiesOrBuilder(
        int index) {
      return flowProperties_.get(index);
    }

    public static final int LOCATION_FIELD_NUMBER = 14;
    private org.openlca.proto.Proto.Ref location_;
    /**
     * <pre>
     * The location of the flow. Normally the location of a flow is defined by
     * the process location where the flow is an input or output. However, some
     * data formats define a location as a property of a flow.
     * </pre>
     *
     * <code>.protolca.Ref location = 14;</code>
     * @return Whether the location field is set.
     */
    @java.lang.Override
    public boolean hasLocation() {
      return location_ != null;
    }
    /**
     * <pre>
     * The location of the flow. Normally the location of a flow is defined by
     * the process location where the flow is an input or output. However, some
     * data formats define a location as a property of a flow.
     * </pre>
     *
     * <code>.protolca.Ref location = 14;</code>
     * @return The location.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getLocation() {
      return location_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : location_;
    }
    /**
     * <pre>
     * The location of the flow. Normally the location of a flow is defined by
     * the process location where the flow is an input or output. However, some
     * data formats define a location as a property of a flow.
     * </pre>
     *
     * <code>.protolca.Ref location = 14;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getLocationOrBuilder() {
      return getLocation();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (category_ != null) {
        output.writeMessage(7, getCategory());
      }
      for (int i = 0; i < tags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, tags_.getRaw(i));
      }
      if (!getLibraryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, library_);
      }
      if (flowType_ != org.openlca.proto.Proto.FlowType.UNDEFINED_FLOW_TYPE.getNumber()) {
        output.writeEnum(10, flowType_);
      }
      if (!getCasBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, cas_);
      }
      if (!getFormulaBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, formula_);
      }
      for (int i = 0; i < flowProperties_.size(); i++) {
        output.writeMessage(13, flowProperties_.get(i));
      }
      if (location_ != null) {
        output.writeMessage(14, getLocation());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (category_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCategory());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += computeStringSizeNoTag(tags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      if (!getLibraryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, library_);
      }
      if (flowType_ != org.openlca.proto.Proto.FlowType.UNDEFINED_FLOW_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, flowType_);
      }
      if (!getCasBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, cas_);
      }
      if (!getFormulaBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, formula_);
      }
      for (int i = 0; i < flowProperties_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, flowProperties_.get(i));
      }
      if (location_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getLocation());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.Flow)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.Flow other = (org.openlca.proto.Proto.Flow) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (hasCategory() != other.hasCategory()) return false;
      if (hasCategory()) {
        if (!getCategory()
            .equals(other.getCategory())) return false;
      }
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (!getLibrary()
          .equals(other.getLibrary())) return false;
      if (flowType_ != other.flowType_) return false;
      if (!getCas()
          .equals(other.getCas())) return false;
      if (!getFormula()
          .equals(other.getFormula())) return false;
      if (!getFlowPropertiesList()
          .equals(other.getFlowPropertiesList())) return false;
      if (hasLocation() != other.hasLocation()) return false;
      if (hasLocation()) {
        if (!getLocation()
            .equals(other.getLocation())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (hasCategory()) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategory().hashCode();
      }
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibrary().hashCode();
      hash = (37 * hash) + FLOW_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + flowType_;
      hash = (37 * hash) + CAS_FIELD_NUMBER;
      hash = (53 * hash) + getCas().hashCode();
      hash = (37 * hash) + FORMULA_FIELD_NUMBER;
      hash = (53 * hash) + getFormula().hashCode();
      if (getFlowPropertiesCount() > 0) {
        hash = (37 * hash) + FLOW_PROPERTIES_FIELD_NUMBER;
        hash = (53 * hash) + getFlowPropertiesList().hashCode();
      }
      if (hasLocation()) {
        hash = (37 * hash) + LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getLocation().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.Flow parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Flow parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Flow parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Flow parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Flow parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Flow parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Flow parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Flow parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Flow parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Flow parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Flow parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Flow parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.Flow prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Everything that can be an input or output of a process (e.g. a substance, a
     * product, a waste, a service etc.)
     * </pre>
     *
     * Protobuf type {@code protolca.Flow}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.Flow)
        org.openlca.proto.Proto.FlowOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_Flow_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_Flow_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.Flow.class, org.openlca.proto.Proto.Flow.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.Flow.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFlowPropertiesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        if (categoryBuilder_ == null) {
          category_ = null;
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        library_ = "";

        flowType_ = 0;

        cas_ = "";

        formula_ = "";

        if (flowPropertiesBuilder_ == null) {
          flowProperties_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          flowPropertiesBuilder_.clear();
        }
        if (locationBuilder_ == null) {
          location_ = null;
        } else {
          location_ = null;
          locationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_Flow_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Flow getDefaultInstanceForType() {
        return org.openlca.proto.Proto.Flow.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Flow build() {
        org.openlca.proto.Proto.Flow result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Flow buildPartial() {
        org.openlca.proto.Proto.Flow result = new org.openlca.proto.Proto.Flow(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (categoryBuilder_ == null) {
          result.category_ = category_;
        } else {
          result.category_ = categoryBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tags_ = tags_;
        result.library_ = library_;
        result.flowType_ = flowType_;
        result.cas_ = cas_;
        result.formula_ = formula_;
        if (flowPropertiesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            flowProperties_ = java.util.Collections.unmodifiableList(flowProperties_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.flowProperties_ = flowProperties_;
        } else {
          result.flowProperties_ = flowPropertiesBuilder_.build();
        }
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.Flow) {
          return mergeFrom((org.openlca.proto.Proto.Flow)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.Flow other) {
        if (other == org.openlca.proto.Proto.Flow.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.hasCategory()) {
          mergeCategory(other.getCategory());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        if (!other.getLibrary().isEmpty()) {
          library_ = other.library_;
          onChanged();
        }
        if (other.flowType_ != 0) {
          setFlowTypeValue(other.getFlowTypeValue());
        }
        if (!other.getCas().isEmpty()) {
          cas_ = other.cas_;
          onChanged();
        }
        if (!other.getFormula().isEmpty()) {
          formula_ = other.formula_;
          onChanged();
        }
        if (flowPropertiesBuilder_ == null) {
          if (!other.flowProperties_.isEmpty()) {
            if (flowProperties_.isEmpty()) {
              flowProperties_ = other.flowProperties_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFlowPropertiesIsMutable();
              flowProperties_.addAll(other.flowProperties_);
            }
            onChanged();
          }
        } else {
          if (!other.flowProperties_.isEmpty()) {
            if (flowPropertiesBuilder_.isEmpty()) {
              flowPropertiesBuilder_.dispose();
              flowPropertiesBuilder_ = null;
              flowProperties_ = other.flowProperties_;
              bitField0_ = (bitField0_ & ~0x00000002);
              flowPropertiesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFlowPropertiesFieldBuilder() : null;
            } else {
              flowPropertiesBuilder_.addAllMessages(other.flowProperties_);
            }
          }
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.Flow parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.Flow) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref category_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> categoryBuilder_;
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return Whether the category field is set.
       */
      public boolean hasCategory() {
        return categoryBuilder_ != null || category_ != null;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return The category.
       */
      public org.openlca.proto.Proto.Ref getCategory() {
        if (categoryBuilder_ == null) {
          return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        } else {
          return categoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          category_ = value;
          onChanged();
        } else {
          categoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          category_ = builderForValue.build();
          onChanged();
        } else {
          categoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder mergeCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (category_ != null) {
            category_ =
              org.openlca.proto.Proto.Ref.newBuilder(category_).mergeFrom(value).buildPartial();
          } else {
            category_ = value;
          }
          onChanged();
        } else {
          categoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder clearCategory() {
        if (categoryBuilder_ == null) {
          category_ = null;
          onChanged();
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getCategoryBuilder() {
        
        onChanged();
        return getCategoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
        if (categoryBuilder_ != null) {
          return categoryBuilder_.getMessageOrBuilder();
        } else {
          return category_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getCategoryFieldBuilder() {
        if (categoryBuilder_ == null) {
          categoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getCategory(),
                  getParentForChildren(),
                  isClean());
          category_ = null;
        }
        return categoryBuilder_;
      }

      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return A list containing the tags.
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return The count of tags.
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the element to return.
       * @return The tags at the given index.
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tags at the given index.
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index to set the value at.
       * @param value The tags to set.
       * @return This builder for chaining.
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The tags to add.
       * @return This builder for chaining.
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param values The tags to add.
       * @return This builder for chaining.
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The bytes of the tags to add.
       * @return This builder for chaining.
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object library_ = "";
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The library.
       */
      public java.lang.String getLibrary() {
        java.lang.Object ref = library_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          library_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The bytes for library.
       */
      public com.google.protobuf.ByteString
          getLibraryBytes() {
        java.lang.Object ref = library_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          library_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The library to set.
       * @return This builder for chaining.
       */
      public Builder setLibrary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        library_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLibrary() {
        
        library_ = getDefaultInstance().getLibrary();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The bytes for library to set.
       * @return This builder for chaining.
       */
      public Builder setLibraryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        library_ = value;
        onChanged();
        return this;
      }

      private int flowType_ = 0;
      /**
       * <pre>
       * The type of the flow. Note that this type is more a descriptor of how the
       * flow is handled in calculations.
       * </pre>
       *
       * <code>.protolca.FlowType flow_type = 10;</code>
       * @return The enum numeric value on the wire for flowType.
       */
      @java.lang.Override public int getFlowTypeValue() {
        return flowType_;
      }
      /**
       * <pre>
       * The type of the flow. Note that this type is more a descriptor of how the
       * flow is handled in calculations.
       * </pre>
       *
       * <code>.protolca.FlowType flow_type = 10;</code>
       * @param value The enum numeric value on the wire for flowType to set.
       * @return This builder for chaining.
       */
      public Builder setFlowTypeValue(int value) {
        
        flowType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of the flow. Note that this type is more a descriptor of how the
       * flow is handled in calculations.
       * </pre>
       *
       * <code>.protolca.FlowType flow_type = 10;</code>
       * @return The flowType.
       */
      @java.lang.Override
      public org.openlca.proto.Proto.FlowType getFlowType() {
        @SuppressWarnings("deprecation")
        org.openlca.proto.Proto.FlowType result = org.openlca.proto.Proto.FlowType.valueOf(flowType_);
        return result == null ? org.openlca.proto.Proto.FlowType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The type of the flow. Note that this type is more a descriptor of how the
       * flow is handled in calculations.
       * </pre>
       *
       * <code>.protolca.FlowType flow_type = 10;</code>
       * @param value The flowType to set.
       * @return This builder for chaining.
       */
      public Builder setFlowType(org.openlca.proto.Proto.FlowType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        flowType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of the flow. Note that this type is more a descriptor of how the
       * flow is handled in calculations.
       * </pre>
       *
       * <code>.protolca.FlowType flow_type = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlowType() {
        
        flowType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object cas_ = "";
      /**
       * <pre>
       * A CAS number of the flow.
       * </pre>
       *
       * <code>string cas = 11;</code>
       * @return The cas.
       */
      public java.lang.String getCas() {
        java.lang.Object ref = cas_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cas_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A CAS number of the flow.
       * </pre>
       *
       * <code>string cas = 11;</code>
       * @return The bytes for cas.
       */
      public com.google.protobuf.ByteString
          getCasBytes() {
        java.lang.Object ref = cas_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cas_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A CAS number of the flow.
       * </pre>
       *
       * <code>string cas = 11;</code>
       * @param value The cas to set.
       * @return This builder for chaining.
       */
      public Builder setCas(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        cas_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A CAS number of the flow.
       * </pre>
       *
       * <code>string cas = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearCas() {
        
        cas_ = getDefaultInstance().getCas();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A CAS number of the flow.
       * </pre>
       *
       * <code>string cas = 11;</code>
       * @param value The bytes for cas to set.
       * @return This builder for chaining.
       */
      public Builder setCasBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        cas_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object formula_ = "";
      /**
       * <pre>
       * A chemical formula of the flow.
       * </pre>
       *
       * <code>string formula = 12;</code>
       * @return The formula.
       */
      public java.lang.String getFormula() {
        java.lang.Object ref = formula_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          formula_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A chemical formula of the flow.
       * </pre>
       *
       * <code>string formula = 12;</code>
       * @return The bytes for formula.
       */
      public com.google.protobuf.ByteString
          getFormulaBytes() {
        java.lang.Object ref = formula_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          formula_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A chemical formula of the flow.
       * </pre>
       *
       * <code>string formula = 12;</code>
       * @param value The formula to set.
       * @return This builder for chaining.
       */
      public Builder setFormula(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        formula_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A chemical formula of the flow.
       * </pre>
       *
       * <code>string formula = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearFormula() {
        
        formula_ = getDefaultInstance().getFormula();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A chemical formula of the flow.
       * </pre>
       *
       * <code>string formula = 12;</code>
       * @param value The bytes for formula to set.
       * @return This builder for chaining.
       */
      public Builder setFormulaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        formula_ = value;
        onChanged();
        return this;
      }

      private java.util.List<org.openlca.proto.Proto.FlowPropertyFactor> flowProperties_ =
        java.util.Collections.emptyList();
      private void ensureFlowPropertiesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          flowProperties_ = new java.util.ArrayList<org.openlca.proto.Proto.FlowPropertyFactor>(flowProperties_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.FlowPropertyFactor, org.openlca.proto.Proto.FlowPropertyFactor.Builder, org.openlca.proto.Proto.FlowPropertyFactorOrBuilder> flowPropertiesBuilder_;

      /**
       * <pre>
       * The flow properties (quantities) in which amounts of the flow can be
       * expressed together with conversion factors between these flow flow
       * properties.
       * </pre>
       *
       * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
       */
      public java.util.List<org.openlca.proto.Proto.FlowPropertyFactor> getFlowPropertiesList() {
        if (flowPropertiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(flowProperties_);
        } else {
          return flowPropertiesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The flow properties (quantities) in which amounts of the flow can be
       * expressed together with conversion factors between these flow flow
       * properties.
       * </pre>
       *
       * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
       */
      public int getFlowPropertiesCount() {
        if (flowPropertiesBuilder_ == null) {
          return flowProperties_.size();
        } else {
          return flowPropertiesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The flow properties (quantities) in which amounts of the flow can be
       * expressed together with conversion factors between these flow flow
       * properties.
       * </pre>
       *
       * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
       */
      public org.openlca.proto.Proto.FlowPropertyFactor getFlowProperties(int index) {
        if (flowPropertiesBuilder_ == null) {
          return flowProperties_.get(index);
        } else {
          return flowPropertiesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The flow properties (quantities) in which amounts of the flow can be
       * expressed together with conversion factors between these flow flow
       * properties.
       * </pre>
       *
       * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
       */
      public Builder setFlowProperties(
          int index, org.openlca.proto.Proto.FlowPropertyFactor value) {
        if (flowPropertiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFlowPropertiesIsMutable();
          flowProperties_.set(index, value);
          onChanged();
        } else {
          flowPropertiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The flow properties (quantities) in which amounts of the flow can be
       * expressed together with conversion factors between these flow flow
       * properties.
       * </pre>
       *
       * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
       */
      public Builder setFlowProperties(
          int index, org.openlca.proto.Proto.FlowPropertyFactor.Builder builderForValue) {
        if (flowPropertiesBuilder_ == null) {
          ensureFlowPropertiesIsMutable();
          flowProperties_.set(index, builderForValue.build());
          onChanged();
        } else {
          flowPropertiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The flow properties (quantities) in which amounts of the flow can be
       * expressed together with conversion factors between these flow flow
       * properties.
       * </pre>
       *
       * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
       */
      public Builder addFlowProperties(org.openlca.proto.Proto.FlowPropertyFactor value) {
        if (flowPropertiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFlowPropertiesIsMutable();
          flowProperties_.add(value);
          onChanged();
        } else {
          flowPropertiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The flow properties (quantities) in which amounts of the flow can be
       * expressed together with conversion factors between these flow flow
       * properties.
       * </pre>
       *
       * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
       */
      public Builder addFlowProperties(
          int index, org.openlca.proto.Proto.FlowPropertyFactor value) {
        if (flowPropertiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFlowPropertiesIsMutable();
          flowProperties_.add(index, value);
          onChanged();
        } else {
          flowPropertiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The flow properties (quantities) in which amounts of the flow can be
       * expressed together with conversion factors between these flow flow
       * properties.
       * </pre>
       *
       * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
       */
      public Builder addFlowProperties(
          org.openlca.proto.Proto.FlowPropertyFactor.Builder builderForValue) {
        if (flowPropertiesBuilder_ == null) {
          ensureFlowPropertiesIsMutable();
          flowProperties_.add(builderForValue.build());
          onChanged();
        } else {
          flowPropertiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The flow properties (quantities) in which amounts of the flow can be
       * expressed together with conversion factors between these flow flow
       * properties.
       * </pre>
       *
       * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
       */
      public Builder addFlowProperties(
          int index, org.openlca.proto.Proto.FlowPropertyFactor.Builder builderForValue) {
        if (flowPropertiesBuilder_ == null) {
          ensureFlowPropertiesIsMutable();
          flowProperties_.add(index, builderForValue.build());
          onChanged();
        } else {
          flowPropertiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The flow properties (quantities) in which amounts of the flow can be
       * expressed together with conversion factors between these flow flow
       * properties.
       * </pre>
       *
       * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
       */
      public Builder addAllFlowProperties(
          java.lang.Iterable<? extends org.openlca.proto.Proto.FlowPropertyFactor> values) {
        if (flowPropertiesBuilder_ == null) {
          ensureFlowPropertiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, flowProperties_);
          onChanged();
        } else {
          flowPropertiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The flow properties (quantities) in which amounts of the flow can be
       * expressed together with conversion factors between these flow flow
       * properties.
       * </pre>
       *
       * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
       */
      public Builder clearFlowProperties() {
        if (flowPropertiesBuilder_ == null) {
          flowProperties_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          flowPropertiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The flow properties (quantities) in which amounts of the flow can be
       * expressed together with conversion factors between these flow flow
       * properties.
       * </pre>
       *
       * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
       */
      public Builder removeFlowProperties(int index) {
        if (flowPropertiesBuilder_ == null) {
          ensureFlowPropertiesIsMutable();
          flowProperties_.remove(index);
          onChanged();
        } else {
          flowPropertiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The flow properties (quantities) in which amounts of the flow can be
       * expressed together with conversion factors between these flow flow
       * properties.
       * </pre>
       *
       * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
       */
      public org.openlca.proto.Proto.FlowPropertyFactor.Builder getFlowPropertiesBuilder(
          int index) {
        return getFlowPropertiesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The flow properties (quantities) in which amounts of the flow can be
       * expressed together with conversion factors between these flow flow
       * properties.
       * </pre>
       *
       * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
       */
      public org.openlca.proto.Proto.FlowPropertyFactorOrBuilder getFlowPropertiesOrBuilder(
          int index) {
        if (flowPropertiesBuilder_ == null) {
          return flowProperties_.get(index);  } else {
          return flowPropertiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The flow properties (quantities) in which amounts of the flow can be
       * expressed together with conversion factors between these flow flow
       * properties.
       * </pre>
       *
       * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
       */
      public java.util.List<? extends org.openlca.proto.Proto.FlowPropertyFactorOrBuilder> 
           getFlowPropertiesOrBuilderList() {
        if (flowPropertiesBuilder_ != null) {
          return flowPropertiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(flowProperties_);
        }
      }
      /**
       * <pre>
       * The flow properties (quantities) in which amounts of the flow can be
       * expressed together with conversion factors between these flow flow
       * properties.
       * </pre>
       *
       * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
       */
      public org.openlca.proto.Proto.FlowPropertyFactor.Builder addFlowPropertiesBuilder() {
        return getFlowPropertiesFieldBuilder().addBuilder(
            org.openlca.proto.Proto.FlowPropertyFactor.getDefaultInstance());
      }
      /**
       * <pre>
       * The flow properties (quantities) in which amounts of the flow can be
       * expressed together with conversion factors between these flow flow
       * properties.
       * </pre>
       *
       * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
       */
      public org.openlca.proto.Proto.FlowPropertyFactor.Builder addFlowPropertiesBuilder(
          int index) {
        return getFlowPropertiesFieldBuilder().addBuilder(
            index, org.openlca.proto.Proto.FlowPropertyFactor.getDefaultInstance());
      }
      /**
       * <pre>
       * The flow properties (quantities) in which amounts of the flow can be
       * expressed together with conversion factors between these flow flow
       * properties.
       * </pre>
       *
       * <code>repeated .protolca.FlowPropertyFactor flow_properties = 13;</code>
       */
      public java.util.List<org.openlca.proto.Proto.FlowPropertyFactor.Builder> 
           getFlowPropertiesBuilderList() {
        return getFlowPropertiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.FlowPropertyFactor, org.openlca.proto.Proto.FlowPropertyFactor.Builder, org.openlca.proto.Proto.FlowPropertyFactorOrBuilder> 
          getFlowPropertiesFieldBuilder() {
        if (flowPropertiesBuilder_ == null) {
          flowPropertiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.proto.Proto.FlowPropertyFactor, org.openlca.proto.Proto.FlowPropertyFactor.Builder, org.openlca.proto.Proto.FlowPropertyFactorOrBuilder>(
                  flowProperties_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          flowProperties_ = null;
        }
        return flowPropertiesBuilder_;
      }

      private org.openlca.proto.Proto.Ref location_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> locationBuilder_;
      /**
       * <pre>
       * The location of the flow. Normally the location of a flow is defined by
       * the process location where the flow is an input or output. However, some
       * data formats define a location as a property of a flow.
       * </pre>
       *
       * <code>.protolca.Ref location = 14;</code>
       * @return Whether the location field is set.
       */
      public boolean hasLocation() {
        return locationBuilder_ != null || location_ != null;
      }
      /**
       * <pre>
       * The location of the flow. Normally the location of a flow is defined by
       * the process location where the flow is an input or output. However, some
       * data formats define a location as a property of a flow.
       * </pre>
       *
       * <code>.protolca.Ref location = 14;</code>
       * @return The location.
       */
      public org.openlca.proto.Proto.Ref getLocation() {
        if (locationBuilder_ == null) {
          return location_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The location of the flow. Normally the location of a flow is defined by
       * the process location where the flow is an input or output. However, some
       * data formats define a location as a property of a flow.
       * </pre>
       *
       * <code>.protolca.Ref location = 14;</code>
       */
      public Builder setLocation(org.openlca.proto.Proto.Ref value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The location of the flow. Normally the location of a flow is defined by
       * the process location where the flow is an input or output. However, some
       * data formats define a location as a property of a flow.
       * </pre>
       *
       * <code>.protolca.Ref location = 14;</code>
       */
      public Builder setLocation(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The location of the flow. Normally the location of a flow is defined by
       * the process location where the flow is an input or output. However, some
       * data formats define a location as a property of a flow.
       * </pre>
       *
       * <code>.protolca.Ref location = 14;</code>
       */
      public Builder mergeLocation(org.openlca.proto.Proto.Ref value) {
        if (locationBuilder_ == null) {
          if (location_ != null) {
            location_ =
              org.openlca.proto.Proto.Ref.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The location of the flow. Normally the location of a flow is defined by
       * the process location where the flow is an input or output. However, some
       * data formats define a location as a property of a flow.
       * </pre>
       *
       * <code>.protolca.Ref location = 14;</code>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = null;
          onChanged();
        } else {
          location_ = null;
          locationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The location of the flow. Normally the location of a flow is defined by
       * the process location where the flow is an input or output. However, some
       * data formats define a location as a property of a flow.
       * </pre>
       *
       * <code>.protolca.Ref location = 14;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getLocationBuilder() {
        
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The location of the flow. Normally the location of a flow is defined by
       * the process location where the flow is an input or output. However, some
       * data formats define a location as a property of a flow.
       * </pre>
       *
       * <code>.protolca.Ref location = 14;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : location_;
        }
      }
      /**
       * <pre>
       * The location of the flow. Normally the location of a flow is defined by
       * the process location where the flow is an input or output. However, some
       * data formats define a location as a property of a flow.
       * </pre>
       *
       * <code>.protolca.Ref location = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getLocation(),
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.Flow)
    }

    // @@protoc_insertion_point(class_scope:protolca.Flow)
    private static final org.openlca.proto.Proto.Flow DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.Flow();
    }

    public static org.openlca.proto.Proto.Flow getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Flow>
        PARSER = new com.google.protobuf.AbstractParser<Flow>() {
      @java.lang.Override
      public Flow parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Flow(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Flow> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Flow> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.Flow getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FlowMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.FlowMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The reference (id, name, description) of the source flow list.
     * </pre>
     *
     * <code>.protolca.Ref source = 7;</code>
     * @return Whether the source field is set.
     */
    boolean hasSource();
    /**
     * <pre>
     * The reference (id, name, description) of the source flow list.
     * </pre>
     *
     * <code>.protolca.Ref source = 7;</code>
     * @return The source.
     */
    org.openlca.proto.Proto.Ref getSource();
    /**
     * <pre>
     * The reference (id, name, description) of the source flow list.
     * </pre>
     *
     * <code>.protolca.Ref source = 7;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getSourceOrBuilder();

    /**
     * <pre>
     * The reference (id, name, description) of the target flow list.
     * </pre>
     *
     * <code>.protolca.Ref target = 8;</code>
     * @return Whether the target field is set.
     */
    boolean hasTarget();
    /**
     * <pre>
     * The reference (id, name, description) of the target flow list.
     * </pre>
     *
     * <code>.protolca.Ref target = 8;</code>
     * @return The target.
     */
    org.openlca.proto.Proto.Ref getTarget();
    /**
     * <pre>
     * The reference (id, name, description) of the target flow list.
     * </pre>
     *
     * <code>.protolca.Ref target = 8;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getTargetOrBuilder();

    /**
     * <pre>
     * A list of flow mappings from flows in a source flow list to flows in a
     * target flow list.
     * </pre>
     *
     * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
     */
    java.util.List<org.openlca.proto.Proto.FlowMapEntry> 
        getMappingsList();
    /**
     * <pre>
     * A list of flow mappings from flows in a source flow list to flows in a
     * target flow list.
     * </pre>
     *
     * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
     */
    org.openlca.proto.Proto.FlowMapEntry getMappings(int index);
    /**
     * <pre>
     * A list of flow mappings from flows in a source flow list to flows in a
     * target flow list.
     * </pre>
     *
     * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
     */
    int getMappingsCount();
    /**
     * <pre>
     * A list of flow mappings from flows in a source flow list to flows in a
     * target flow list.
     * </pre>
     *
     * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
     */
    java.util.List<? extends org.openlca.proto.Proto.FlowMapEntryOrBuilder> 
        getMappingsOrBuilderList();
    /**
     * <pre>
     * A list of flow mappings from flows in a source flow list to flows in a
     * target flow list.
     * </pre>
     *
     * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
     */
    org.openlca.proto.Proto.FlowMapEntryOrBuilder getMappingsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A crosswalk of flows from a source flow list to a target flow list.
   * </pre>
   *
   * Protobuf type {@code protolca.FlowMap}
   */
  public static final class FlowMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.FlowMap)
      FlowMapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FlowMap.newBuilder() to construct.
    private FlowMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FlowMap() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      mappings_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FlowMap();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FlowMap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (source_ != null) {
                subBuilder = source_.toBuilder();
              }
              source_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(source_);
                source_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (target_ != null) {
                subBuilder = target_.toBuilder();
              }
              target_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(target_);
                target_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                mappings_ = new java.util.ArrayList<org.openlca.proto.Proto.FlowMapEntry>();
                mutable_bitField0_ |= 0x00000001;
              }
              mappings_.add(
                  input.readMessage(org.openlca.proto.Proto.FlowMapEntry.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          mappings_ = java.util.Collections.unmodifiableList(mappings_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_FlowMap_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_FlowMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.FlowMap.class, org.openlca.proto.Proto.FlowMap.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOURCE_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.Ref source_;
    /**
     * <pre>
     * The reference (id, name, description) of the source flow list.
     * </pre>
     *
     * <code>.protolca.Ref source = 7;</code>
     * @return Whether the source field is set.
     */
    @java.lang.Override
    public boolean hasSource() {
      return source_ != null;
    }
    /**
     * <pre>
     * The reference (id, name, description) of the source flow list.
     * </pre>
     *
     * <code>.protolca.Ref source = 7;</code>
     * @return The source.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getSource() {
      return source_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : source_;
    }
    /**
     * <pre>
     * The reference (id, name, description) of the source flow list.
     * </pre>
     *
     * <code>.protolca.Ref source = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getSourceOrBuilder() {
      return getSource();
    }

    public static final int TARGET_FIELD_NUMBER = 8;
    private org.openlca.proto.Proto.Ref target_;
    /**
     * <pre>
     * The reference (id, name, description) of the target flow list.
     * </pre>
     *
     * <code>.protolca.Ref target = 8;</code>
     * @return Whether the target field is set.
     */
    @java.lang.Override
    public boolean hasTarget() {
      return target_ != null;
    }
    /**
     * <pre>
     * The reference (id, name, description) of the target flow list.
     * </pre>
     *
     * <code>.protolca.Ref target = 8;</code>
     * @return The target.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getTarget() {
      return target_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : target_;
    }
    /**
     * <pre>
     * The reference (id, name, description) of the target flow list.
     * </pre>
     *
     * <code>.protolca.Ref target = 8;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getTargetOrBuilder() {
      return getTarget();
    }

    public static final int MAPPINGS_FIELD_NUMBER = 9;
    private java.util.List<org.openlca.proto.Proto.FlowMapEntry> mappings_;
    /**
     * <pre>
     * A list of flow mappings from flows in a source flow list to flows in a
     * target flow list.
     * </pre>
     *
     * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.proto.Proto.FlowMapEntry> getMappingsList() {
      return mappings_;
    }
    /**
     * <pre>
     * A list of flow mappings from flows in a source flow list to flows in a
     * target flow list.
     * </pre>
     *
     * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.proto.Proto.FlowMapEntryOrBuilder> 
        getMappingsOrBuilderList() {
      return mappings_;
    }
    /**
     * <pre>
     * A list of flow mappings from flows in a source flow list to flows in a
     * target flow list.
     * </pre>
     *
     * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
     */
    @java.lang.Override
    public int getMappingsCount() {
      return mappings_.size();
    }
    /**
     * <pre>
     * A list of flow mappings from flows in a source flow list to flows in a
     * target flow list.
     * </pre>
     *
     * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.FlowMapEntry getMappings(int index) {
      return mappings_.get(index);
    }
    /**
     * <pre>
     * A list of flow mappings from flows in a source flow list to flows in a
     * target flow list.
     * </pre>
     *
     * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.FlowMapEntryOrBuilder getMappingsOrBuilder(
        int index) {
      return mappings_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (source_ != null) {
        output.writeMessage(7, getSource());
      }
      if (target_ != null) {
        output.writeMessage(8, getTarget());
      }
      for (int i = 0; i < mappings_.size(); i++) {
        output.writeMessage(9, mappings_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (source_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getSource());
      }
      if (target_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getTarget());
      }
      for (int i = 0; i < mappings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, mappings_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.FlowMap)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.FlowMap other = (org.openlca.proto.Proto.FlowMap) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (hasSource() != other.hasSource()) return false;
      if (hasSource()) {
        if (!getSource()
            .equals(other.getSource())) return false;
      }
      if (hasTarget() != other.hasTarget()) return false;
      if (hasTarget()) {
        if (!getTarget()
            .equals(other.getTarget())) return false;
      }
      if (!getMappingsList()
          .equals(other.getMappingsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (hasSource()) {
        hash = (37 * hash) + SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getSource().hashCode();
      }
      if (hasTarget()) {
        hash = (37 * hash) + TARGET_FIELD_NUMBER;
        hash = (53 * hash) + getTarget().hashCode();
      }
      if (getMappingsCount() > 0) {
        hash = (37 * hash) + MAPPINGS_FIELD_NUMBER;
        hash = (53 * hash) + getMappingsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.FlowMap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowMap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.FlowMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A crosswalk of flows from a source flow list to a target flow list.
     * </pre>
     *
     * Protobuf type {@code protolca.FlowMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.FlowMap)
        org.openlca.proto.Proto.FlowMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowMap_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.FlowMap.class, org.openlca.proto.Proto.FlowMap.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.FlowMap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMappingsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        if (sourceBuilder_ == null) {
          source_ = null;
        } else {
          source_ = null;
          sourceBuilder_ = null;
        }
        if (targetBuilder_ == null) {
          target_ = null;
        } else {
          target_ = null;
          targetBuilder_ = null;
        }
        if (mappingsBuilder_ == null) {
          mappings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          mappingsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowMap_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowMap getDefaultInstanceForType() {
        return org.openlca.proto.Proto.FlowMap.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowMap build() {
        org.openlca.proto.Proto.FlowMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowMap buildPartial() {
        org.openlca.proto.Proto.FlowMap result = new org.openlca.proto.Proto.FlowMap(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (sourceBuilder_ == null) {
          result.source_ = source_;
        } else {
          result.source_ = sourceBuilder_.build();
        }
        if (targetBuilder_ == null) {
          result.target_ = target_;
        } else {
          result.target_ = targetBuilder_.build();
        }
        if (mappingsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            mappings_ = java.util.Collections.unmodifiableList(mappings_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.mappings_ = mappings_;
        } else {
          result.mappings_ = mappingsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.FlowMap) {
          return mergeFrom((org.openlca.proto.Proto.FlowMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.FlowMap other) {
        if (other == org.openlca.proto.Proto.FlowMap.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.hasSource()) {
          mergeSource(other.getSource());
        }
        if (other.hasTarget()) {
          mergeTarget(other.getTarget());
        }
        if (mappingsBuilder_ == null) {
          if (!other.mappings_.isEmpty()) {
            if (mappings_.isEmpty()) {
              mappings_ = other.mappings_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMappingsIsMutable();
              mappings_.addAll(other.mappings_);
            }
            onChanged();
          }
        } else {
          if (!other.mappings_.isEmpty()) {
            if (mappingsBuilder_.isEmpty()) {
              mappingsBuilder_.dispose();
              mappingsBuilder_ = null;
              mappings_ = other.mappings_;
              bitField0_ = (bitField0_ & ~0x00000001);
              mappingsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMappingsFieldBuilder() : null;
            } else {
              mappingsBuilder_.addAllMessages(other.mappings_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.FlowMap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.FlowMap) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref source_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> sourceBuilder_;
      /**
       * <pre>
       * The reference (id, name, description) of the source flow list.
       * </pre>
       *
       * <code>.protolca.Ref source = 7;</code>
       * @return Whether the source field is set.
       */
      public boolean hasSource() {
        return sourceBuilder_ != null || source_ != null;
      }
      /**
       * <pre>
       * The reference (id, name, description) of the source flow list.
       * </pre>
       *
       * <code>.protolca.Ref source = 7;</code>
       * @return The source.
       */
      public org.openlca.proto.Proto.Ref getSource() {
        if (sourceBuilder_ == null) {
          return source_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : source_;
        } else {
          return sourceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The reference (id, name, description) of the source flow list.
       * </pre>
       *
       * <code>.protolca.Ref source = 7;</code>
       */
      public Builder setSource(org.openlca.proto.Proto.Ref value) {
        if (sourceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          source_ = value;
          onChanged();
        } else {
          sourceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The reference (id, name, description) of the source flow list.
       * </pre>
       *
       * <code>.protolca.Ref source = 7;</code>
       */
      public Builder setSource(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (sourceBuilder_ == null) {
          source_ = builderForValue.build();
          onChanged();
        } else {
          sourceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The reference (id, name, description) of the source flow list.
       * </pre>
       *
       * <code>.protolca.Ref source = 7;</code>
       */
      public Builder mergeSource(org.openlca.proto.Proto.Ref value) {
        if (sourceBuilder_ == null) {
          if (source_ != null) {
            source_ =
              org.openlca.proto.Proto.Ref.newBuilder(source_).mergeFrom(value).buildPartial();
          } else {
            source_ = value;
          }
          onChanged();
        } else {
          sourceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The reference (id, name, description) of the source flow list.
       * </pre>
       *
       * <code>.protolca.Ref source = 7;</code>
       */
      public Builder clearSource() {
        if (sourceBuilder_ == null) {
          source_ = null;
          onChanged();
        } else {
          source_ = null;
          sourceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The reference (id, name, description) of the source flow list.
       * </pre>
       *
       * <code>.protolca.Ref source = 7;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getSourceBuilder() {
        
        onChanged();
        return getSourceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The reference (id, name, description) of the source flow list.
       * </pre>
       *
       * <code>.protolca.Ref source = 7;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getSourceOrBuilder() {
        if (sourceBuilder_ != null) {
          return sourceBuilder_.getMessageOrBuilder();
        } else {
          return source_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : source_;
        }
      }
      /**
       * <pre>
       * The reference (id, name, description) of the source flow list.
       * </pre>
       *
       * <code>.protolca.Ref source = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getSourceFieldBuilder() {
        if (sourceBuilder_ == null) {
          sourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getSource(),
                  getParentForChildren(),
                  isClean());
          source_ = null;
        }
        return sourceBuilder_;
      }

      private org.openlca.proto.Proto.Ref target_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> targetBuilder_;
      /**
       * <pre>
       * The reference (id, name, description) of the target flow list.
       * </pre>
       *
       * <code>.protolca.Ref target = 8;</code>
       * @return Whether the target field is set.
       */
      public boolean hasTarget() {
        return targetBuilder_ != null || target_ != null;
      }
      /**
       * <pre>
       * The reference (id, name, description) of the target flow list.
       * </pre>
       *
       * <code>.protolca.Ref target = 8;</code>
       * @return The target.
       */
      public org.openlca.proto.Proto.Ref getTarget() {
        if (targetBuilder_ == null) {
          return target_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : target_;
        } else {
          return targetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The reference (id, name, description) of the target flow list.
       * </pre>
       *
       * <code>.protolca.Ref target = 8;</code>
       */
      public Builder setTarget(org.openlca.proto.Proto.Ref value) {
        if (targetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          target_ = value;
          onChanged();
        } else {
          targetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The reference (id, name, description) of the target flow list.
       * </pre>
       *
       * <code>.protolca.Ref target = 8;</code>
       */
      public Builder setTarget(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (targetBuilder_ == null) {
          target_ = builderForValue.build();
          onChanged();
        } else {
          targetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The reference (id, name, description) of the target flow list.
       * </pre>
       *
       * <code>.protolca.Ref target = 8;</code>
       */
      public Builder mergeTarget(org.openlca.proto.Proto.Ref value) {
        if (targetBuilder_ == null) {
          if (target_ != null) {
            target_ =
              org.openlca.proto.Proto.Ref.newBuilder(target_).mergeFrom(value).buildPartial();
          } else {
            target_ = value;
          }
          onChanged();
        } else {
          targetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The reference (id, name, description) of the target flow list.
       * </pre>
       *
       * <code>.protolca.Ref target = 8;</code>
       */
      public Builder clearTarget() {
        if (targetBuilder_ == null) {
          target_ = null;
          onChanged();
        } else {
          target_ = null;
          targetBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The reference (id, name, description) of the target flow list.
       * </pre>
       *
       * <code>.protolca.Ref target = 8;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getTargetBuilder() {
        
        onChanged();
        return getTargetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The reference (id, name, description) of the target flow list.
       * </pre>
       *
       * <code>.protolca.Ref target = 8;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getTargetOrBuilder() {
        if (targetBuilder_ != null) {
          return targetBuilder_.getMessageOrBuilder();
        } else {
          return target_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : target_;
        }
      }
      /**
       * <pre>
       * The reference (id, name, description) of the target flow list.
       * </pre>
       *
       * <code>.protolca.Ref target = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getTargetFieldBuilder() {
        if (targetBuilder_ == null) {
          targetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getTarget(),
                  getParentForChildren(),
                  isClean());
          target_ = null;
        }
        return targetBuilder_;
      }

      private java.util.List<org.openlca.proto.Proto.FlowMapEntry> mappings_ =
        java.util.Collections.emptyList();
      private void ensureMappingsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          mappings_ = new java.util.ArrayList<org.openlca.proto.Proto.FlowMapEntry>(mappings_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.FlowMapEntry, org.openlca.proto.Proto.FlowMapEntry.Builder, org.openlca.proto.Proto.FlowMapEntryOrBuilder> mappingsBuilder_;

      /**
       * <pre>
       * A list of flow mappings from flows in a source flow list to flows in a
       * target flow list.
       * </pre>
       *
       * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
       */
      public java.util.List<org.openlca.proto.Proto.FlowMapEntry> getMappingsList() {
        if (mappingsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mappings_);
        } else {
          return mappingsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A list of flow mappings from flows in a source flow list to flows in a
       * target flow list.
       * </pre>
       *
       * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
       */
      public int getMappingsCount() {
        if (mappingsBuilder_ == null) {
          return mappings_.size();
        } else {
          return mappingsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A list of flow mappings from flows in a source flow list to flows in a
       * target flow list.
       * </pre>
       *
       * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
       */
      public org.openlca.proto.Proto.FlowMapEntry getMappings(int index) {
        if (mappingsBuilder_ == null) {
          return mappings_.get(index);
        } else {
          return mappingsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A list of flow mappings from flows in a source flow list to flows in a
       * target flow list.
       * </pre>
       *
       * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
       */
      public Builder setMappings(
          int index, org.openlca.proto.Proto.FlowMapEntry value) {
        if (mappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingsIsMutable();
          mappings_.set(index, value);
          onChanged();
        } else {
          mappingsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of flow mappings from flows in a source flow list to flows in a
       * target flow list.
       * </pre>
       *
       * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
       */
      public Builder setMappings(
          int index, org.openlca.proto.Proto.FlowMapEntry.Builder builderForValue) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.set(index, builderForValue.build());
          onChanged();
        } else {
          mappingsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of flow mappings from flows in a source flow list to flows in a
       * target flow list.
       * </pre>
       *
       * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
       */
      public Builder addMappings(org.openlca.proto.Proto.FlowMapEntry value) {
        if (mappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingsIsMutable();
          mappings_.add(value);
          onChanged();
        } else {
          mappingsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of flow mappings from flows in a source flow list to flows in a
       * target flow list.
       * </pre>
       *
       * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
       */
      public Builder addMappings(
          int index, org.openlca.proto.Proto.FlowMapEntry value) {
        if (mappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingsIsMutable();
          mappings_.add(index, value);
          onChanged();
        } else {
          mappingsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of flow mappings from flows in a source flow list to flows in a
       * target flow list.
       * </pre>
       *
       * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
       */
      public Builder addMappings(
          org.openlca.proto.Proto.FlowMapEntry.Builder builderForValue) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.add(builderForValue.build());
          onChanged();
        } else {
          mappingsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of flow mappings from flows in a source flow list to flows in a
       * target flow list.
       * </pre>
       *
       * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
       */
      public Builder addMappings(
          int index, org.openlca.proto.Proto.FlowMapEntry.Builder builderForValue) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.add(index, builderForValue.build());
          onChanged();
        } else {
          mappingsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of flow mappings from flows in a source flow list to flows in a
       * target flow list.
       * </pre>
       *
       * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
       */
      public Builder addAllMappings(
          java.lang.Iterable<? extends org.openlca.proto.Proto.FlowMapEntry> values) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mappings_);
          onChanged();
        } else {
          mappingsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A list of flow mappings from flows in a source flow list to flows in a
       * target flow list.
       * </pre>
       *
       * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
       */
      public Builder clearMappings() {
        if (mappingsBuilder_ == null) {
          mappings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          mappingsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A list of flow mappings from flows in a source flow list to flows in a
       * target flow list.
       * </pre>
       *
       * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
       */
      public Builder removeMappings(int index) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.remove(index);
          onChanged();
        } else {
          mappingsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A list of flow mappings from flows in a source flow list to flows in a
       * target flow list.
       * </pre>
       *
       * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
       */
      public org.openlca.proto.Proto.FlowMapEntry.Builder getMappingsBuilder(
          int index) {
        return getMappingsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A list of flow mappings from flows in a source flow list to flows in a
       * target flow list.
       * </pre>
       *
       * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
       */
      public org.openlca.proto.Proto.FlowMapEntryOrBuilder getMappingsOrBuilder(
          int index) {
        if (mappingsBuilder_ == null) {
          return mappings_.get(index);  } else {
          return mappingsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A list of flow mappings from flows in a source flow list to flows in a
       * target flow list.
       * </pre>
       *
       * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
       */
      public java.util.List<? extends org.openlca.proto.Proto.FlowMapEntryOrBuilder> 
           getMappingsOrBuilderList() {
        if (mappingsBuilder_ != null) {
          return mappingsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mappings_);
        }
      }
      /**
       * <pre>
       * A list of flow mappings from flows in a source flow list to flows in a
       * target flow list.
       * </pre>
       *
       * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
       */
      public org.openlca.proto.Proto.FlowMapEntry.Builder addMappingsBuilder() {
        return getMappingsFieldBuilder().addBuilder(
            org.openlca.proto.Proto.FlowMapEntry.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of flow mappings from flows in a source flow list to flows in a
       * target flow list.
       * </pre>
       *
       * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
       */
      public org.openlca.proto.Proto.FlowMapEntry.Builder addMappingsBuilder(
          int index) {
        return getMappingsFieldBuilder().addBuilder(
            index, org.openlca.proto.Proto.FlowMapEntry.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of flow mappings from flows in a source flow list to flows in a
       * target flow list.
       * </pre>
       *
       * <code>repeated .protolca.FlowMapEntry mappings = 9;</code>
       */
      public java.util.List<org.openlca.proto.Proto.FlowMapEntry.Builder> 
           getMappingsBuilderList() {
        return getMappingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.FlowMapEntry, org.openlca.proto.Proto.FlowMapEntry.Builder, org.openlca.proto.Proto.FlowMapEntryOrBuilder> 
          getMappingsFieldBuilder() {
        if (mappingsBuilder_ == null) {
          mappingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.proto.Proto.FlowMapEntry, org.openlca.proto.Proto.FlowMapEntry.Builder, org.openlca.proto.Proto.FlowMapEntryOrBuilder>(
                  mappings_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          mappings_ = null;
        }
        return mappingsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.FlowMap)
    }

    // @@protoc_insertion_point(class_scope:protolca.FlowMap)
    private static final org.openlca.proto.Proto.FlowMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.FlowMap();
    }

    public static org.openlca.proto.Proto.FlowMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlowMap>
        PARSER = new com.google.protobuf.AbstractParser<FlowMap>() {
      @java.lang.Override
      public FlowMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlowMap(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FlowMap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlowMap> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.FlowMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FlowMapEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.FlowMapEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The flow, flow property, and unit of the source flow.
     * </pre>
     *
     * <code>.protolca.FlowMapRef from = 7;</code>
     * @return Whether the from field is set.
     */
    boolean hasFrom();
    /**
     * <pre>
     * The flow, flow property, and unit of the source flow.
     * </pre>
     *
     * <code>.protolca.FlowMapRef from = 7;</code>
     * @return The from.
     */
    org.openlca.proto.Proto.FlowMapRef getFrom();
    /**
     * <pre>
     * The flow, flow property, and unit of the source flow.
     * </pre>
     *
     * <code>.protolca.FlowMapRef from = 7;</code>
     */
    org.openlca.proto.Proto.FlowMapRefOrBuilder getFromOrBuilder();

    /**
     * <pre>
     * The flow, flow property, and unit of the target flow.
     * </pre>
     *
     * <code>.protolca.FlowMapRef to = 8;</code>
     * @return Whether the to field is set.
     */
    boolean hasTo();
    /**
     * <pre>
     * The flow, flow property, and unit of the target flow.
     * </pre>
     *
     * <code>.protolca.FlowMapRef to = 8;</code>
     * @return The to.
     */
    org.openlca.proto.Proto.FlowMapRef getTo();
    /**
     * <pre>
     * The flow, flow property, and unit of the target flow.
     * </pre>
     *
     * <code>.protolca.FlowMapRef to = 8;</code>
     */
    org.openlca.proto.Proto.FlowMapRefOrBuilder getToOrBuilder();

    /**
     * <pre>
     * The factor to convert the original source flow to the target flow.
     * </pre>
     *
     * <code>double conversion_factor = 9;</code>
     * @return The conversionFactor.
     */
    double getConversionFactor();
  }
  /**
   * <pre>
   * A mapping from one flow to another.
   * </pre>
   *
   * Protobuf type {@code protolca.FlowMapEntry}
   */
  public static final class FlowMapEntry extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.FlowMapEntry)
      FlowMapEntryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FlowMapEntry.newBuilder() to construct.
    private FlowMapEntry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FlowMapEntry() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FlowMapEntry();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FlowMapEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.FlowMapRef.Builder subBuilder = null;
              if (from_ != null) {
                subBuilder = from_.toBuilder();
              }
              from_ = input.readMessage(org.openlca.proto.Proto.FlowMapRef.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(from_);
                from_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              org.openlca.proto.Proto.FlowMapRef.Builder subBuilder = null;
              if (to_ != null) {
                subBuilder = to_.toBuilder();
              }
              to_ = input.readMessage(org.openlca.proto.Proto.FlowMapRef.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(to_);
                to_ = subBuilder.buildPartial();
              }

              break;
            }
            case 73: {

              conversionFactor_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_FlowMapEntry_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_FlowMapEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.FlowMapEntry.class, org.openlca.proto.Proto.FlowMapEntry.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FROM_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.FlowMapRef from_;
    /**
     * <pre>
     * The flow, flow property, and unit of the source flow.
     * </pre>
     *
     * <code>.protolca.FlowMapRef from = 7;</code>
     * @return Whether the from field is set.
     */
    @java.lang.Override
    public boolean hasFrom() {
      return from_ != null;
    }
    /**
     * <pre>
     * The flow, flow property, and unit of the source flow.
     * </pre>
     *
     * <code>.protolca.FlowMapRef from = 7;</code>
     * @return The from.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.FlowMapRef getFrom() {
      return from_ == null ? org.openlca.proto.Proto.FlowMapRef.getDefaultInstance() : from_;
    }
    /**
     * <pre>
     * The flow, flow property, and unit of the source flow.
     * </pre>
     *
     * <code>.protolca.FlowMapRef from = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.FlowMapRefOrBuilder getFromOrBuilder() {
      return getFrom();
    }

    public static final int TO_FIELD_NUMBER = 8;
    private org.openlca.proto.Proto.FlowMapRef to_;
    /**
     * <pre>
     * The flow, flow property, and unit of the target flow.
     * </pre>
     *
     * <code>.protolca.FlowMapRef to = 8;</code>
     * @return Whether the to field is set.
     */
    @java.lang.Override
    public boolean hasTo() {
      return to_ != null;
    }
    /**
     * <pre>
     * The flow, flow property, and unit of the target flow.
     * </pre>
     *
     * <code>.protolca.FlowMapRef to = 8;</code>
     * @return The to.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.FlowMapRef getTo() {
      return to_ == null ? org.openlca.proto.Proto.FlowMapRef.getDefaultInstance() : to_;
    }
    /**
     * <pre>
     * The flow, flow property, and unit of the target flow.
     * </pre>
     *
     * <code>.protolca.FlowMapRef to = 8;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.FlowMapRefOrBuilder getToOrBuilder() {
      return getTo();
    }

    public static final int CONVERSION_FACTOR_FIELD_NUMBER = 9;
    private double conversionFactor_;
    /**
     * <pre>
     * The factor to convert the original source flow to the target flow.
     * </pre>
     *
     * <code>double conversion_factor = 9;</code>
     * @return The conversionFactor.
     */
    @java.lang.Override
    public double getConversionFactor() {
      return conversionFactor_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (from_ != null) {
        output.writeMessage(7, getFrom());
      }
      if (to_ != null) {
        output.writeMessage(8, getTo());
      }
      if (conversionFactor_ != 0D) {
        output.writeDouble(9, conversionFactor_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (from_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getFrom());
      }
      if (to_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getTo());
      }
      if (conversionFactor_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, conversionFactor_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.FlowMapEntry)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.FlowMapEntry other = (org.openlca.proto.Proto.FlowMapEntry) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (hasFrom() != other.hasFrom()) return false;
      if (hasFrom()) {
        if (!getFrom()
            .equals(other.getFrom())) return false;
      }
      if (hasTo() != other.hasTo()) return false;
      if (hasTo()) {
        if (!getTo()
            .equals(other.getTo())) return false;
      }
      if (java.lang.Double.doubleToLongBits(getConversionFactor())
          != java.lang.Double.doubleToLongBits(
              other.getConversionFactor())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (hasFrom()) {
        hash = (37 * hash) + FROM_FIELD_NUMBER;
        hash = (53 * hash) + getFrom().hashCode();
      }
      if (hasTo()) {
        hash = (37 * hash) + TO_FIELD_NUMBER;
        hash = (53 * hash) + getTo().hashCode();
      }
      hash = (37 * hash) + CONVERSION_FACTOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getConversionFactor()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.FlowMapEntry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowMapEntry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowMapEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowMapEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowMapEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowMapEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowMapEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowMapEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowMapEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowMapEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowMapEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowMapEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.FlowMapEntry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A mapping from one flow to another.
     * </pre>
     *
     * Protobuf type {@code protolca.FlowMapEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.FlowMapEntry)
        org.openlca.proto.Proto.FlowMapEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowMapEntry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowMapEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.FlowMapEntry.class, org.openlca.proto.Proto.FlowMapEntry.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.FlowMapEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        if (fromBuilder_ == null) {
          from_ = null;
        } else {
          from_ = null;
          fromBuilder_ = null;
        }
        if (toBuilder_ == null) {
          to_ = null;
        } else {
          to_ = null;
          toBuilder_ = null;
        }
        conversionFactor_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowMapEntry_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowMapEntry getDefaultInstanceForType() {
        return org.openlca.proto.Proto.FlowMapEntry.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowMapEntry build() {
        org.openlca.proto.Proto.FlowMapEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowMapEntry buildPartial() {
        org.openlca.proto.Proto.FlowMapEntry result = new org.openlca.proto.Proto.FlowMapEntry(this);
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (fromBuilder_ == null) {
          result.from_ = from_;
        } else {
          result.from_ = fromBuilder_.build();
        }
        if (toBuilder_ == null) {
          result.to_ = to_;
        } else {
          result.to_ = toBuilder_.build();
        }
        result.conversionFactor_ = conversionFactor_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.FlowMapEntry) {
          return mergeFrom((org.openlca.proto.Proto.FlowMapEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.FlowMapEntry other) {
        if (other == org.openlca.proto.Proto.FlowMapEntry.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.hasFrom()) {
          mergeFrom(other.getFrom());
        }
        if (other.hasTo()) {
          mergeTo(other.getTo());
        }
        if (other.getConversionFactor() != 0D) {
          setConversionFactor(other.getConversionFactor());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.FlowMapEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.FlowMapEntry) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.FlowMapRef from_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.FlowMapRef, org.openlca.proto.Proto.FlowMapRef.Builder, org.openlca.proto.Proto.FlowMapRefOrBuilder> fromBuilder_;
      /**
       * <pre>
       * The flow, flow property, and unit of the source flow.
       * </pre>
       *
       * <code>.protolca.FlowMapRef from = 7;</code>
       * @return Whether the from field is set.
       */
      public boolean hasFrom() {
        return fromBuilder_ != null || from_ != null;
      }
      /**
       * <pre>
       * The flow, flow property, and unit of the source flow.
       * </pre>
       *
       * <code>.protolca.FlowMapRef from = 7;</code>
       * @return The from.
       */
      public org.openlca.proto.Proto.FlowMapRef getFrom() {
        if (fromBuilder_ == null) {
          return from_ == null ? org.openlca.proto.Proto.FlowMapRef.getDefaultInstance() : from_;
        } else {
          return fromBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The flow, flow property, and unit of the source flow.
       * </pre>
       *
       * <code>.protolca.FlowMapRef from = 7;</code>
       */
      public Builder setFrom(org.openlca.proto.Proto.FlowMapRef value) {
        if (fromBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          from_ = value;
          onChanged();
        } else {
          fromBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The flow, flow property, and unit of the source flow.
       * </pre>
       *
       * <code>.protolca.FlowMapRef from = 7;</code>
       */
      public Builder setFrom(
          org.openlca.proto.Proto.FlowMapRef.Builder builderForValue) {
        if (fromBuilder_ == null) {
          from_ = builderForValue.build();
          onChanged();
        } else {
          fromBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The flow, flow property, and unit of the source flow.
       * </pre>
       *
       * <code>.protolca.FlowMapRef from = 7;</code>
       */
      public Builder mergeFrom(org.openlca.proto.Proto.FlowMapRef value) {
        if (fromBuilder_ == null) {
          if (from_ != null) {
            from_ =
              org.openlca.proto.Proto.FlowMapRef.newBuilder(from_).mergeFrom(value).buildPartial();
          } else {
            from_ = value;
          }
          onChanged();
        } else {
          fromBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The flow, flow property, and unit of the source flow.
       * </pre>
       *
       * <code>.protolca.FlowMapRef from = 7;</code>
       */
      public Builder clearFrom() {
        if (fromBuilder_ == null) {
          from_ = null;
          onChanged();
        } else {
          from_ = null;
          fromBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The flow, flow property, and unit of the source flow.
       * </pre>
       *
       * <code>.protolca.FlowMapRef from = 7;</code>
       */
      public org.openlca.proto.Proto.FlowMapRef.Builder getFromBuilder() {
        
        onChanged();
        return getFromFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The flow, flow property, and unit of the source flow.
       * </pre>
       *
       * <code>.protolca.FlowMapRef from = 7;</code>
       */
      public org.openlca.proto.Proto.FlowMapRefOrBuilder getFromOrBuilder() {
        if (fromBuilder_ != null) {
          return fromBuilder_.getMessageOrBuilder();
        } else {
          return from_ == null ?
              org.openlca.proto.Proto.FlowMapRef.getDefaultInstance() : from_;
        }
      }
      /**
       * <pre>
       * The flow, flow property, and unit of the source flow.
       * </pre>
       *
       * <code>.protolca.FlowMapRef from = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.FlowMapRef, org.openlca.proto.Proto.FlowMapRef.Builder, org.openlca.proto.Proto.FlowMapRefOrBuilder> 
          getFromFieldBuilder() {
        if (fromBuilder_ == null) {
          fromBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.FlowMapRef, org.openlca.proto.Proto.FlowMapRef.Builder, org.openlca.proto.Proto.FlowMapRefOrBuilder>(
                  getFrom(),
                  getParentForChildren(),
                  isClean());
          from_ = null;
        }
        return fromBuilder_;
      }

      private org.openlca.proto.Proto.FlowMapRef to_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.FlowMapRef, org.openlca.proto.Proto.FlowMapRef.Builder, org.openlca.proto.Proto.FlowMapRefOrBuilder> toBuilder_;
      /**
       * <pre>
       * The flow, flow property, and unit of the target flow.
       * </pre>
       *
       * <code>.protolca.FlowMapRef to = 8;</code>
       * @return Whether the to field is set.
       */
      public boolean hasTo() {
        return toBuilder_ != null || to_ != null;
      }
      /**
       * <pre>
       * The flow, flow property, and unit of the target flow.
       * </pre>
       *
       * <code>.protolca.FlowMapRef to = 8;</code>
       * @return The to.
       */
      public org.openlca.proto.Proto.FlowMapRef getTo() {
        if (toBuilder_ == null) {
          return to_ == null ? org.openlca.proto.Proto.FlowMapRef.getDefaultInstance() : to_;
        } else {
          return toBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The flow, flow property, and unit of the target flow.
       * </pre>
       *
       * <code>.protolca.FlowMapRef to = 8;</code>
       */
      public Builder setTo(org.openlca.proto.Proto.FlowMapRef value) {
        if (toBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          to_ = value;
          onChanged();
        } else {
          toBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The flow, flow property, and unit of the target flow.
       * </pre>
       *
       * <code>.protolca.FlowMapRef to = 8;</code>
       */
      public Builder setTo(
          org.openlca.proto.Proto.FlowMapRef.Builder builderForValue) {
        if (toBuilder_ == null) {
          to_ = builderForValue.build();
          onChanged();
        } else {
          toBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The flow, flow property, and unit of the target flow.
       * </pre>
       *
       * <code>.protolca.FlowMapRef to = 8;</code>
       */
      public Builder mergeTo(org.openlca.proto.Proto.FlowMapRef value) {
        if (toBuilder_ == null) {
          if (to_ != null) {
            to_ =
              org.openlca.proto.Proto.FlowMapRef.newBuilder(to_).mergeFrom(value).buildPartial();
          } else {
            to_ = value;
          }
          onChanged();
        } else {
          toBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The flow, flow property, and unit of the target flow.
       * </pre>
       *
       * <code>.protolca.FlowMapRef to = 8;</code>
       */
      public Builder clearTo() {
        if (toBuilder_ == null) {
          to_ = null;
          onChanged();
        } else {
          to_ = null;
          toBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The flow, flow property, and unit of the target flow.
       * </pre>
       *
       * <code>.protolca.FlowMapRef to = 8;</code>
       */
      public org.openlca.proto.Proto.FlowMapRef.Builder getToBuilder() {
        
        onChanged();
        return getToFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The flow, flow property, and unit of the target flow.
       * </pre>
       *
       * <code>.protolca.FlowMapRef to = 8;</code>
       */
      public org.openlca.proto.Proto.FlowMapRefOrBuilder getToOrBuilder() {
        if (toBuilder_ != null) {
          return toBuilder_.getMessageOrBuilder();
        } else {
          return to_ == null ?
              org.openlca.proto.Proto.FlowMapRef.getDefaultInstance() : to_;
        }
      }
      /**
       * <pre>
       * The flow, flow property, and unit of the target flow.
       * </pre>
       *
       * <code>.protolca.FlowMapRef to = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.FlowMapRef, org.openlca.proto.Proto.FlowMapRef.Builder, org.openlca.proto.Proto.FlowMapRefOrBuilder> 
          getToFieldBuilder() {
        if (toBuilder_ == null) {
          toBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.FlowMapRef, org.openlca.proto.Proto.FlowMapRef.Builder, org.openlca.proto.Proto.FlowMapRefOrBuilder>(
                  getTo(),
                  getParentForChildren(),
                  isClean());
          to_ = null;
        }
        return toBuilder_;
      }

      private double conversionFactor_ ;
      /**
       * <pre>
       * The factor to convert the original source flow to the target flow.
       * </pre>
       *
       * <code>double conversion_factor = 9;</code>
       * @return The conversionFactor.
       */
      @java.lang.Override
      public double getConversionFactor() {
        return conversionFactor_;
      }
      /**
       * <pre>
       * The factor to convert the original source flow to the target flow.
       * </pre>
       *
       * <code>double conversion_factor = 9;</code>
       * @param value The conversionFactor to set.
       * @return This builder for chaining.
       */
      public Builder setConversionFactor(double value) {
        
        conversionFactor_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The factor to convert the original source flow to the target flow.
       * </pre>
       *
       * <code>double conversion_factor = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearConversionFactor() {
        
        conversionFactor_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.FlowMapEntry)
    }

    // @@protoc_insertion_point(class_scope:protolca.FlowMapEntry)
    private static final org.openlca.proto.Proto.FlowMapEntry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.FlowMapEntry();
    }

    public static org.openlca.proto.Proto.FlowMapEntry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlowMapEntry>
        PARSER = new com.google.protobuf.AbstractParser<FlowMapEntry>() {
      @java.lang.Override
      public FlowMapEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlowMapEntry(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FlowMapEntry> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlowMapEntry> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.FlowMapEntry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FlowMapRefOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.FlowMapRef)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference to the flow data set.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 2;</code>
     * @return Whether the flow field is set.
     */
    boolean hasFlow();
    /**
     * <pre>
     * The reference to the flow data set.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 2;</code>
     * @return The flow.
     */
    org.openlca.proto.Proto.FlowRef getFlow();
    /**
     * <pre>
     * The reference to the flow data set.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 2;</code>
     */
    org.openlca.proto.Proto.FlowRefOrBuilder getFlowOrBuilder();

    /**
     * <pre>
     * An optional reference to a flow property of the flow for which the mapping
     * is valid.
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 3;</code>
     * @return Whether the flowProperty field is set.
     */
    boolean hasFlowProperty();
    /**
     * <pre>
     * An optional reference to a flow property of the flow for which the mapping
     * is valid.
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 3;</code>
     * @return The flowProperty.
     */
    org.openlca.proto.Proto.Ref getFlowProperty();
    /**
     * <pre>
     * An optional reference to a flow property of the flow for which the mapping
     * is valid.
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 3;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getFlowPropertyOrBuilder();

    /**
     * <pre>
     * An optional reference to a unit of the flow for which the mapping is valid
     * </pre>
     *
     * <code>.protolca.Ref unit = 4;</code>
     * @return Whether the unit field is set.
     */
    boolean hasUnit();
    /**
     * <pre>
     * An optional reference to a unit of the flow for which the mapping is valid
     * </pre>
     *
     * <code>.protolca.Ref unit = 4;</code>
     * @return The unit.
     */
    org.openlca.proto.Proto.Ref getUnit();
    /**
     * <pre>
     * An optional reference to a unit of the flow for which the mapping is valid
     * </pre>
     *
     * <code>.protolca.Ref unit = 4;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getUnitOrBuilder();
  }
  /**
   * <pre>
   * Describes a the source or target flow of a flow mapping in a `FlowMap`. Such
   * a flow reference can also optionally specify the unit and flow property
   * (quantity) for which the mapping is valid. If the unit and quantity are not
   * given, the mapping is based on the reference unit of the reference flow
   * property of the respective flow.
   * </pre>
   *
   * Protobuf type {@code protolca.FlowMapRef}
   */
  public static final class FlowMapRef extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.FlowMapRef)
      FlowMapRefOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FlowMapRef.newBuilder() to construct.
    private FlowMapRef(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FlowMapRef() {
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FlowMapRef();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FlowMapRef(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              org.openlca.proto.Proto.FlowRef.Builder subBuilder = null;
              if (flow_ != null) {
                subBuilder = flow_.toBuilder();
              }
              flow_ = input.readMessage(org.openlca.proto.Proto.FlowRef.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(flow_);
                flow_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (flowProperty_ != null) {
                subBuilder = flowProperty_.toBuilder();
              }
              flowProperty_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(flowProperty_);
                flowProperty_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (unit_ != null) {
                subBuilder = unit_.toBuilder();
              }
              unit_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(unit_);
                unit_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_FlowMapRef_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_FlowMapRef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.FlowMapRef.class, org.openlca.proto.Proto.FlowMapRef.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLOW_FIELD_NUMBER = 2;
    private org.openlca.proto.Proto.FlowRef flow_;
    /**
     * <pre>
     * The reference to the flow data set.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 2;</code>
     * @return Whether the flow field is set.
     */
    @java.lang.Override
    public boolean hasFlow() {
      return flow_ != null;
    }
    /**
     * <pre>
     * The reference to the flow data set.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 2;</code>
     * @return The flow.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.FlowRef getFlow() {
      return flow_ == null ? org.openlca.proto.Proto.FlowRef.getDefaultInstance() : flow_;
    }
    /**
     * <pre>
     * The reference to the flow data set.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 2;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.FlowRefOrBuilder getFlowOrBuilder() {
      return getFlow();
    }

    public static final int FLOW_PROPERTY_FIELD_NUMBER = 3;
    private org.openlca.proto.Proto.Ref flowProperty_;
    /**
     * <pre>
     * An optional reference to a flow property of the flow for which the mapping
     * is valid.
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 3;</code>
     * @return Whether the flowProperty field is set.
     */
    @java.lang.Override
    public boolean hasFlowProperty() {
      return flowProperty_ != null;
    }
    /**
     * <pre>
     * An optional reference to a flow property of the flow for which the mapping
     * is valid.
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 3;</code>
     * @return The flowProperty.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getFlowProperty() {
      return flowProperty_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : flowProperty_;
    }
    /**
     * <pre>
     * An optional reference to a flow property of the flow for which the mapping
     * is valid.
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 3;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getFlowPropertyOrBuilder() {
      return getFlowProperty();
    }

    public static final int UNIT_FIELD_NUMBER = 4;
    private org.openlca.proto.Proto.Ref unit_;
    /**
     * <pre>
     * An optional reference to a unit of the flow for which the mapping is valid
     * </pre>
     *
     * <code>.protolca.Ref unit = 4;</code>
     * @return Whether the unit field is set.
     */
    @java.lang.Override
    public boolean hasUnit() {
      return unit_ != null;
    }
    /**
     * <pre>
     * An optional reference to a unit of the flow for which the mapping is valid
     * </pre>
     *
     * <code>.protolca.Ref unit = 4;</code>
     * @return The unit.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getUnit() {
      return unit_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : unit_;
    }
    /**
     * <pre>
     * An optional reference to a unit of the flow for which the mapping is valid
     * </pre>
     *
     * <code>.protolca.Ref unit = 4;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getUnitOrBuilder() {
      return getUnit();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (flow_ != null) {
        output.writeMessage(2, getFlow());
      }
      if (flowProperty_ != null) {
        output.writeMessage(3, getFlowProperty());
      }
      if (unit_ != null) {
        output.writeMessage(4, getUnit());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (flow_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFlow());
      }
      if (flowProperty_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFlowProperty());
      }
      if (unit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getUnit());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.FlowMapRef)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.FlowMapRef other = (org.openlca.proto.Proto.FlowMapRef) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (hasFlow() != other.hasFlow()) return false;
      if (hasFlow()) {
        if (!getFlow()
            .equals(other.getFlow())) return false;
      }
      if (hasFlowProperty() != other.hasFlowProperty()) return false;
      if (hasFlowProperty()) {
        if (!getFlowProperty()
            .equals(other.getFlowProperty())) return false;
      }
      if (hasUnit() != other.hasUnit()) return false;
      if (hasUnit()) {
        if (!getUnit()
            .equals(other.getUnit())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      if (hasFlow()) {
        hash = (37 * hash) + FLOW_FIELD_NUMBER;
        hash = (53 * hash) + getFlow().hashCode();
      }
      if (hasFlowProperty()) {
        hash = (37 * hash) + FLOW_PROPERTY_FIELD_NUMBER;
        hash = (53 * hash) + getFlowProperty().hashCode();
      }
      if (hasUnit()) {
        hash = (37 * hash) + UNIT_FIELD_NUMBER;
        hash = (53 * hash) + getUnit().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.FlowMapRef parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowMapRef parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowMapRef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowMapRef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowMapRef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowMapRef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowMapRef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowMapRef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowMapRef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowMapRef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowMapRef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowMapRef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.FlowMapRef prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes a the source or target flow of a flow mapping in a `FlowMap`. Such
     * a flow reference can also optionally specify the unit and flow property
     * (quantity) for which the mapping is valid. If the unit and quantity are not
     * given, the mapping is based on the reference unit of the reference flow
     * property of the respective flow.
     * </pre>
     *
     * Protobuf type {@code protolca.FlowMapRef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.FlowMapRef)
        org.openlca.proto.Proto.FlowMapRefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowMapRef_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowMapRef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.FlowMapRef.class, org.openlca.proto.Proto.FlowMapRef.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.FlowMapRef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        if (flowBuilder_ == null) {
          flow_ = null;
        } else {
          flow_ = null;
          flowBuilder_ = null;
        }
        if (flowPropertyBuilder_ == null) {
          flowProperty_ = null;
        } else {
          flowProperty_ = null;
          flowPropertyBuilder_ = null;
        }
        if (unitBuilder_ == null) {
          unit_ = null;
        } else {
          unit_ = null;
          unitBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowMapRef_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowMapRef getDefaultInstanceForType() {
        return org.openlca.proto.Proto.FlowMapRef.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowMapRef build() {
        org.openlca.proto.Proto.FlowMapRef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowMapRef buildPartial() {
        org.openlca.proto.Proto.FlowMapRef result = new org.openlca.proto.Proto.FlowMapRef(this);
        result.type_ = type_;
        if (flowBuilder_ == null) {
          result.flow_ = flow_;
        } else {
          result.flow_ = flowBuilder_.build();
        }
        if (flowPropertyBuilder_ == null) {
          result.flowProperty_ = flowProperty_;
        } else {
          result.flowProperty_ = flowPropertyBuilder_.build();
        }
        if (unitBuilder_ == null) {
          result.unit_ = unit_;
        } else {
          result.unit_ = unitBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.FlowMapRef) {
          return mergeFrom((org.openlca.proto.Proto.FlowMapRef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.FlowMapRef other) {
        if (other == org.openlca.proto.Proto.FlowMapRef.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.hasFlow()) {
          mergeFlow(other.getFlow());
        }
        if (other.hasFlowProperty()) {
          mergeFlowProperty(other.getFlowProperty());
        }
        if (other.hasUnit()) {
          mergeUnit(other.getUnit());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.FlowMapRef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.FlowMapRef) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.FlowRef flow_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.FlowRef, org.openlca.proto.Proto.FlowRef.Builder, org.openlca.proto.Proto.FlowRefOrBuilder> flowBuilder_;
      /**
       * <pre>
       * The reference to the flow data set.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       * @return Whether the flow field is set.
       */
      public boolean hasFlow() {
        return flowBuilder_ != null || flow_ != null;
      }
      /**
       * <pre>
       * The reference to the flow data set.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       * @return The flow.
       */
      public org.openlca.proto.Proto.FlowRef getFlow() {
        if (flowBuilder_ == null) {
          return flow_ == null ? org.openlca.proto.Proto.FlowRef.getDefaultInstance() : flow_;
        } else {
          return flowBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The reference to the flow data set.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      public Builder setFlow(org.openlca.proto.Proto.FlowRef value) {
        if (flowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          flow_ = value;
          onChanged();
        } else {
          flowBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The reference to the flow data set.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      public Builder setFlow(
          org.openlca.proto.Proto.FlowRef.Builder builderForValue) {
        if (flowBuilder_ == null) {
          flow_ = builderForValue.build();
          onChanged();
        } else {
          flowBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The reference to the flow data set.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      public Builder mergeFlow(org.openlca.proto.Proto.FlowRef value) {
        if (flowBuilder_ == null) {
          if (flow_ != null) {
            flow_ =
              org.openlca.proto.Proto.FlowRef.newBuilder(flow_).mergeFrom(value).buildPartial();
          } else {
            flow_ = value;
          }
          onChanged();
        } else {
          flowBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The reference to the flow data set.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      public Builder clearFlow() {
        if (flowBuilder_ == null) {
          flow_ = null;
          onChanged();
        } else {
          flow_ = null;
          flowBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The reference to the flow data set.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      public org.openlca.proto.Proto.FlowRef.Builder getFlowBuilder() {
        
        onChanged();
        return getFlowFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The reference to the flow data set.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      public org.openlca.proto.Proto.FlowRefOrBuilder getFlowOrBuilder() {
        if (flowBuilder_ != null) {
          return flowBuilder_.getMessageOrBuilder();
        } else {
          return flow_ == null ?
              org.openlca.proto.Proto.FlowRef.getDefaultInstance() : flow_;
        }
      }
      /**
       * <pre>
       * The reference to the flow data set.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.FlowRef, org.openlca.proto.Proto.FlowRef.Builder, org.openlca.proto.Proto.FlowRefOrBuilder> 
          getFlowFieldBuilder() {
        if (flowBuilder_ == null) {
          flowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.FlowRef, org.openlca.proto.Proto.FlowRef.Builder, org.openlca.proto.Proto.FlowRefOrBuilder>(
                  getFlow(),
                  getParentForChildren(),
                  isClean());
          flow_ = null;
        }
        return flowBuilder_;
      }

      private org.openlca.proto.Proto.Ref flowProperty_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> flowPropertyBuilder_;
      /**
       * <pre>
       * An optional reference to a flow property of the flow for which the mapping
       * is valid.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 3;</code>
       * @return Whether the flowProperty field is set.
       */
      public boolean hasFlowProperty() {
        return flowPropertyBuilder_ != null || flowProperty_ != null;
      }
      /**
       * <pre>
       * An optional reference to a flow property of the flow for which the mapping
       * is valid.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 3;</code>
       * @return The flowProperty.
       */
      public org.openlca.proto.Proto.Ref getFlowProperty() {
        if (flowPropertyBuilder_ == null) {
          return flowProperty_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : flowProperty_;
        } else {
          return flowPropertyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * An optional reference to a flow property of the flow for which the mapping
       * is valid.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 3;</code>
       */
      public Builder setFlowProperty(org.openlca.proto.Proto.Ref value) {
        if (flowPropertyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          flowProperty_ = value;
          onChanged();
        } else {
          flowPropertyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * An optional reference to a flow property of the flow for which the mapping
       * is valid.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 3;</code>
       */
      public Builder setFlowProperty(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (flowPropertyBuilder_ == null) {
          flowProperty_ = builderForValue.build();
          onChanged();
        } else {
          flowPropertyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * An optional reference to a flow property of the flow for which the mapping
       * is valid.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 3;</code>
       */
      public Builder mergeFlowProperty(org.openlca.proto.Proto.Ref value) {
        if (flowPropertyBuilder_ == null) {
          if (flowProperty_ != null) {
            flowProperty_ =
              org.openlca.proto.Proto.Ref.newBuilder(flowProperty_).mergeFrom(value).buildPartial();
          } else {
            flowProperty_ = value;
          }
          onChanged();
        } else {
          flowPropertyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * An optional reference to a flow property of the flow for which the mapping
       * is valid.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 3;</code>
       */
      public Builder clearFlowProperty() {
        if (flowPropertyBuilder_ == null) {
          flowProperty_ = null;
          onChanged();
        } else {
          flowProperty_ = null;
          flowPropertyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * An optional reference to a flow property of the flow for which the mapping
       * is valid.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 3;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getFlowPropertyBuilder() {
        
        onChanged();
        return getFlowPropertyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * An optional reference to a flow property of the flow for which the mapping
       * is valid.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 3;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getFlowPropertyOrBuilder() {
        if (flowPropertyBuilder_ != null) {
          return flowPropertyBuilder_.getMessageOrBuilder();
        } else {
          return flowProperty_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : flowProperty_;
        }
      }
      /**
       * <pre>
       * An optional reference to a flow property of the flow for which the mapping
       * is valid.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getFlowPropertyFieldBuilder() {
        if (flowPropertyBuilder_ == null) {
          flowPropertyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getFlowProperty(),
                  getParentForChildren(),
                  isClean());
          flowProperty_ = null;
        }
        return flowPropertyBuilder_;
      }

      private org.openlca.proto.Proto.Ref unit_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> unitBuilder_;
      /**
       * <pre>
       * An optional reference to a unit of the flow for which the mapping is valid
       * </pre>
       *
       * <code>.protolca.Ref unit = 4;</code>
       * @return Whether the unit field is set.
       */
      public boolean hasUnit() {
        return unitBuilder_ != null || unit_ != null;
      }
      /**
       * <pre>
       * An optional reference to a unit of the flow for which the mapping is valid
       * </pre>
       *
       * <code>.protolca.Ref unit = 4;</code>
       * @return The unit.
       */
      public org.openlca.proto.Proto.Ref getUnit() {
        if (unitBuilder_ == null) {
          return unit_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : unit_;
        } else {
          return unitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * An optional reference to a unit of the flow for which the mapping is valid
       * </pre>
       *
       * <code>.protolca.Ref unit = 4;</code>
       */
      public Builder setUnit(org.openlca.proto.Proto.Ref value) {
        if (unitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          unit_ = value;
          onChanged();
        } else {
          unitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * An optional reference to a unit of the flow for which the mapping is valid
       * </pre>
       *
       * <code>.protolca.Ref unit = 4;</code>
       */
      public Builder setUnit(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (unitBuilder_ == null) {
          unit_ = builderForValue.build();
          onChanged();
        } else {
          unitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * An optional reference to a unit of the flow for which the mapping is valid
       * </pre>
       *
       * <code>.protolca.Ref unit = 4;</code>
       */
      public Builder mergeUnit(org.openlca.proto.Proto.Ref value) {
        if (unitBuilder_ == null) {
          if (unit_ != null) {
            unit_ =
              org.openlca.proto.Proto.Ref.newBuilder(unit_).mergeFrom(value).buildPartial();
          } else {
            unit_ = value;
          }
          onChanged();
        } else {
          unitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * An optional reference to a unit of the flow for which the mapping is valid
       * </pre>
       *
       * <code>.protolca.Ref unit = 4;</code>
       */
      public Builder clearUnit() {
        if (unitBuilder_ == null) {
          unit_ = null;
          onChanged();
        } else {
          unit_ = null;
          unitBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * An optional reference to a unit of the flow for which the mapping is valid
       * </pre>
       *
       * <code>.protolca.Ref unit = 4;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getUnitBuilder() {
        
        onChanged();
        return getUnitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * An optional reference to a unit of the flow for which the mapping is valid
       * </pre>
       *
       * <code>.protolca.Ref unit = 4;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getUnitOrBuilder() {
        if (unitBuilder_ != null) {
          return unitBuilder_.getMessageOrBuilder();
        } else {
          return unit_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : unit_;
        }
      }
      /**
       * <pre>
       * An optional reference to a unit of the flow for which the mapping is valid
       * </pre>
       *
       * <code>.protolca.Ref unit = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getUnitFieldBuilder() {
        if (unitBuilder_ == null) {
          unitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getUnit(),
                  getParentForChildren(),
                  isClean());
          unit_ = null;
        }
        return unitBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.FlowMapRef)
    }

    // @@protoc_insertion_point(class_scope:protolca.FlowMapRef)
    private static final org.openlca.proto.Proto.FlowMapRef DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.FlowMapRef();
    }

    public static org.openlca.proto.Proto.FlowMapRef getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlowMapRef>
        PARSER = new com.google.protobuf.AbstractParser<FlowMapRef>() {
      @java.lang.Override
      public FlowMapRef parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlowMapRef(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FlowMapRef> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlowMapRef> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.FlowMapRef getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FlowPropertyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.FlowProperty)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    boolean hasCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    org.openlca.proto.Proto.Ref getCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder();

    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    java.util.List<java.lang.String>
        getTagsList();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    int getTagsCount();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    java.lang.String getTags(int index);
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);

    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    java.lang.String getLibrary();
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    com.google.protobuf.ByteString
        getLibraryBytes();

    /**
     * <pre>
     * The type of the flow property
     * </pre>
     *
     * <code>.protolca.FlowPropertyType flow_property_type = 10;</code>
     * @return The enum numeric value on the wire for flowPropertyType.
     */
    int getFlowPropertyTypeValue();
    /**
     * <pre>
     * The type of the flow property
     * </pre>
     *
     * <code>.protolca.FlowPropertyType flow_property_type = 10;</code>
     * @return The flowPropertyType.
     */
    org.openlca.proto.Proto.FlowPropertyType getFlowPropertyType();

    /**
     * <pre>
     * The units of measure that can be used to express quantities of the flow
     * property.
     * </pre>
     *
     * <code>.protolca.Ref unit_group = 11;</code>
     * @return Whether the unitGroup field is set.
     */
    boolean hasUnitGroup();
    /**
     * <pre>
     * The units of measure that can be used to express quantities of the flow
     * property.
     * </pre>
     *
     * <code>.protolca.Ref unit_group = 11;</code>
     * @return The unitGroup.
     */
    org.openlca.proto.Proto.Ref getUnitGroup();
    /**
     * <pre>
     * The units of measure that can be used to express quantities of the flow
     * property.
     * </pre>
     *
     * <code>.protolca.Ref unit_group = 11;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getUnitGroupOrBuilder();
  }
  /**
   * <pre>
   * A flow property is a quantity that can be used to express amounts of a flow.
   * </pre>
   *
   * Protobuf type {@code protolca.FlowProperty}
   */
  public static final class FlowProperty extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.FlowProperty)
      FlowPropertyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FlowProperty.newBuilder() to construct.
    private FlowProperty(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FlowProperty() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      library_ = "";
      flowPropertyType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FlowProperty();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FlowProperty(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (category_ != null) {
                subBuilder = category_.toBuilder();
              }
              category_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(category_);
                category_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tags_.add(s);
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              library_ = s;
              break;
            }
            case 80: {
              int rawValue = input.readEnum();

              flowPropertyType_ = rawValue;
              break;
            }
            case 90: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (unitGroup_ != null) {
                subBuilder = unitGroup_.toBuilder();
              }
              unitGroup_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(unitGroup_);
                unitGroup_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_FlowProperty_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_FlowProperty_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.FlowProperty.class, org.openlca.proto.Proto.FlowProperty.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.Ref category_;
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    @java.lang.Override
    public boolean hasCategory() {
      return category_ != null;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getCategory() {
      return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
      return getCategory();
    }

    public static final int TAGS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    public static final int LIBRARY_FIELD_NUMBER = 9;
    private volatile java.lang.Object library_;
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    @java.lang.Override
    public java.lang.String getLibrary() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        library_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLibraryBytes() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        library_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLOW_PROPERTY_TYPE_FIELD_NUMBER = 10;
    private int flowPropertyType_;
    /**
     * <pre>
     * The type of the flow property
     * </pre>
     *
     * <code>.protolca.FlowPropertyType flow_property_type = 10;</code>
     * @return The enum numeric value on the wire for flowPropertyType.
     */
    @java.lang.Override public int getFlowPropertyTypeValue() {
      return flowPropertyType_;
    }
    /**
     * <pre>
     * The type of the flow property
     * </pre>
     *
     * <code>.protolca.FlowPropertyType flow_property_type = 10;</code>
     * @return The flowPropertyType.
     */
    @java.lang.Override public org.openlca.proto.Proto.FlowPropertyType getFlowPropertyType() {
      @SuppressWarnings("deprecation")
      org.openlca.proto.Proto.FlowPropertyType result = org.openlca.proto.Proto.FlowPropertyType.valueOf(flowPropertyType_);
      return result == null ? org.openlca.proto.Proto.FlowPropertyType.UNRECOGNIZED : result;
    }

    public static final int UNIT_GROUP_FIELD_NUMBER = 11;
    private org.openlca.proto.Proto.Ref unitGroup_;
    /**
     * <pre>
     * The units of measure that can be used to express quantities of the flow
     * property.
     * </pre>
     *
     * <code>.protolca.Ref unit_group = 11;</code>
     * @return Whether the unitGroup field is set.
     */
    @java.lang.Override
    public boolean hasUnitGroup() {
      return unitGroup_ != null;
    }
    /**
     * <pre>
     * The units of measure that can be used to express quantities of the flow
     * property.
     * </pre>
     *
     * <code>.protolca.Ref unit_group = 11;</code>
     * @return The unitGroup.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getUnitGroup() {
      return unitGroup_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : unitGroup_;
    }
    /**
     * <pre>
     * The units of measure that can be used to express quantities of the flow
     * property.
     * </pre>
     *
     * <code>.protolca.Ref unit_group = 11;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getUnitGroupOrBuilder() {
      return getUnitGroup();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (category_ != null) {
        output.writeMessage(7, getCategory());
      }
      for (int i = 0; i < tags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, tags_.getRaw(i));
      }
      if (!getLibraryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, library_);
      }
      if (flowPropertyType_ != org.openlca.proto.Proto.FlowPropertyType.UNDEFINED_FLOW_PROPERTY_TYPE.getNumber()) {
        output.writeEnum(10, flowPropertyType_);
      }
      if (unitGroup_ != null) {
        output.writeMessage(11, getUnitGroup());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (category_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCategory());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += computeStringSizeNoTag(tags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      if (!getLibraryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, library_);
      }
      if (flowPropertyType_ != org.openlca.proto.Proto.FlowPropertyType.UNDEFINED_FLOW_PROPERTY_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, flowPropertyType_);
      }
      if (unitGroup_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getUnitGroup());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.FlowProperty)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.FlowProperty other = (org.openlca.proto.Proto.FlowProperty) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (hasCategory() != other.hasCategory()) return false;
      if (hasCategory()) {
        if (!getCategory()
            .equals(other.getCategory())) return false;
      }
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (!getLibrary()
          .equals(other.getLibrary())) return false;
      if (flowPropertyType_ != other.flowPropertyType_) return false;
      if (hasUnitGroup() != other.hasUnitGroup()) return false;
      if (hasUnitGroup()) {
        if (!getUnitGroup()
            .equals(other.getUnitGroup())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (hasCategory()) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategory().hashCode();
      }
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibrary().hashCode();
      hash = (37 * hash) + FLOW_PROPERTY_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + flowPropertyType_;
      if (hasUnitGroup()) {
        hash = (37 * hash) + UNIT_GROUP_FIELD_NUMBER;
        hash = (53 * hash) + getUnitGroup().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.FlowProperty parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowProperty parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowProperty parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowProperty parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowProperty parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowProperty parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowProperty parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowProperty parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowProperty parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowProperty parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowProperty parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowProperty parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.FlowProperty prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A flow property is a quantity that can be used to express amounts of a flow.
     * </pre>
     *
     * Protobuf type {@code protolca.FlowProperty}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.FlowProperty)
        org.openlca.proto.Proto.FlowPropertyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowProperty_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowProperty_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.FlowProperty.class, org.openlca.proto.Proto.FlowProperty.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.FlowProperty.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        if (categoryBuilder_ == null) {
          category_ = null;
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        library_ = "";

        flowPropertyType_ = 0;

        if (unitGroupBuilder_ == null) {
          unitGroup_ = null;
        } else {
          unitGroup_ = null;
          unitGroupBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowProperty_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowProperty getDefaultInstanceForType() {
        return org.openlca.proto.Proto.FlowProperty.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowProperty build() {
        org.openlca.proto.Proto.FlowProperty result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowProperty buildPartial() {
        org.openlca.proto.Proto.FlowProperty result = new org.openlca.proto.Proto.FlowProperty(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (categoryBuilder_ == null) {
          result.category_ = category_;
        } else {
          result.category_ = categoryBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tags_ = tags_;
        result.library_ = library_;
        result.flowPropertyType_ = flowPropertyType_;
        if (unitGroupBuilder_ == null) {
          result.unitGroup_ = unitGroup_;
        } else {
          result.unitGroup_ = unitGroupBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.FlowProperty) {
          return mergeFrom((org.openlca.proto.Proto.FlowProperty)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.FlowProperty other) {
        if (other == org.openlca.proto.Proto.FlowProperty.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.hasCategory()) {
          mergeCategory(other.getCategory());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        if (!other.getLibrary().isEmpty()) {
          library_ = other.library_;
          onChanged();
        }
        if (other.flowPropertyType_ != 0) {
          setFlowPropertyTypeValue(other.getFlowPropertyTypeValue());
        }
        if (other.hasUnitGroup()) {
          mergeUnitGroup(other.getUnitGroup());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.FlowProperty parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.FlowProperty) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref category_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> categoryBuilder_;
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return Whether the category field is set.
       */
      public boolean hasCategory() {
        return categoryBuilder_ != null || category_ != null;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return The category.
       */
      public org.openlca.proto.Proto.Ref getCategory() {
        if (categoryBuilder_ == null) {
          return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        } else {
          return categoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          category_ = value;
          onChanged();
        } else {
          categoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          category_ = builderForValue.build();
          onChanged();
        } else {
          categoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder mergeCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (category_ != null) {
            category_ =
              org.openlca.proto.Proto.Ref.newBuilder(category_).mergeFrom(value).buildPartial();
          } else {
            category_ = value;
          }
          onChanged();
        } else {
          categoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder clearCategory() {
        if (categoryBuilder_ == null) {
          category_ = null;
          onChanged();
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getCategoryBuilder() {
        
        onChanged();
        return getCategoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
        if (categoryBuilder_ != null) {
          return categoryBuilder_.getMessageOrBuilder();
        } else {
          return category_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getCategoryFieldBuilder() {
        if (categoryBuilder_ == null) {
          categoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getCategory(),
                  getParentForChildren(),
                  isClean());
          category_ = null;
        }
        return categoryBuilder_;
      }

      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return A list containing the tags.
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return The count of tags.
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the element to return.
       * @return The tags at the given index.
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tags at the given index.
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index to set the value at.
       * @param value The tags to set.
       * @return This builder for chaining.
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The tags to add.
       * @return This builder for chaining.
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param values The tags to add.
       * @return This builder for chaining.
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The bytes of the tags to add.
       * @return This builder for chaining.
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object library_ = "";
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The library.
       */
      public java.lang.String getLibrary() {
        java.lang.Object ref = library_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          library_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The bytes for library.
       */
      public com.google.protobuf.ByteString
          getLibraryBytes() {
        java.lang.Object ref = library_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          library_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The library to set.
       * @return This builder for chaining.
       */
      public Builder setLibrary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        library_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLibrary() {
        
        library_ = getDefaultInstance().getLibrary();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The bytes for library to set.
       * @return This builder for chaining.
       */
      public Builder setLibraryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        library_ = value;
        onChanged();
        return this;
      }

      private int flowPropertyType_ = 0;
      /**
       * <pre>
       * The type of the flow property
       * </pre>
       *
       * <code>.protolca.FlowPropertyType flow_property_type = 10;</code>
       * @return The enum numeric value on the wire for flowPropertyType.
       */
      @java.lang.Override public int getFlowPropertyTypeValue() {
        return flowPropertyType_;
      }
      /**
       * <pre>
       * The type of the flow property
       * </pre>
       *
       * <code>.protolca.FlowPropertyType flow_property_type = 10;</code>
       * @param value The enum numeric value on the wire for flowPropertyType to set.
       * @return This builder for chaining.
       */
      public Builder setFlowPropertyTypeValue(int value) {
        
        flowPropertyType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of the flow property
       * </pre>
       *
       * <code>.protolca.FlowPropertyType flow_property_type = 10;</code>
       * @return The flowPropertyType.
       */
      @java.lang.Override
      public org.openlca.proto.Proto.FlowPropertyType getFlowPropertyType() {
        @SuppressWarnings("deprecation")
        org.openlca.proto.Proto.FlowPropertyType result = org.openlca.proto.Proto.FlowPropertyType.valueOf(flowPropertyType_);
        return result == null ? org.openlca.proto.Proto.FlowPropertyType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The type of the flow property
       * </pre>
       *
       * <code>.protolca.FlowPropertyType flow_property_type = 10;</code>
       * @param value The flowPropertyType to set.
       * @return This builder for chaining.
       */
      public Builder setFlowPropertyType(org.openlca.proto.Proto.FlowPropertyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        flowPropertyType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of the flow property
       * </pre>
       *
       * <code>.protolca.FlowPropertyType flow_property_type = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlowPropertyType() {
        
        flowPropertyType_ = 0;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref unitGroup_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> unitGroupBuilder_;
      /**
       * <pre>
       * The units of measure that can be used to express quantities of the flow
       * property.
       * </pre>
       *
       * <code>.protolca.Ref unit_group = 11;</code>
       * @return Whether the unitGroup field is set.
       */
      public boolean hasUnitGroup() {
        return unitGroupBuilder_ != null || unitGroup_ != null;
      }
      /**
       * <pre>
       * The units of measure that can be used to express quantities of the flow
       * property.
       * </pre>
       *
       * <code>.protolca.Ref unit_group = 11;</code>
       * @return The unitGroup.
       */
      public org.openlca.proto.Proto.Ref getUnitGroup() {
        if (unitGroupBuilder_ == null) {
          return unitGroup_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : unitGroup_;
        } else {
          return unitGroupBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The units of measure that can be used to express quantities of the flow
       * property.
       * </pre>
       *
       * <code>.protolca.Ref unit_group = 11;</code>
       */
      public Builder setUnitGroup(org.openlca.proto.Proto.Ref value) {
        if (unitGroupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          unitGroup_ = value;
          onChanged();
        } else {
          unitGroupBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The units of measure that can be used to express quantities of the flow
       * property.
       * </pre>
       *
       * <code>.protolca.Ref unit_group = 11;</code>
       */
      public Builder setUnitGroup(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (unitGroupBuilder_ == null) {
          unitGroup_ = builderForValue.build();
          onChanged();
        } else {
          unitGroupBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The units of measure that can be used to express quantities of the flow
       * property.
       * </pre>
       *
       * <code>.protolca.Ref unit_group = 11;</code>
       */
      public Builder mergeUnitGroup(org.openlca.proto.Proto.Ref value) {
        if (unitGroupBuilder_ == null) {
          if (unitGroup_ != null) {
            unitGroup_ =
              org.openlca.proto.Proto.Ref.newBuilder(unitGroup_).mergeFrom(value).buildPartial();
          } else {
            unitGroup_ = value;
          }
          onChanged();
        } else {
          unitGroupBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The units of measure that can be used to express quantities of the flow
       * property.
       * </pre>
       *
       * <code>.protolca.Ref unit_group = 11;</code>
       */
      public Builder clearUnitGroup() {
        if (unitGroupBuilder_ == null) {
          unitGroup_ = null;
          onChanged();
        } else {
          unitGroup_ = null;
          unitGroupBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The units of measure that can be used to express quantities of the flow
       * property.
       * </pre>
       *
       * <code>.protolca.Ref unit_group = 11;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getUnitGroupBuilder() {
        
        onChanged();
        return getUnitGroupFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The units of measure that can be used to express quantities of the flow
       * property.
       * </pre>
       *
       * <code>.protolca.Ref unit_group = 11;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getUnitGroupOrBuilder() {
        if (unitGroupBuilder_ != null) {
          return unitGroupBuilder_.getMessageOrBuilder();
        } else {
          return unitGroup_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : unitGroup_;
        }
      }
      /**
       * <pre>
       * The units of measure that can be used to express quantities of the flow
       * property.
       * </pre>
       *
       * <code>.protolca.Ref unit_group = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getUnitGroupFieldBuilder() {
        if (unitGroupBuilder_ == null) {
          unitGroupBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getUnitGroup(),
                  getParentForChildren(),
                  isClean());
          unitGroup_ = null;
        }
        return unitGroupBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.FlowProperty)
    }

    // @@protoc_insertion_point(class_scope:protolca.FlowProperty)
    private static final org.openlca.proto.Proto.FlowProperty DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.FlowProperty();
    }

    public static org.openlca.proto.Proto.FlowProperty getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlowProperty>
        PARSER = new com.google.protobuf.AbstractParser<FlowProperty>() {
      @java.lang.Override
      public FlowProperty parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlowProperty(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FlowProperty> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlowProperty> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.FlowProperty getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FlowPropertyFactorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.FlowPropertyFactor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The flow property (quantity) of the factor.
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 2;</code>
     * @return Whether the flowProperty field is set.
     */
    boolean hasFlowProperty();
    /**
     * <pre>
     * The flow property (quantity) of the factor.
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 2;</code>
     * @return The flowProperty.
     */
    org.openlca.proto.Proto.Ref getFlowProperty();
    /**
     * <pre>
     * The flow property (quantity) of the factor.
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 2;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getFlowPropertyOrBuilder();

    /**
     * <pre>
     * The value of the conversion factor.
     * </pre>
     *
     * <code>double conversion_factor = 3;</code>
     * @return The conversionFactor.
     */
    double getConversionFactor();

    /**
     * <pre>
     * Indicates whether the flow property of the factor is the reference flow
     * property of the flow. The reference flow property must have a conversion
     * factor of 1.0 and there should be only one reference flow property.
     * </pre>
     *
     * <code>bool reference_flow_property = 4;</code>
     * @return The referenceFlowProperty.
     */
    boolean getReferenceFlowProperty();
  }
  /**
   * <pre>
   * A FlowPropertyFactor is a conversion factor between &lt;a
   * href="./FlowProperty.html"&gt;flow properties (quantities)&lt;/a&gt; of a &lt;a
   * href="./Flow.html"&gt;flow&lt;/a&gt;. As an example the amount of the flow 'water' in
   * a process could be expressed in 'kg' mass or 'm3' volume. In this case the
   * flow water would have two flow property factors: one for the flow property
   * 'mass' and one for 'volume'. Each of these flow properties has a reference
   * to a &lt;a href="./UnitGroup.html"&gt;unit group&lt;/a&gt; which again has a reference
   * unit. In the example the flow property 'mass' could reference the unit group
   * 'units of mass' with 'kg' as reference unit and volume could reference the
   * unit group 'units of volume' with 'm3' as reference unit. The flow property
   * factor is now the conversion factor between these two reference units where
   * the factor of the reference flow property of the flow is 1. If the reference
   * flow property of 'water' in the example would be 'mass' the respective flow
   * property factor would be 1 and the factor for 'volume' would be 0.001 (as 1
   * kg water is 0.001 m3). The amount of water in a process can now be also
   * given in liter, tons, grams etc. For this, the unit conversion factor of the
   * respective unit group can be used to convert into the reference unit (which
   * then can be used to convert to the reference unit of another flow property).
   * Another thing to note is that different flow properties can refer to the
   * same unit group (e.g. MJ upper calorific value and MJ lower calorific
   * value.)
   * </pre>
   *
   * Protobuf type {@code protolca.FlowPropertyFactor}
   */
  public static final class FlowPropertyFactor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.FlowPropertyFactor)
      FlowPropertyFactorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FlowPropertyFactor.newBuilder() to construct.
    private FlowPropertyFactor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FlowPropertyFactor() {
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FlowPropertyFactor();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FlowPropertyFactor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (flowProperty_ != null) {
                subBuilder = flowProperty_.toBuilder();
              }
              flowProperty_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(flowProperty_);
                flowProperty_ = subBuilder.buildPartial();
              }

              break;
            }
            case 25: {

              conversionFactor_ = input.readDouble();
              break;
            }
            case 32: {

              referenceFlowProperty_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_FlowPropertyFactor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_FlowPropertyFactor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.FlowPropertyFactor.class, org.openlca.proto.Proto.FlowPropertyFactor.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLOW_PROPERTY_FIELD_NUMBER = 2;
    private org.openlca.proto.Proto.Ref flowProperty_;
    /**
     * <pre>
     * The flow property (quantity) of the factor.
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 2;</code>
     * @return Whether the flowProperty field is set.
     */
    @java.lang.Override
    public boolean hasFlowProperty() {
      return flowProperty_ != null;
    }
    /**
     * <pre>
     * The flow property (quantity) of the factor.
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 2;</code>
     * @return The flowProperty.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getFlowProperty() {
      return flowProperty_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : flowProperty_;
    }
    /**
     * <pre>
     * The flow property (quantity) of the factor.
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 2;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getFlowPropertyOrBuilder() {
      return getFlowProperty();
    }

    public static final int CONVERSION_FACTOR_FIELD_NUMBER = 3;
    private double conversionFactor_;
    /**
     * <pre>
     * The value of the conversion factor.
     * </pre>
     *
     * <code>double conversion_factor = 3;</code>
     * @return The conversionFactor.
     */
    @java.lang.Override
    public double getConversionFactor() {
      return conversionFactor_;
    }

    public static final int REFERENCE_FLOW_PROPERTY_FIELD_NUMBER = 4;
    private boolean referenceFlowProperty_;
    /**
     * <pre>
     * Indicates whether the flow property of the factor is the reference flow
     * property of the flow. The reference flow property must have a conversion
     * factor of 1.0 and there should be only one reference flow property.
     * </pre>
     *
     * <code>bool reference_flow_property = 4;</code>
     * @return The referenceFlowProperty.
     */
    @java.lang.Override
    public boolean getReferenceFlowProperty() {
      return referenceFlowProperty_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (flowProperty_ != null) {
        output.writeMessage(2, getFlowProperty());
      }
      if (conversionFactor_ != 0D) {
        output.writeDouble(3, conversionFactor_);
      }
      if (referenceFlowProperty_ != false) {
        output.writeBool(4, referenceFlowProperty_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (flowProperty_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFlowProperty());
      }
      if (conversionFactor_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, conversionFactor_);
      }
      if (referenceFlowProperty_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, referenceFlowProperty_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.FlowPropertyFactor)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.FlowPropertyFactor other = (org.openlca.proto.Proto.FlowPropertyFactor) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (hasFlowProperty() != other.hasFlowProperty()) return false;
      if (hasFlowProperty()) {
        if (!getFlowProperty()
            .equals(other.getFlowProperty())) return false;
      }
      if (java.lang.Double.doubleToLongBits(getConversionFactor())
          != java.lang.Double.doubleToLongBits(
              other.getConversionFactor())) return false;
      if (getReferenceFlowProperty()
          != other.getReferenceFlowProperty()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      if (hasFlowProperty()) {
        hash = (37 * hash) + FLOW_PROPERTY_FIELD_NUMBER;
        hash = (53 * hash) + getFlowProperty().hashCode();
      }
      hash = (37 * hash) + CONVERSION_FACTOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getConversionFactor()));
      hash = (37 * hash) + REFERENCE_FLOW_PROPERTY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getReferenceFlowProperty());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.FlowPropertyFactor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowPropertyFactor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowPropertyFactor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowPropertyFactor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowPropertyFactor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowPropertyFactor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowPropertyFactor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowPropertyFactor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowPropertyFactor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowPropertyFactor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowPropertyFactor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowPropertyFactor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.FlowPropertyFactor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A FlowPropertyFactor is a conversion factor between &lt;a
     * href="./FlowProperty.html"&gt;flow properties (quantities)&lt;/a&gt; of a &lt;a
     * href="./Flow.html"&gt;flow&lt;/a&gt;. As an example the amount of the flow 'water' in
     * a process could be expressed in 'kg' mass or 'm3' volume. In this case the
     * flow water would have two flow property factors: one for the flow property
     * 'mass' and one for 'volume'. Each of these flow properties has a reference
     * to a &lt;a href="./UnitGroup.html"&gt;unit group&lt;/a&gt; which again has a reference
     * unit. In the example the flow property 'mass' could reference the unit group
     * 'units of mass' with 'kg' as reference unit and volume could reference the
     * unit group 'units of volume' with 'm3' as reference unit. The flow property
     * factor is now the conversion factor between these two reference units where
     * the factor of the reference flow property of the flow is 1. If the reference
     * flow property of 'water' in the example would be 'mass' the respective flow
     * property factor would be 1 and the factor for 'volume' would be 0.001 (as 1
     * kg water is 0.001 m3). The amount of water in a process can now be also
     * given in liter, tons, grams etc. For this, the unit conversion factor of the
     * respective unit group can be used to convert into the reference unit (which
     * then can be used to convert to the reference unit of another flow property).
     * Another thing to note is that different flow properties can refer to the
     * same unit group (e.g. MJ upper calorific value and MJ lower calorific
     * value.)
     * </pre>
     *
     * Protobuf type {@code protolca.FlowPropertyFactor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.FlowPropertyFactor)
        org.openlca.proto.Proto.FlowPropertyFactorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowPropertyFactor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowPropertyFactor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.FlowPropertyFactor.class, org.openlca.proto.Proto.FlowPropertyFactor.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.FlowPropertyFactor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        if (flowPropertyBuilder_ == null) {
          flowProperty_ = null;
        } else {
          flowProperty_ = null;
          flowPropertyBuilder_ = null;
        }
        conversionFactor_ = 0D;

        referenceFlowProperty_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowPropertyFactor_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowPropertyFactor getDefaultInstanceForType() {
        return org.openlca.proto.Proto.FlowPropertyFactor.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowPropertyFactor build() {
        org.openlca.proto.Proto.FlowPropertyFactor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowPropertyFactor buildPartial() {
        org.openlca.proto.Proto.FlowPropertyFactor result = new org.openlca.proto.Proto.FlowPropertyFactor(this);
        result.type_ = type_;
        if (flowPropertyBuilder_ == null) {
          result.flowProperty_ = flowProperty_;
        } else {
          result.flowProperty_ = flowPropertyBuilder_.build();
        }
        result.conversionFactor_ = conversionFactor_;
        result.referenceFlowProperty_ = referenceFlowProperty_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.FlowPropertyFactor) {
          return mergeFrom((org.openlca.proto.Proto.FlowPropertyFactor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.FlowPropertyFactor other) {
        if (other == org.openlca.proto.Proto.FlowPropertyFactor.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.hasFlowProperty()) {
          mergeFlowProperty(other.getFlowProperty());
        }
        if (other.getConversionFactor() != 0D) {
          setConversionFactor(other.getConversionFactor());
        }
        if (other.getReferenceFlowProperty() != false) {
          setReferenceFlowProperty(other.getReferenceFlowProperty());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.FlowPropertyFactor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.FlowPropertyFactor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref flowProperty_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> flowPropertyBuilder_;
      /**
       * <pre>
       * The flow property (quantity) of the factor.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 2;</code>
       * @return Whether the flowProperty field is set.
       */
      public boolean hasFlowProperty() {
        return flowPropertyBuilder_ != null || flowProperty_ != null;
      }
      /**
       * <pre>
       * The flow property (quantity) of the factor.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 2;</code>
       * @return The flowProperty.
       */
      public org.openlca.proto.Proto.Ref getFlowProperty() {
        if (flowPropertyBuilder_ == null) {
          return flowProperty_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : flowProperty_;
        } else {
          return flowPropertyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The flow property (quantity) of the factor.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 2;</code>
       */
      public Builder setFlowProperty(org.openlca.proto.Proto.Ref value) {
        if (flowPropertyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          flowProperty_ = value;
          onChanged();
        } else {
          flowPropertyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The flow property (quantity) of the factor.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 2;</code>
       */
      public Builder setFlowProperty(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (flowPropertyBuilder_ == null) {
          flowProperty_ = builderForValue.build();
          onChanged();
        } else {
          flowPropertyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The flow property (quantity) of the factor.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 2;</code>
       */
      public Builder mergeFlowProperty(org.openlca.proto.Proto.Ref value) {
        if (flowPropertyBuilder_ == null) {
          if (flowProperty_ != null) {
            flowProperty_ =
              org.openlca.proto.Proto.Ref.newBuilder(flowProperty_).mergeFrom(value).buildPartial();
          } else {
            flowProperty_ = value;
          }
          onChanged();
        } else {
          flowPropertyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The flow property (quantity) of the factor.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 2;</code>
       */
      public Builder clearFlowProperty() {
        if (flowPropertyBuilder_ == null) {
          flowProperty_ = null;
          onChanged();
        } else {
          flowProperty_ = null;
          flowPropertyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The flow property (quantity) of the factor.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 2;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getFlowPropertyBuilder() {
        
        onChanged();
        return getFlowPropertyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The flow property (quantity) of the factor.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 2;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getFlowPropertyOrBuilder() {
        if (flowPropertyBuilder_ != null) {
          return flowPropertyBuilder_.getMessageOrBuilder();
        } else {
          return flowProperty_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : flowProperty_;
        }
      }
      /**
       * <pre>
       * The flow property (quantity) of the factor.
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getFlowPropertyFieldBuilder() {
        if (flowPropertyBuilder_ == null) {
          flowPropertyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getFlowProperty(),
                  getParentForChildren(),
                  isClean());
          flowProperty_ = null;
        }
        return flowPropertyBuilder_;
      }

      private double conversionFactor_ ;
      /**
       * <pre>
       * The value of the conversion factor.
       * </pre>
       *
       * <code>double conversion_factor = 3;</code>
       * @return The conversionFactor.
       */
      @java.lang.Override
      public double getConversionFactor() {
        return conversionFactor_;
      }
      /**
       * <pre>
       * The value of the conversion factor.
       * </pre>
       *
       * <code>double conversion_factor = 3;</code>
       * @param value The conversionFactor to set.
       * @return This builder for chaining.
       */
      public Builder setConversionFactor(double value) {
        
        conversionFactor_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The value of the conversion factor.
       * </pre>
       *
       * <code>double conversion_factor = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearConversionFactor() {
        
        conversionFactor_ = 0D;
        onChanged();
        return this;
      }

      private boolean referenceFlowProperty_ ;
      /**
       * <pre>
       * Indicates whether the flow property of the factor is the reference flow
       * property of the flow. The reference flow property must have a conversion
       * factor of 1.0 and there should be only one reference flow property.
       * </pre>
       *
       * <code>bool reference_flow_property = 4;</code>
       * @return The referenceFlowProperty.
       */
      @java.lang.Override
      public boolean getReferenceFlowProperty() {
        return referenceFlowProperty_;
      }
      /**
       * <pre>
       * Indicates whether the flow property of the factor is the reference flow
       * property of the flow. The reference flow property must have a conversion
       * factor of 1.0 and there should be only one reference flow property.
       * </pre>
       *
       * <code>bool reference_flow_property = 4;</code>
       * @param value The referenceFlowProperty to set.
       * @return This builder for chaining.
       */
      public Builder setReferenceFlowProperty(boolean value) {
        
        referenceFlowProperty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates whether the flow property of the factor is the reference flow
       * property of the flow. The reference flow property must have a conversion
       * factor of 1.0 and there should be only one reference flow property.
       * </pre>
       *
       * <code>bool reference_flow_property = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearReferenceFlowProperty() {
        
        referenceFlowProperty_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.FlowPropertyFactor)
    }

    // @@protoc_insertion_point(class_scope:protolca.FlowPropertyFactor)
    private static final org.openlca.proto.Proto.FlowPropertyFactor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.FlowPropertyFactor();
    }

    public static org.openlca.proto.Proto.FlowPropertyFactor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlowPropertyFactor>
        PARSER = new com.google.protobuf.AbstractParser<FlowPropertyFactor>() {
      @java.lang.Override
      public FlowPropertyFactor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlowPropertyFactor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FlowPropertyFactor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlowPropertyFactor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.FlowPropertyFactor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FlowRefOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.FlowRef)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The name (symbol) of the reference unit of the flow.
     * </pre>
     *
     * <code>string ref_unit = 1;</code>
     * @return The refUnit.
     */
    java.lang.String getRefUnit();
    /**
     * <pre>
     * The name (symbol) of the reference unit of the flow.
     * </pre>
     *
     * <code>string ref_unit = 1;</code>
     * @return The bytes for refUnit.
     */
    com.google.protobuf.ByteString
        getRefUnitBytes();

    /**
     * <pre>
     * The location name or code of the flow. Typically, this is only used for
     * product flows in databases like ecoinvent.
     * </pre>
     *
     * <code>string location = 2;</code>
     * @return The location.
     */
    java.lang.String getLocation();
    /**
     * <pre>
     * The location name or code of the flow. Typically, this is only used for
     * product flows in databases like ecoinvent.
     * </pre>
     *
     * <code>string location = 2;</code>
     * @return The bytes for location.
     */
    com.google.protobuf.ByteString
        getLocationBytes();

    /**
     * <pre>
     * The type of the flow.
     * </pre>
     *
     * <code>.protolca.FlowType flow_type = 3;</code>
     * @return The enum numeric value on the wire for flowType.
     */
    int getFlowTypeValue();
    /**
     * <pre>
     * The type of the flow.
     * </pre>
     *
     * <code>.protolca.FlowType flow_type = 3;</code>
     * @return The flowType.
     */
    org.openlca.proto.Proto.FlowType getFlowType();
  }
  /**
   * <pre>
   * A reference to a [Flow] data set.
   * </pre>
   *
   * Protobuf type {@code protolca.FlowRef}
   */
  public static final class FlowRef extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.FlowRef)
      FlowRefOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FlowRef.newBuilder() to construct.
    private FlowRef(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FlowRef() {
      refUnit_ = "";
      location_ = "";
      flowType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FlowRef();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FlowRef(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              refUnit_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              location_ = s;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              flowType_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_FlowRef_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_FlowRef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.FlowRef.class, org.openlca.proto.Proto.FlowRef.Builder.class);
    }

    public static final int REF_UNIT_FIELD_NUMBER = 1;
    private volatile java.lang.Object refUnit_;
    /**
     * <pre>
     * The name (symbol) of the reference unit of the flow.
     * </pre>
     *
     * <code>string ref_unit = 1;</code>
     * @return The refUnit.
     */
    @java.lang.Override
    public java.lang.String getRefUnit() {
      java.lang.Object ref = refUnit_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        refUnit_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name (symbol) of the reference unit of the flow.
     * </pre>
     *
     * <code>string ref_unit = 1;</code>
     * @return The bytes for refUnit.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRefUnitBytes() {
      java.lang.Object ref = refUnit_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        refUnit_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOCATION_FIELD_NUMBER = 2;
    private volatile java.lang.Object location_;
    /**
     * <pre>
     * The location name or code of the flow. Typically, this is only used for
     * product flows in databases like ecoinvent.
     * </pre>
     *
     * <code>string location = 2;</code>
     * @return The location.
     */
    @java.lang.Override
    public java.lang.String getLocation() {
      java.lang.Object ref = location_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        location_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The location name or code of the flow. Typically, this is only used for
     * product flows in databases like ecoinvent.
     * </pre>
     *
     * <code>string location = 2;</code>
     * @return The bytes for location.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLocationBytes() {
      java.lang.Object ref = location_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        location_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLOW_TYPE_FIELD_NUMBER = 3;
    private int flowType_;
    /**
     * <pre>
     * The type of the flow.
     * </pre>
     *
     * <code>.protolca.FlowType flow_type = 3;</code>
     * @return The enum numeric value on the wire for flowType.
     */
    @java.lang.Override public int getFlowTypeValue() {
      return flowType_;
    }
    /**
     * <pre>
     * The type of the flow.
     * </pre>
     *
     * <code>.protolca.FlowType flow_type = 3;</code>
     * @return The flowType.
     */
    @java.lang.Override public org.openlca.proto.Proto.FlowType getFlowType() {
      @SuppressWarnings("deprecation")
      org.openlca.proto.Proto.FlowType result = org.openlca.proto.Proto.FlowType.valueOf(flowType_);
      return result == null ? org.openlca.proto.Proto.FlowType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getRefUnitBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, refUnit_);
      }
      if (!getLocationBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, location_);
      }
      if (flowType_ != org.openlca.proto.Proto.FlowType.UNDEFINED_FLOW_TYPE.getNumber()) {
        output.writeEnum(3, flowType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getRefUnitBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, refUnit_);
      }
      if (!getLocationBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, location_);
      }
      if (flowType_ != org.openlca.proto.Proto.FlowType.UNDEFINED_FLOW_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, flowType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.FlowRef)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.FlowRef other = (org.openlca.proto.Proto.FlowRef) obj;

      if (!getRefUnit()
          .equals(other.getRefUnit())) return false;
      if (!getLocation()
          .equals(other.getLocation())) return false;
      if (flowType_ != other.flowType_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REF_UNIT_FIELD_NUMBER;
      hash = (53 * hash) + getRefUnit().hashCode();
      hash = (37 * hash) + LOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getLocation().hashCode();
      hash = (37 * hash) + FLOW_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + flowType_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.FlowRef parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowRef parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowRef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowRef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowRef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowRef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowRef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowRef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowRef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowRef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowRef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowRef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.FlowRef prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A reference to a [Flow] data set.
     * </pre>
     *
     * Protobuf type {@code protolca.FlowRef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.FlowRef)
        org.openlca.proto.Proto.FlowRefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowRef_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowRef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.FlowRef.class, org.openlca.proto.Proto.FlowRef.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.FlowRef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        refUnit_ = "";

        location_ = "";

        flowType_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowRef_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowRef getDefaultInstanceForType() {
        return org.openlca.proto.Proto.FlowRef.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowRef build() {
        org.openlca.proto.Proto.FlowRef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowRef buildPartial() {
        org.openlca.proto.Proto.FlowRef result = new org.openlca.proto.Proto.FlowRef(this);
        result.refUnit_ = refUnit_;
        result.location_ = location_;
        result.flowType_ = flowType_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.FlowRef) {
          return mergeFrom((org.openlca.proto.Proto.FlowRef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.FlowRef other) {
        if (other == org.openlca.proto.Proto.FlowRef.getDefaultInstance()) return this;
        if (!other.getRefUnit().isEmpty()) {
          refUnit_ = other.refUnit_;
          onChanged();
        }
        if (!other.getLocation().isEmpty()) {
          location_ = other.location_;
          onChanged();
        }
        if (other.flowType_ != 0) {
          setFlowTypeValue(other.getFlowTypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.FlowRef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.FlowRef) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object refUnit_ = "";
      /**
       * <pre>
       * The name (symbol) of the reference unit of the flow.
       * </pre>
       *
       * <code>string ref_unit = 1;</code>
       * @return The refUnit.
       */
      public java.lang.String getRefUnit() {
        java.lang.Object ref = refUnit_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          refUnit_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name (symbol) of the reference unit of the flow.
       * </pre>
       *
       * <code>string ref_unit = 1;</code>
       * @return The bytes for refUnit.
       */
      public com.google.protobuf.ByteString
          getRefUnitBytes() {
        java.lang.Object ref = refUnit_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          refUnit_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name (symbol) of the reference unit of the flow.
       * </pre>
       *
       * <code>string ref_unit = 1;</code>
       * @param value The refUnit to set.
       * @return This builder for chaining.
       */
      public Builder setRefUnit(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        refUnit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name (symbol) of the reference unit of the flow.
       * </pre>
       *
       * <code>string ref_unit = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRefUnit() {
        
        refUnit_ = getDefaultInstance().getRefUnit();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name (symbol) of the reference unit of the flow.
       * </pre>
       *
       * <code>string ref_unit = 1;</code>
       * @param value The bytes for refUnit to set.
       * @return This builder for chaining.
       */
      public Builder setRefUnitBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        refUnit_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object location_ = "";
      /**
       * <pre>
       * The location name or code of the flow. Typically, this is only used for
       * product flows in databases like ecoinvent.
       * </pre>
       *
       * <code>string location = 2;</code>
       * @return The location.
       */
      public java.lang.String getLocation() {
        java.lang.Object ref = location_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          location_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The location name or code of the flow. Typically, this is only used for
       * product flows in databases like ecoinvent.
       * </pre>
       *
       * <code>string location = 2;</code>
       * @return The bytes for location.
       */
      public com.google.protobuf.ByteString
          getLocationBytes() {
        java.lang.Object ref = location_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          location_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The location name or code of the flow. Typically, this is only used for
       * product flows in databases like ecoinvent.
       * </pre>
       *
       * <code>string location = 2;</code>
       * @param value The location to set.
       * @return This builder for chaining.
       */
      public Builder setLocation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        location_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The location name or code of the flow. Typically, this is only used for
       * product flows in databases like ecoinvent.
       * </pre>
       *
       * <code>string location = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLocation() {
        
        location_ = getDefaultInstance().getLocation();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The location name or code of the flow. Typically, this is only used for
       * product flows in databases like ecoinvent.
       * </pre>
       *
       * <code>string location = 2;</code>
       * @param value The bytes for location to set.
       * @return This builder for chaining.
       */
      public Builder setLocationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        location_ = value;
        onChanged();
        return this;
      }

      private int flowType_ = 0;
      /**
       * <pre>
       * The type of the flow.
       * </pre>
       *
       * <code>.protolca.FlowType flow_type = 3;</code>
       * @return The enum numeric value on the wire for flowType.
       */
      @java.lang.Override public int getFlowTypeValue() {
        return flowType_;
      }
      /**
       * <pre>
       * The type of the flow.
       * </pre>
       *
       * <code>.protolca.FlowType flow_type = 3;</code>
       * @param value The enum numeric value on the wire for flowType to set.
       * @return This builder for chaining.
       */
      public Builder setFlowTypeValue(int value) {
        
        flowType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of the flow.
       * </pre>
       *
       * <code>.protolca.FlowType flow_type = 3;</code>
       * @return The flowType.
       */
      @java.lang.Override
      public org.openlca.proto.Proto.FlowType getFlowType() {
        @SuppressWarnings("deprecation")
        org.openlca.proto.Proto.FlowType result = org.openlca.proto.Proto.FlowType.valueOf(flowType_);
        return result == null ? org.openlca.proto.Proto.FlowType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The type of the flow.
       * </pre>
       *
       * <code>.protolca.FlowType flow_type = 3;</code>
       * @param value The flowType to set.
       * @return This builder for chaining.
       */
      public Builder setFlowType(org.openlca.proto.Proto.FlowType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        flowType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of the flow.
       * </pre>
       *
       * <code>.protolca.FlowType flow_type = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlowType() {
        
        flowType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.FlowRef)
    }

    // @@protoc_insertion_point(class_scope:protolca.FlowRef)
    private static final org.openlca.proto.Proto.FlowRef DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.FlowRef();
    }

    public static org.openlca.proto.Proto.FlowRef getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlowRef>
        PARSER = new com.google.protobuf.AbstractParser<FlowRef>() {
      @java.lang.Override
      public FlowRef parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlowRef(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FlowRef> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlowRef> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.FlowRef getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FlowResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.FlowResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The flow reference.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 2;</code>
     * @return Whether the flow field is set.
     */
    boolean hasFlow();
    /**
     * <pre>
     * The flow reference.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 2;</code>
     * @return The flow.
     */
    org.openlca.proto.Proto.FlowRef getFlow();
    /**
     * <pre>
     * The flow reference.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 2;</code>
     */
    org.openlca.proto.Proto.FlowRefOrBuilder getFlowOrBuilder();

    /**
     * <pre>
     * Indicates whether the flow is an input or not.
     * </pre>
     *
     * <code>bool input = 3;</code>
     * @return The input.
     */
    boolean getInput();

    /**
     * <pre>
     * The value of the flow amount.
     * </pre>
     *
     * <code>double value = 4;</code>
     * @return The value.
     */
    double getValue();
  }
  /**
   * <pre>
   * A result value for a flow; given in the reference unit of the flow.
   * </pre>
   *
   * Protobuf type {@code protolca.FlowResult}
   */
  public static final class FlowResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.FlowResult)
      FlowResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FlowResult.newBuilder() to construct.
    private FlowResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FlowResult() {
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FlowResult();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FlowResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              org.openlca.proto.Proto.FlowRef.Builder subBuilder = null;
              if (flow_ != null) {
                subBuilder = flow_.toBuilder();
              }
              flow_ = input.readMessage(org.openlca.proto.Proto.FlowRef.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(flow_);
                flow_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              input_ = input.readBool();
              break;
            }
            case 33: {

              value_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_FlowResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_FlowResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.FlowResult.class, org.openlca.proto.Proto.FlowResult.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLOW_FIELD_NUMBER = 2;
    private org.openlca.proto.Proto.FlowRef flow_;
    /**
     * <pre>
     * The flow reference.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 2;</code>
     * @return Whether the flow field is set.
     */
    @java.lang.Override
    public boolean hasFlow() {
      return flow_ != null;
    }
    /**
     * <pre>
     * The flow reference.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 2;</code>
     * @return The flow.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.FlowRef getFlow() {
      return flow_ == null ? org.openlca.proto.Proto.FlowRef.getDefaultInstance() : flow_;
    }
    /**
     * <pre>
     * The flow reference.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 2;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.FlowRefOrBuilder getFlowOrBuilder() {
      return getFlow();
    }

    public static final int INPUT_FIELD_NUMBER = 3;
    private boolean input_;
    /**
     * <pre>
     * Indicates whether the flow is an input or not.
     * </pre>
     *
     * <code>bool input = 3;</code>
     * @return The input.
     */
    @java.lang.Override
    public boolean getInput() {
      return input_;
    }

    public static final int VALUE_FIELD_NUMBER = 4;
    private double value_;
    /**
     * <pre>
     * The value of the flow amount.
     * </pre>
     *
     * <code>double value = 4;</code>
     * @return The value.
     */
    @java.lang.Override
    public double getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (flow_ != null) {
        output.writeMessage(2, getFlow());
      }
      if (input_ != false) {
        output.writeBool(3, input_);
      }
      if (value_ != 0D) {
        output.writeDouble(4, value_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (flow_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFlow());
      }
      if (input_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, input_);
      }
      if (value_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.FlowResult)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.FlowResult other = (org.openlca.proto.Proto.FlowResult) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (hasFlow() != other.hasFlow()) return false;
      if (hasFlow()) {
        if (!getFlow()
            .equals(other.getFlow())) return false;
      }
      if (getInput()
          != other.getInput()) return false;
      if (java.lang.Double.doubleToLongBits(getValue())
          != java.lang.Double.doubleToLongBits(
              other.getValue())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      if (hasFlow()) {
        hash = (37 * hash) + FLOW_FIELD_NUMBER;
        hash = (53 * hash) + getFlow().hashCode();
      }
      hash = (37 * hash) + INPUT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getInput());
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getValue()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.FlowResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.FlowResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.FlowResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.FlowResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.FlowResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A result value for a flow; given in the reference unit of the flow.
     * </pre>
     *
     * Protobuf type {@code protolca.FlowResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.FlowResult)
        org.openlca.proto.Proto.FlowResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.FlowResult.class, org.openlca.proto.Proto.FlowResult.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.FlowResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        if (flowBuilder_ == null) {
          flow_ = null;
        } else {
          flow_ = null;
          flowBuilder_ = null;
        }
        input_ = false;

        value_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_FlowResult_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowResult getDefaultInstanceForType() {
        return org.openlca.proto.Proto.FlowResult.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowResult build() {
        org.openlca.proto.Proto.FlowResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.FlowResult buildPartial() {
        org.openlca.proto.Proto.FlowResult result = new org.openlca.proto.Proto.FlowResult(this);
        result.type_ = type_;
        if (flowBuilder_ == null) {
          result.flow_ = flow_;
        } else {
          result.flow_ = flowBuilder_.build();
        }
        result.input_ = input_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.FlowResult) {
          return mergeFrom((org.openlca.proto.Proto.FlowResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.FlowResult other) {
        if (other == org.openlca.proto.Proto.FlowResult.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.hasFlow()) {
          mergeFlow(other.getFlow());
        }
        if (other.getInput() != false) {
          setInput(other.getInput());
        }
        if (other.getValue() != 0D) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.FlowResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.FlowResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.FlowRef flow_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.FlowRef, org.openlca.proto.Proto.FlowRef.Builder, org.openlca.proto.Proto.FlowRefOrBuilder> flowBuilder_;
      /**
       * <pre>
       * The flow reference.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       * @return Whether the flow field is set.
       */
      public boolean hasFlow() {
        return flowBuilder_ != null || flow_ != null;
      }
      /**
       * <pre>
       * The flow reference.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       * @return The flow.
       */
      public org.openlca.proto.Proto.FlowRef getFlow() {
        if (flowBuilder_ == null) {
          return flow_ == null ? org.openlca.proto.Proto.FlowRef.getDefaultInstance() : flow_;
        } else {
          return flowBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The flow reference.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      public Builder setFlow(org.openlca.proto.Proto.FlowRef value) {
        if (flowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          flow_ = value;
          onChanged();
        } else {
          flowBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The flow reference.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      public Builder setFlow(
          org.openlca.proto.Proto.FlowRef.Builder builderForValue) {
        if (flowBuilder_ == null) {
          flow_ = builderForValue.build();
          onChanged();
        } else {
          flowBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The flow reference.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      public Builder mergeFlow(org.openlca.proto.Proto.FlowRef value) {
        if (flowBuilder_ == null) {
          if (flow_ != null) {
            flow_ =
              org.openlca.proto.Proto.FlowRef.newBuilder(flow_).mergeFrom(value).buildPartial();
          } else {
            flow_ = value;
          }
          onChanged();
        } else {
          flowBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The flow reference.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      public Builder clearFlow() {
        if (flowBuilder_ == null) {
          flow_ = null;
          onChanged();
        } else {
          flow_ = null;
          flowBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The flow reference.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      public org.openlca.proto.Proto.FlowRef.Builder getFlowBuilder() {
        
        onChanged();
        return getFlowFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The flow reference.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      public org.openlca.proto.Proto.FlowRefOrBuilder getFlowOrBuilder() {
        if (flowBuilder_ != null) {
          return flowBuilder_.getMessageOrBuilder();
        } else {
          return flow_ == null ?
              org.openlca.proto.Proto.FlowRef.getDefaultInstance() : flow_;
        }
      }
      /**
       * <pre>
       * The flow reference.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.FlowRef, org.openlca.proto.Proto.FlowRef.Builder, org.openlca.proto.Proto.FlowRefOrBuilder> 
          getFlowFieldBuilder() {
        if (flowBuilder_ == null) {
          flowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.FlowRef, org.openlca.proto.Proto.FlowRef.Builder, org.openlca.proto.Proto.FlowRefOrBuilder>(
                  getFlow(),
                  getParentForChildren(),
                  isClean());
          flow_ = null;
        }
        return flowBuilder_;
      }

      private boolean input_ ;
      /**
       * <pre>
       * Indicates whether the flow is an input or not.
       * </pre>
       *
       * <code>bool input = 3;</code>
       * @return The input.
       */
      @java.lang.Override
      public boolean getInput() {
        return input_;
      }
      /**
       * <pre>
       * Indicates whether the flow is an input or not.
       * </pre>
       *
       * <code>bool input = 3;</code>
       * @param value The input to set.
       * @return This builder for chaining.
       */
      public Builder setInput(boolean value) {
        
        input_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates whether the flow is an input or not.
       * </pre>
       *
       * <code>bool input = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearInput() {
        
        input_ = false;
        onChanged();
        return this;
      }

      private double value_ ;
      /**
       * <pre>
       * The value of the flow amount.
       * </pre>
       *
       * <code>double value = 4;</code>
       * @return The value.
       */
      @java.lang.Override
      public double getValue() {
        return value_;
      }
      /**
       * <pre>
       * The value of the flow amount.
       * </pre>
       *
       * <code>double value = 4;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(double value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The value of the flow amount.
       * </pre>
       *
       * <code>double value = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.FlowResult)
    }

    // @@protoc_insertion_point(class_scope:protolca.FlowResult)
    private static final org.openlca.proto.Proto.FlowResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.FlowResult();
    }

    public static org.openlca.proto.Proto.FlowResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlowResult>
        PARSER = new com.google.protobuf.AbstractParser<FlowResult>() {
      @java.lang.Override
      public FlowResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlowResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FlowResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlowResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.FlowResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ImpactCategoryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.ImpactCategory)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    boolean hasCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    org.openlca.proto.Proto.Ref getCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder();

    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    java.util.List<java.lang.String>
        getTagsList();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    int getTagsCount();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    java.lang.String getTags(int index);
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);

    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    java.lang.String getLibrary();
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    com.google.protobuf.ByteString
        getLibraryBytes();

    /**
     * <pre>
     * The name of the reference unit of the LCIA category (e.g. kg CO2-eq.).
     * </pre>
     *
     * <code>string reference_unit_name = 10;</code>
     * @return The referenceUnitName.
     */
    java.lang.String getReferenceUnitName();
    /**
     * <pre>
     * The name of the reference unit of the LCIA category (e.g. kg CO2-eq.).
     * </pre>
     *
     * <code>string reference_unit_name = 10;</code>
     * @return The bytes for referenceUnitName.
     */
    com.google.protobuf.ByteString
        getReferenceUnitNameBytes();

    /**
     * <pre>
     * The characterisation factors of the LCIA category.
     * </pre>
     *
     * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
     */
    java.util.List<org.openlca.proto.Proto.ImpactFactor> 
        getImpactFactorsList();
    /**
     * <pre>
     * The characterisation factors of the LCIA category.
     * </pre>
     *
     * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
     */
    org.openlca.proto.Proto.ImpactFactor getImpactFactors(int index);
    /**
     * <pre>
     * The characterisation factors of the LCIA category.
     * </pre>
     *
     * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
     */
    int getImpactFactorsCount();
    /**
     * <pre>
     * The characterisation factors of the LCIA category.
     * </pre>
     *
     * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
     */
    java.util.List<? extends org.openlca.proto.Proto.ImpactFactorOrBuilder> 
        getImpactFactorsOrBuilderList();
    /**
     * <pre>
     * The characterisation factors of the LCIA category.
     * </pre>
     *
     * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
     */
    org.openlca.proto.Proto.ImpactFactorOrBuilder getImpactFactorsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protolca.ImpactCategory}
   */
  public static final class ImpactCategory extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.ImpactCategory)
      ImpactCategoryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ImpactCategory.newBuilder() to construct.
    private ImpactCategory(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ImpactCategory() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      library_ = "";
      referenceUnitName_ = "";
      impactFactors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ImpactCategory();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ImpactCategory(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (category_ != null) {
                subBuilder = category_.toBuilder();
              }
              category_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(category_);
                category_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tags_.add(s);
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              library_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              referenceUnitName_ = s;
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                impactFactors_ = new java.util.ArrayList<org.openlca.proto.Proto.ImpactFactor>();
                mutable_bitField0_ |= 0x00000002;
              }
              impactFactors_.add(
                  input.readMessage(org.openlca.proto.Proto.ImpactFactor.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          impactFactors_ = java.util.Collections.unmodifiableList(impactFactors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_ImpactCategory_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_ImpactCategory_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.ImpactCategory.class, org.openlca.proto.Proto.ImpactCategory.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.Ref category_;
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    @java.lang.Override
    public boolean hasCategory() {
      return category_ != null;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getCategory() {
      return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
      return getCategory();
    }

    public static final int TAGS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    public static final int LIBRARY_FIELD_NUMBER = 9;
    private volatile java.lang.Object library_;
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    @java.lang.Override
    public java.lang.String getLibrary() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        library_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLibraryBytes() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        library_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REFERENCE_UNIT_NAME_FIELD_NUMBER = 10;
    private volatile java.lang.Object referenceUnitName_;
    /**
     * <pre>
     * The name of the reference unit of the LCIA category (e.g. kg CO2-eq.).
     * </pre>
     *
     * <code>string reference_unit_name = 10;</code>
     * @return The referenceUnitName.
     */
    @java.lang.Override
    public java.lang.String getReferenceUnitName() {
      java.lang.Object ref = referenceUnitName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        referenceUnitName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the reference unit of the LCIA category (e.g. kg CO2-eq.).
     * </pre>
     *
     * <code>string reference_unit_name = 10;</code>
     * @return The bytes for referenceUnitName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getReferenceUnitNameBytes() {
      java.lang.Object ref = referenceUnitName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        referenceUnitName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IMPACT_FACTORS_FIELD_NUMBER = 11;
    private java.util.List<org.openlca.proto.Proto.ImpactFactor> impactFactors_;
    /**
     * <pre>
     * The characterisation factors of the LCIA category.
     * </pre>
     *
     * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.proto.Proto.ImpactFactor> getImpactFactorsList() {
      return impactFactors_;
    }
    /**
     * <pre>
     * The characterisation factors of the LCIA category.
     * </pre>
     *
     * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.proto.Proto.ImpactFactorOrBuilder> 
        getImpactFactorsOrBuilderList() {
      return impactFactors_;
    }
    /**
     * <pre>
     * The characterisation factors of the LCIA category.
     * </pre>
     *
     * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
     */
    @java.lang.Override
    public int getImpactFactorsCount() {
      return impactFactors_.size();
    }
    /**
     * <pre>
     * The characterisation factors of the LCIA category.
     * </pre>
     *
     * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ImpactFactor getImpactFactors(int index) {
      return impactFactors_.get(index);
    }
    /**
     * <pre>
     * The characterisation factors of the LCIA category.
     * </pre>
     *
     * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ImpactFactorOrBuilder getImpactFactorsOrBuilder(
        int index) {
      return impactFactors_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (category_ != null) {
        output.writeMessage(7, getCategory());
      }
      for (int i = 0; i < tags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, tags_.getRaw(i));
      }
      if (!getLibraryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, library_);
      }
      if (!getReferenceUnitNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, referenceUnitName_);
      }
      for (int i = 0; i < impactFactors_.size(); i++) {
        output.writeMessage(11, impactFactors_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (category_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCategory());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += computeStringSizeNoTag(tags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      if (!getLibraryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, library_);
      }
      if (!getReferenceUnitNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, referenceUnitName_);
      }
      for (int i = 0; i < impactFactors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, impactFactors_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.ImpactCategory)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.ImpactCategory other = (org.openlca.proto.Proto.ImpactCategory) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (hasCategory() != other.hasCategory()) return false;
      if (hasCategory()) {
        if (!getCategory()
            .equals(other.getCategory())) return false;
      }
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (!getLibrary()
          .equals(other.getLibrary())) return false;
      if (!getReferenceUnitName()
          .equals(other.getReferenceUnitName())) return false;
      if (!getImpactFactorsList()
          .equals(other.getImpactFactorsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (hasCategory()) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategory().hashCode();
      }
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibrary().hashCode();
      hash = (37 * hash) + REFERENCE_UNIT_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getReferenceUnitName().hashCode();
      if (getImpactFactorsCount() > 0) {
        hash = (37 * hash) + IMPACT_FACTORS_FIELD_NUMBER;
        hash = (53 * hash) + getImpactFactorsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.ImpactCategory parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ImpactCategory parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactCategory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ImpactCategory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactCategory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ImpactCategory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactCategory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ImpactCategory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactCategory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ImpactCategory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactCategory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ImpactCategory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.ImpactCategory prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protolca.ImpactCategory}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.ImpactCategory)
        org.openlca.proto.Proto.ImpactCategoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_ImpactCategory_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_ImpactCategory_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.ImpactCategory.class, org.openlca.proto.Proto.ImpactCategory.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.ImpactCategory.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getImpactFactorsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        if (categoryBuilder_ == null) {
          category_ = null;
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        library_ = "";

        referenceUnitName_ = "";

        if (impactFactorsBuilder_ == null) {
          impactFactors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          impactFactorsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_ImpactCategory_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ImpactCategory getDefaultInstanceForType() {
        return org.openlca.proto.Proto.ImpactCategory.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ImpactCategory build() {
        org.openlca.proto.Proto.ImpactCategory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ImpactCategory buildPartial() {
        org.openlca.proto.Proto.ImpactCategory result = new org.openlca.proto.Proto.ImpactCategory(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (categoryBuilder_ == null) {
          result.category_ = category_;
        } else {
          result.category_ = categoryBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tags_ = tags_;
        result.library_ = library_;
        result.referenceUnitName_ = referenceUnitName_;
        if (impactFactorsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            impactFactors_ = java.util.Collections.unmodifiableList(impactFactors_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.impactFactors_ = impactFactors_;
        } else {
          result.impactFactors_ = impactFactorsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.ImpactCategory) {
          return mergeFrom((org.openlca.proto.Proto.ImpactCategory)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.ImpactCategory other) {
        if (other == org.openlca.proto.Proto.ImpactCategory.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.hasCategory()) {
          mergeCategory(other.getCategory());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        if (!other.getLibrary().isEmpty()) {
          library_ = other.library_;
          onChanged();
        }
        if (!other.getReferenceUnitName().isEmpty()) {
          referenceUnitName_ = other.referenceUnitName_;
          onChanged();
        }
        if (impactFactorsBuilder_ == null) {
          if (!other.impactFactors_.isEmpty()) {
            if (impactFactors_.isEmpty()) {
              impactFactors_ = other.impactFactors_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureImpactFactorsIsMutable();
              impactFactors_.addAll(other.impactFactors_);
            }
            onChanged();
          }
        } else {
          if (!other.impactFactors_.isEmpty()) {
            if (impactFactorsBuilder_.isEmpty()) {
              impactFactorsBuilder_.dispose();
              impactFactorsBuilder_ = null;
              impactFactors_ = other.impactFactors_;
              bitField0_ = (bitField0_ & ~0x00000002);
              impactFactorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getImpactFactorsFieldBuilder() : null;
            } else {
              impactFactorsBuilder_.addAllMessages(other.impactFactors_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.ImpactCategory parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.ImpactCategory) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref category_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> categoryBuilder_;
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return Whether the category field is set.
       */
      public boolean hasCategory() {
        return categoryBuilder_ != null || category_ != null;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return The category.
       */
      public org.openlca.proto.Proto.Ref getCategory() {
        if (categoryBuilder_ == null) {
          return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        } else {
          return categoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          category_ = value;
          onChanged();
        } else {
          categoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          category_ = builderForValue.build();
          onChanged();
        } else {
          categoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder mergeCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (category_ != null) {
            category_ =
              org.openlca.proto.Proto.Ref.newBuilder(category_).mergeFrom(value).buildPartial();
          } else {
            category_ = value;
          }
          onChanged();
        } else {
          categoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder clearCategory() {
        if (categoryBuilder_ == null) {
          category_ = null;
          onChanged();
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getCategoryBuilder() {
        
        onChanged();
        return getCategoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
        if (categoryBuilder_ != null) {
          return categoryBuilder_.getMessageOrBuilder();
        } else {
          return category_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getCategoryFieldBuilder() {
        if (categoryBuilder_ == null) {
          categoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getCategory(),
                  getParentForChildren(),
                  isClean());
          category_ = null;
        }
        return categoryBuilder_;
      }

      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return A list containing the tags.
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return The count of tags.
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the element to return.
       * @return The tags at the given index.
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tags at the given index.
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index to set the value at.
       * @param value The tags to set.
       * @return This builder for chaining.
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The tags to add.
       * @return This builder for chaining.
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param values The tags to add.
       * @return This builder for chaining.
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The bytes of the tags to add.
       * @return This builder for chaining.
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object library_ = "";
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The library.
       */
      public java.lang.String getLibrary() {
        java.lang.Object ref = library_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          library_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The bytes for library.
       */
      public com.google.protobuf.ByteString
          getLibraryBytes() {
        java.lang.Object ref = library_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          library_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The library to set.
       * @return This builder for chaining.
       */
      public Builder setLibrary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        library_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLibrary() {
        
        library_ = getDefaultInstance().getLibrary();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The bytes for library to set.
       * @return This builder for chaining.
       */
      public Builder setLibraryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        library_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object referenceUnitName_ = "";
      /**
       * <pre>
       * The name of the reference unit of the LCIA category (e.g. kg CO2-eq.).
       * </pre>
       *
       * <code>string reference_unit_name = 10;</code>
       * @return The referenceUnitName.
       */
      public java.lang.String getReferenceUnitName() {
        java.lang.Object ref = referenceUnitName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          referenceUnitName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the reference unit of the LCIA category (e.g. kg CO2-eq.).
       * </pre>
       *
       * <code>string reference_unit_name = 10;</code>
       * @return The bytes for referenceUnitName.
       */
      public com.google.protobuf.ByteString
          getReferenceUnitNameBytes() {
        java.lang.Object ref = referenceUnitName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          referenceUnitName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the reference unit of the LCIA category (e.g. kg CO2-eq.).
       * </pre>
       *
       * <code>string reference_unit_name = 10;</code>
       * @param value The referenceUnitName to set.
       * @return This builder for chaining.
       */
      public Builder setReferenceUnitName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        referenceUnitName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the reference unit of the LCIA category (e.g. kg CO2-eq.).
       * </pre>
       *
       * <code>string reference_unit_name = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearReferenceUnitName() {
        
        referenceUnitName_ = getDefaultInstance().getReferenceUnitName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the reference unit of the LCIA category (e.g. kg CO2-eq.).
       * </pre>
       *
       * <code>string reference_unit_name = 10;</code>
       * @param value The bytes for referenceUnitName to set.
       * @return This builder for chaining.
       */
      public Builder setReferenceUnitNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        referenceUnitName_ = value;
        onChanged();
        return this;
      }

      private java.util.List<org.openlca.proto.Proto.ImpactFactor> impactFactors_ =
        java.util.Collections.emptyList();
      private void ensureImpactFactorsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          impactFactors_ = new java.util.ArrayList<org.openlca.proto.Proto.ImpactFactor>(impactFactors_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.ImpactFactor, org.openlca.proto.Proto.ImpactFactor.Builder, org.openlca.proto.Proto.ImpactFactorOrBuilder> impactFactorsBuilder_;

      /**
       * <pre>
       * The characterisation factors of the LCIA category.
       * </pre>
       *
       * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
       */
      public java.util.List<org.openlca.proto.Proto.ImpactFactor> getImpactFactorsList() {
        if (impactFactorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(impactFactors_);
        } else {
          return impactFactorsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The characterisation factors of the LCIA category.
       * </pre>
       *
       * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
       */
      public int getImpactFactorsCount() {
        if (impactFactorsBuilder_ == null) {
          return impactFactors_.size();
        } else {
          return impactFactorsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The characterisation factors of the LCIA category.
       * </pre>
       *
       * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
       */
      public org.openlca.proto.Proto.ImpactFactor getImpactFactors(int index) {
        if (impactFactorsBuilder_ == null) {
          return impactFactors_.get(index);
        } else {
          return impactFactorsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The characterisation factors of the LCIA category.
       * </pre>
       *
       * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
       */
      public Builder setImpactFactors(
          int index, org.openlca.proto.Proto.ImpactFactor value) {
        if (impactFactorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImpactFactorsIsMutable();
          impactFactors_.set(index, value);
          onChanged();
        } else {
          impactFactorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The characterisation factors of the LCIA category.
       * </pre>
       *
       * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
       */
      public Builder setImpactFactors(
          int index, org.openlca.proto.Proto.ImpactFactor.Builder builderForValue) {
        if (impactFactorsBuilder_ == null) {
          ensureImpactFactorsIsMutable();
          impactFactors_.set(index, builderForValue.build());
          onChanged();
        } else {
          impactFactorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The characterisation factors of the LCIA category.
       * </pre>
       *
       * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
       */
      public Builder addImpactFactors(org.openlca.proto.Proto.ImpactFactor value) {
        if (impactFactorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImpactFactorsIsMutable();
          impactFactors_.add(value);
          onChanged();
        } else {
          impactFactorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The characterisation factors of the LCIA category.
       * </pre>
       *
       * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
       */
      public Builder addImpactFactors(
          int index, org.openlca.proto.Proto.ImpactFactor value) {
        if (impactFactorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImpactFactorsIsMutable();
          impactFactors_.add(index, value);
          onChanged();
        } else {
          impactFactorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The characterisation factors of the LCIA category.
       * </pre>
       *
       * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
       */
      public Builder addImpactFactors(
          org.openlca.proto.Proto.ImpactFactor.Builder builderForValue) {
        if (impactFactorsBuilder_ == null) {
          ensureImpactFactorsIsMutable();
          impactFactors_.add(builderForValue.build());
          onChanged();
        } else {
          impactFactorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The characterisation factors of the LCIA category.
       * </pre>
       *
       * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
       */
      public Builder addImpactFactors(
          int index, org.openlca.proto.Proto.ImpactFactor.Builder builderForValue) {
        if (impactFactorsBuilder_ == null) {
          ensureImpactFactorsIsMutable();
          impactFactors_.add(index, builderForValue.build());
          onChanged();
        } else {
          impactFactorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The characterisation factors of the LCIA category.
       * </pre>
       *
       * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
       */
      public Builder addAllImpactFactors(
          java.lang.Iterable<? extends org.openlca.proto.Proto.ImpactFactor> values) {
        if (impactFactorsBuilder_ == null) {
          ensureImpactFactorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, impactFactors_);
          onChanged();
        } else {
          impactFactorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The characterisation factors of the LCIA category.
       * </pre>
       *
       * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
       */
      public Builder clearImpactFactors() {
        if (impactFactorsBuilder_ == null) {
          impactFactors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          impactFactorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The characterisation factors of the LCIA category.
       * </pre>
       *
       * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
       */
      public Builder removeImpactFactors(int index) {
        if (impactFactorsBuilder_ == null) {
          ensureImpactFactorsIsMutable();
          impactFactors_.remove(index);
          onChanged();
        } else {
          impactFactorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The characterisation factors of the LCIA category.
       * </pre>
       *
       * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
       */
      public org.openlca.proto.Proto.ImpactFactor.Builder getImpactFactorsBuilder(
          int index) {
        return getImpactFactorsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The characterisation factors of the LCIA category.
       * </pre>
       *
       * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
       */
      public org.openlca.proto.Proto.ImpactFactorOrBuilder getImpactFactorsOrBuilder(
          int index) {
        if (impactFactorsBuilder_ == null) {
          return impactFactors_.get(index);  } else {
          return impactFactorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The characterisation factors of the LCIA category.
       * </pre>
       *
       * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
       */
      public java.util.List<? extends org.openlca.proto.Proto.ImpactFactorOrBuilder> 
           getImpactFactorsOrBuilderList() {
        if (impactFactorsBuilder_ != null) {
          return impactFactorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(impactFactors_);
        }
      }
      /**
       * <pre>
       * The characterisation factors of the LCIA category.
       * </pre>
       *
       * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
       */
      public org.openlca.proto.Proto.ImpactFactor.Builder addImpactFactorsBuilder() {
        return getImpactFactorsFieldBuilder().addBuilder(
            org.openlca.proto.Proto.ImpactFactor.getDefaultInstance());
      }
      /**
       * <pre>
       * The characterisation factors of the LCIA category.
       * </pre>
       *
       * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
       */
      public org.openlca.proto.Proto.ImpactFactor.Builder addImpactFactorsBuilder(
          int index) {
        return getImpactFactorsFieldBuilder().addBuilder(
            index, org.openlca.proto.Proto.ImpactFactor.getDefaultInstance());
      }
      /**
       * <pre>
       * The characterisation factors of the LCIA category.
       * </pre>
       *
       * <code>repeated .protolca.ImpactFactor impact_factors = 11;</code>
       */
      public java.util.List<org.openlca.proto.Proto.ImpactFactor.Builder> 
           getImpactFactorsBuilderList() {
        return getImpactFactorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.ImpactFactor, org.openlca.proto.Proto.ImpactFactor.Builder, org.openlca.proto.Proto.ImpactFactorOrBuilder> 
          getImpactFactorsFieldBuilder() {
        if (impactFactorsBuilder_ == null) {
          impactFactorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.proto.Proto.ImpactFactor, org.openlca.proto.Proto.ImpactFactor.Builder, org.openlca.proto.Proto.ImpactFactorOrBuilder>(
                  impactFactors_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          impactFactors_ = null;
        }
        return impactFactorsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.ImpactCategory)
    }

    // @@protoc_insertion_point(class_scope:protolca.ImpactCategory)
    private static final org.openlca.proto.Proto.ImpactCategory DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.ImpactCategory();
    }

    public static org.openlca.proto.Proto.ImpactCategory getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ImpactCategory>
        PARSER = new com.google.protobuf.AbstractParser<ImpactCategory>() {
      @java.lang.Override
      public ImpactCategory parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ImpactCategory(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ImpactCategory> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ImpactCategory> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.ImpactCategory getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ImpactCategoryRefOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.ImpactCategoryRef)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The name (symbol) of the reference unit of the impact category.
     * </pre>
     *
     * <code>string ref_unit = 1;</code>
     * @return The refUnit.
     */
    java.lang.String getRefUnit();
    /**
     * <pre>
     * The name (symbol) of the reference unit of the impact category.
     * </pre>
     *
     * <code>string ref_unit = 1;</code>
     * @return The bytes for refUnit.
     */
    com.google.protobuf.ByteString
        getRefUnitBytes();
  }
  /**
   * <pre>
   * A reference to a [ImpactCategory] data set.
   * </pre>
   *
   * Protobuf type {@code protolca.ImpactCategoryRef}
   */
  public static final class ImpactCategoryRef extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.ImpactCategoryRef)
      ImpactCategoryRefOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ImpactCategoryRef.newBuilder() to construct.
    private ImpactCategoryRef(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ImpactCategoryRef() {
      refUnit_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ImpactCategoryRef();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ImpactCategoryRef(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              refUnit_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_ImpactCategoryRef_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_ImpactCategoryRef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.ImpactCategoryRef.class, org.openlca.proto.Proto.ImpactCategoryRef.Builder.class);
    }

    public static final int REF_UNIT_FIELD_NUMBER = 1;
    private volatile java.lang.Object refUnit_;
    /**
     * <pre>
     * The name (symbol) of the reference unit of the impact category.
     * </pre>
     *
     * <code>string ref_unit = 1;</code>
     * @return The refUnit.
     */
    @java.lang.Override
    public java.lang.String getRefUnit() {
      java.lang.Object ref = refUnit_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        refUnit_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name (symbol) of the reference unit of the impact category.
     * </pre>
     *
     * <code>string ref_unit = 1;</code>
     * @return The bytes for refUnit.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRefUnitBytes() {
      java.lang.Object ref = refUnit_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        refUnit_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getRefUnitBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, refUnit_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getRefUnitBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, refUnit_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.ImpactCategoryRef)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.ImpactCategoryRef other = (org.openlca.proto.Proto.ImpactCategoryRef) obj;

      if (!getRefUnit()
          .equals(other.getRefUnit())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REF_UNIT_FIELD_NUMBER;
      hash = (53 * hash) + getRefUnit().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.ImpactCategoryRef parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ImpactCategoryRef parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactCategoryRef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ImpactCategoryRef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactCategoryRef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ImpactCategoryRef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactCategoryRef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ImpactCategoryRef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactCategoryRef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ImpactCategoryRef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactCategoryRef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ImpactCategoryRef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.ImpactCategoryRef prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A reference to a [ImpactCategory] data set.
     * </pre>
     *
     * Protobuf type {@code protolca.ImpactCategoryRef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.ImpactCategoryRef)
        org.openlca.proto.Proto.ImpactCategoryRefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_ImpactCategoryRef_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_ImpactCategoryRef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.ImpactCategoryRef.class, org.openlca.proto.Proto.ImpactCategoryRef.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.ImpactCategoryRef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        refUnit_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_ImpactCategoryRef_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ImpactCategoryRef getDefaultInstanceForType() {
        return org.openlca.proto.Proto.ImpactCategoryRef.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ImpactCategoryRef build() {
        org.openlca.proto.Proto.ImpactCategoryRef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ImpactCategoryRef buildPartial() {
        org.openlca.proto.Proto.ImpactCategoryRef result = new org.openlca.proto.Proto.ImpactCategoryRef(this);
        result.refUnit_ = refUnit_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.ImpactCategoryRef) {
          return mergeFrom((org.openlca.proto.Proto.ImpactCategoryRef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.ImpactCategoryRef other) {
        if (other == org.openlca.proto.Proto.ImpactCategoryRef.getDefaultInstance()) return this;
        if (!other.getRefUnit().isEmpty()) {
          refUnit_ = other.refUnit_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.ImpactCategoryRef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.ImpactCategoryRef) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object refUnit_ = "";
      /**
       * <pre>
       * The name (symbol) of the reference unit of the impact category.
       * </pre>
       *
       * <code>string ref_unit = 1;</code>
       * @return The refUnit.
       */
      public java.lang.String getRefUnit() {
        java.lang.Object ref = refUnit_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          refUnit_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name (symbol) of the reference unit of the impact category.
       * </pre>
       *
       * <code>string ref_unit = 1;</code>
       * @return The bytes for refUnit.
       */
      public com.google.protobuf.ByteString
          getRefUnitBytes() {
        java.lang.Object ref = refUnit_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          refUnit_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name (symbol) of the reference unit of the impact category.
       * </pre>
       *
       * <code>string ref_unit = 1;</code>
       * @param value The refUnit to set.
       * @return This builder for chaining.
       */
      public Builder setRefUnit(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        refUnit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name (symbol) of the reference unit of the impact category.
       * </pre>
       *
       * <code>string ref_unit = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRefUnit() {
        
        refUnit_ = getDefaultInstance().getRefUnit();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name (symbol) of the reference unit of the impact category.
       * </pre>
       *
       * <code>string ref_unit = 1;</code>
       * @param value The bytes for refUnit to set.
       * @return This builder for chaining.
       */
      public Builder setRefUnitBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        refUnit_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.ImpactCategoryRef)
    }

    // @@protoc_insertion_point(class_scope:protolca.ImpactCategoryRef)
    private static final org.openlca.proto.Proto.ImpactCategoryRef DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.ImpactCategoryRef();
    }

    public static org.openlca.proto.Proto.ImpactCategoryRef getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ImpactCategoryRef>
        PARSER = new com.google.protobuf.AbstractParser<ImpactCategoryRef>() {
      @java.lang.Override
      public ImpactCategoryRef parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ImpactCategoryRef(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ImpactCategoryRef> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ImpactCategoryRef> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.ImpactCategoryRef getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ImpactFactorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.ImpactFactor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The [Flow] of the impact assessment factor.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 2;</code>
     * @return Whether the flow field is set.
     */
    boolean hasFlow();
    /**
     * <pre>
     * The [Flow] of the impact assessment factor.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 2;</code>
     * @return The flow.
     */
    org.openlca.proto.Proto.FlowRef getFlow();
    /**
     * <pre>
     * The [Flow] of the impact assessment factor.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 2;</code>
     */
    org.openlca.proto.Proto.FlowRefOrBuilder getFlowOrBuilder();

    /**
     * <pre>
     * The quantity of the flow to which the LCIA factor is related (e.g. Mass).
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 3;</code>
     * @return Whether the flowProperty field is set.
     */
    boolean hasFlowProperty();
    /**
     * <pre>
     * The quantity of the flow to which the LCIA factor is related (e.g. Mass).
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 3;</code>
     * @return The flowProperty.
     */
    org.openlca.proto.Proto.Ref getFlowProperty();
    /**
     * <pre>
     * The quantity of the flow to which the LCIA factor is related (e.g. Mass).
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 3;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getFlowPropertyOrBuilder();

    /**
     * <pre>
     * The flow unit to which the LCIA factor is related (e.g. kg).
     * </pre>
     *
     * <code>.protolca.Ref unit = 4;</code>
     * @return Whether the unit field is set.
     */
    boolean hasUnit();
    /**
     * <pre>
     * The flow unit to which the LCIA factor is related (e.g. kg).
     * </pre>
     *
     * <code>.protolca.Ref unit = 4;</code>
     * @return The unit.
     */
    org.openlca.proto.Proto.Ref getUnit();
    /**
     * <pre>
     * The flow unit to which the LCIA factor is related (e.g. kg).
     * </pre>
     *
     * <code>.protolca.Ref unit = 4;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getUnitOrBuilder();

    /**
     * <pre>
     * The value of the impact assessment factor.
     * </pre>
     *
     * <code>double value = 5;</code>
     * @return The value.
     */
    double getValue();

    /**
     * <pre>
     * A mathematical formula for calculating the value of the LCIA factor.
     * </pre>
     *
     * <code>string formula = 6;</code>
     * @return The formula.
     */
    java.lang.String getFormula();
    /**
     * <pre>
     * A mathematical formula for calculating the value of the LCIA factor.
     * </pre>
     *
     * <code>string formula = 6;</code>
     * @return The bytes for formula.
     */
    com.google.protobuf.ByteString
        getFormulaBytes();

    /**
     * <pre>
     * The uncertainty distribution of the factors' value.
     * </pre>
     *
     * <code>.protolca.Uncertainty uncertainty = 7;</code>
     * @return Whether the uncertainty field is set.
     */
    boolean hasUncertainty();
    /**
     * <pre>
     * The uncertainty distribution of the factors' value.
     * </pre>
     *
     * <code>.protolca.Uncertainty uncertainty = 7;</code>
     * @return The uncertainty.
     */
    org.openlca.proto.Proto.Uncertainty getUncertainty();
    /**
     * <pre>
     * The uncertainty distribution of the factors' value.
     * </pre>
     *
     * <code>.protolca.Uncertainty uncertainty = 7;</code>
     */
    org.openlca.proto.Proto.UncertaintyOrBuilder getUncertaintyOrBuilder();
  }
  /**
   * <pre>
   * A single characterisation factor of a LCIA category for a flow.
   * </pre>
   *
   * Protobuf type {@code protolca.ImpactFactor}
   */
  public static final class ImpactFactor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.ImpactFactor)
      ImpactFactorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ImpactFactor.newBuilder() to construct.
    private ImpactFactor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ImpactFactor() {
      type_ = "";
      formula_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ImpactFactor();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ImpactFactor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              org.openlca.proto.Proto.FlowRef.Builder subBuilder = null;
              if (flow_ != null) {
                subBuilder = flow_.toBuilder();
              }
              flow_ = input.readMessage(org.openlca.proto.Proto.FlowRef.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(flow_);
                flow_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (flowProperty_ != null) {
                subBuilder = flowProperty_.toBuilder();
              }
              flowProperty_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(flowProperty_);
                flowProperty_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (unit_ != null) {
                subBuilder = unit_.toBuilder();
              }
              unit_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(unit_);
                unit_ = subBuilder.buildPartial();
              }

              break;
            }
            case 41: {

              value_ = input.readDouble();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              formula_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.Uncertainty.Builder subBuilder = null;
              if (uncertainty_ != null) {
                subBuilder = uncertainty_.toBuilder();
              }
              uncertainty_ = input.readMessage(org.openlca.proto.Proto.Uncertainty.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(uncertainty_);
                uncertainty_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_ImpactFactor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_ImpactFactor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.ImpactFactor.class, org.openlca.proto.Proto.ImpactFactor.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLOW_FIELD_NUMBER = 2;
    private org.openlca.proto.Proto.FlowRef flow_;
    /**
     * <pre>
     * The [Flow] of the impact assessment factor.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 2;</code>
     * @return Whether the flow field is set.
     */
    @java.lang.Override
    public boolean hasFlow() {
      return flow_ != null;
    }
    /**
     * <pre>
     * The [Flow] of the impact assessment factor.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 2;</code>
     * @return The flow.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.FlowRef getFlow() {
      return flow_ == null ? org.openlca.proto.Proto.FlowRef.getDefaultInstance() : flow_;
    }
    /**
     * <pre>
     * The [Flow] of the impact assessment factor.
     * </pre>
     *
     * <code>.protolca.FlowRef flow = 2;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.FlowRefOrBuilder getFlowOrBuilder() {
      return getFlow();
    }

    public static final int FLOW_PROPERTY_FIELD_NUMBER = 3;
    private org.openlca.proto.Proto.Ref flowProperty_;
    /**
     * <pre>
     * The quantity of the flow to which the LCIA factor is related (e.g. Mass).
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 3;</code>
     * @return Whether the flowProperty field is set.
     */
    @java.lang.Override
    public boolean hasFlowProperty() {
      return flowProperty_ != null;
    }
    /**
     * <pre>
     * The quantity of the flow to which the LCIA factor is related (e.g. Mass).
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 3;</code>
     * @return The flowProperty.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getFlowProperty() {
      return flowProperty_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : flowProperty_;
    }
    /**
     * <pre>
     * The quantity of the flow to which the LCIA factor is related (e.g. Mass).
     * </pre>
     *
     * <code>.protolca.Ref flow_property = 3;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getFlowPropertyOrBuilder() {
      return getFlowProperty();
    }

    public static final int UNIT_FIELD_NUMBER = 4;
    private org.openlca.proto.Proto.Ref unit_;
    /**
     * <pre>
     * The flow unit to which the LCIA factor is related (e.g. kg).
     * </pre>
     *
     * <code>.protolca.Ref unit = 4;</code>
     * @return Whether the unit field is set.
     */
    @java.lang.Override
    public boolean hasUnit() {
      return unit_ != null;
    }
    /**
     * <pre>
     * The flow unit to which the LCIA factor is related (e.g. kg).
     * </pre>
     *
     * <code>.protolca.Ref unit = 4;</code>
     * @return The unit.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getUnit() {
      return unit_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : unit_;
    }
    /**
     * <pre>
     * The flow unit to which the LCIA factor is related (e.g. kg).
     * </pre>
     *
     * <code>.protolca.Ref unit = 4;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getUnitOrBuilder() {
      return getUnit();
    }

    public static final int VALUE_FIELD_NUMBER = 5;
    private double value_;
    /**
     * <pre>
     * The value of the impact assessment factor.
     * </pre>
     *
     * <code>double value = 5;</code>
     * @return The value.
     */
    @java.lang.Override
    public double getValue() {
      return value_;
    }

    public static final int FORMULA_FIELD_NUMBER = 6;
    private volatile java.lang.Object formula_;
    /**
     * <pre>
     * A mathematical formula for calculating the value of the LCIA factor.
     * </pre>
     *
     * <code>string formula = 6;</code>
     * @return The formula.
     */
    @java.lang.Override
    public java.lang.String getFormula() {
      java.lang.Object ref = formula_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        formula_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A mathematical formula for calculating the value of the LCIA factor.
     * </pre>
     *
     * <code>string formula = 6;</code>
     * @return The bytes for formula.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFormulaBytes() {
      java.lang.Object ref = formula_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        formula_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UNCERTAINTY_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.Uncertainty uncertainty_;
    /**
     * <pre>
     * The uncertainty distribution of the factors' value.
     * </pre>
     *
     * <code>.protolca.Uncertainty uncertainty = 7;</code>
     * @return Whether the uncertainty field is set.
     */
    @java.lang.Override
    public boolean hasUncertainty() {
      return uncertainty_ != null;
    }
    /**
     * <pre>
     * The uncertainty distribution of the factors' value.
     * </pre>
     *
     * <code>.protolca.Uncertainty uncertainty = 7;</code>
     * @return The uncertainty.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Uncertainty getUncertainty() {
      return uncertainty_ == null ? org.openlca.proto.Proto.Uncertainty.getDefaultInstance() : uncertainty_;
    }
    /**
     * <pre>
     * The uncertainty distribution of the factors' value.
     * </pre>
     *
     * <code>.protolca.Uncertainty uncertainty = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.UncertaintyOrBuilder getUncertaintyOrBuilder() {
      return getUncertainty();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (flow_ != null) {
        output.writeMessage(2, getFlow());
      }
      if (flowProperty_ != null) {
        output.writeMessage(3, getFlowProperty());
      }
      if (unit_ != null) {
        output.writeMessage(4, getUnit());
      }
      if (value_ != 0D) {
        output.writeDouble(5, value_);
      }
      if (!getFormulaBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, formula_);
      }
      if (uncertainty_ != null) {
        output.writeMessage(7, getUncertainty());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (flow_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFlow());
      }
      if (flowProperty_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFlowProperty());
      }
      if (unit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getUnit());
      }
      if (value_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, value_);
      }
      if (!getFormulaBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, formula_);
      }
      if (uncertainty_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getUncertainty());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.ImpactFactor)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.ImpactFactor other = (org.openlca.proto.Proto.ImpactFactor) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (hasFlow() != other.hasFlow()) return false;
      if (hasFlow()) {
        if (!getFlow()
            .equals(other.getFlow())) return false;
      }
      if (hasFlowProperty() != other.hasFlowProperty()) return false;
      if (hasFlowProperty()) {
        if (!getFlowProperty()
            .equals(other.getFlowProperty())) return false;
      }
      if (hasUnit() != other.hasUnit()) return false;
      if (hasUnit()) {
        if (!getUnit()
            .equals(other.getUnit())) return false;
      }
      if (java.lang.Double.doubleToLongBits(getValue())
          != java.lang.Double.doubleToLongBits(
              other.getValue())) return false;
      if (!getFormula()
          .equals(other.getFormula())) return false;
      if (hasUncertainty() != other.hasUncertainty()) return false;
      if (hasUncertainty()) {
        if (!getUncertainty()
            .equals(other.getUncertainty())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      if (hasFlow()) {
        hash = (37 * hash) + FLOW_FIELD_NUMBER;
        hash = (53 * hash) + getFlow().hashCode();
      }
      if (hasFlowProperty()) {
        hash = (37 * hash) + FLOW_PROPERTY_FIELD_NUMBER;
        hash = (53 * hash) + getFlowProperty().hashCode();
      }
      if (hasUnit()) {
        hash = (37 * hash) + UNIT_FIELD_NUMBER;
        hash = (53 * hash) + getUnit().hashCode();
      }
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getValue()));
      hash = (37 * hash) + FORMULA_FIELD_NUMBER;
      hash = (53 * hash) + getFormula().hashCode();
      if (hasUncertainty()) {
        hash = (37 * hash) + UNCERTAINTY_FIELD_NUMBER;
        hash = (53 * hash) + getUncertainty().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.ImpactFactor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ImpactFactor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactFactor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ImpactFactor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactFactor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ImpactFactor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactFactor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ImpactFactor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactFactor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ImpactFactor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactFactor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ImpactFactor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.ImpactFactor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A single characterisation factor of a LCIA category for a flow.
     * </pre>
     *
     * Protobuf type {@code protolca.ImpactFactor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.ImpactFactor)
        org.openlca.proto.Proto.ImpactFactorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_ImpactFactor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_ImpactFactor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.ImpactFactor.class, org.openlca.proto.Proto.ImpactFactor.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.ImpactFactor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        if (flowBuilder_ == null) {
          flow_ = null;
        } else {
          flow_ = null;
          flowBuilder_ = null;
        }
        if (flowPropertyBuilder_ == null) {
          flowProperty_ = null;
        } else {
          flowProperty_ = null;
          flowPropertyBuilder_ = null;
        }
        if (unitBuilder_ == null) {
          unit_ = null;
        } else {
          unit_ = null;
          unitBuilder_ = null;
        }
        value_ = 0D;

        formula_ = "";

        if (uncertaintyBuilder_ == null) {
          uncertainty_ = null;
        } else {
          uncertainty_ = null;
          uncertaintyBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_ImpactFactor_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ImpactFactor getDefaultInstanceForType() {
        return org.openlca.proto.Proto.ImpactFactor.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ImpactFactor build() {
        org.openlca.proto.Proto.ImpactFactor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ImpactFactor buildPartial() {
        org.openlca.proto.Proto.ImpactFactor result = new org.openlca.proto.Proto.ImpactFactor(this);
        result.type_ = type_;
        if (flowBuilder_ == null) {
          result.flow_ = flow_;
        } else {
          result.flow_ = flowBuilder_.build();
        }
        if (flowPropertyBuilder_ == null) {
          result.flowProperty_ = flowProperty_;
        } else {
          result.flowProperty_ = flowPropertyBuilder_.build();
        }
        if (unitBuilder_ == null) {
          result.unit_ = unit_;
        } else {
          result.unit_ = unitBuilder_.build();
        }
        result.value_ = value_;
        result.formula_ = formula_;
        if (uncertaintyBuilder_ == null) {
          result.uncertainty_ = uncertainty_;
        } else {
          result.uncertainty_ = uncertaintyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.ImpactFactor) {
          return mergeFrom((org.openlca.proto.Proto.ImpactFactor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.ImpactFactor other) {
        if (other == org.openlca.proto.Proto.ImpactFactor.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.hasFlow()) {
          mergeFlow(other.getFlow());
        }
        if (other.hasFlowProperty()) {
          mergeFlowProperty(other.getFlowProperty());
        }
        if (other.hasUnit()) {
          mergeUnit(other.getUnit());
        }
        if (other.getValue() != 0D) {
          setValue(other.getValue());
        }
        if (!other.getFormula().isEmpty()) {
          formula_ = other.formula_;
          onChanged();
        }
        if (other.hasUncertainty()) {
          mergeUncertainty(other.getUncertainty());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.ImpactFactor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.ImpactFactor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.FlowRef flow_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.FlowRef, org.openlca.proto.Proto.FlowRef.Builder, org.openlca.proto.Proto.FlowRefOrBuilder> flowBuilder_;
      /**
       * <pre>
       * The [Flow] of the impact assessment factor.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       * @return Whether the flow field is set.
       */
      public boolean hasFlow() {
        return flowBuilder_ != null || flow_ != null;
      }
      /**
       * <pre>
       * The [Flow] of the impact assessment factor.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       * @return The flow.
       */
      public org.openlca.proto.Proto.FlowRef getFlow() {
        if (flowBuilder_ == null) {
          return flow_ == null ? org.openlca.proto.Proto.FlowRef.getDefaultInstance() : flow_;
        } else {
          return flowBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The [Flow] of the impact assessment factor.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      public Builder setFlow(org.openlca.proto.Proto.FlowRef value) {
        if (flowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          flow_ = value;
          onChanged();
        } else {
          flowBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The [Flow] of the impact assessment factor.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      public Builder setFlow(
          org.openlca.proto.Proto.FlowRef.Builder builderForValue) {
        if (flowBuilder_ == null) {
          flow_ = builderForValue.build();
          onChanged();
        } else {
          flowBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The [Flow] of the impact assessment factor.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      public Builder mergeFlow(org.openlca.proto.Proto.FlowRef value) {
        if (flowBuilder_ == null) {
          if (flow_ != null) {
            flow_ =
              org.openlca.proto.Proto.FlowRef.newBuilder(flow_).mergeFrom(value).buildPartial();
          } else {
            flow_ = value;
          }
          onChanged();
        } else {
          flowBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The [Flow] of the impact assessment factor.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      public Builder clearFlow() {
        if (flowBuilder_ == null) {
          flow_ = null;
          onChanged();
        } else {
          flow_ = null;
          flowBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The [Flow] of the impact assessment factor.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      public org.openlca.proto.Proto.FlowRef.Builder getFlowBuilder() {
        
        onChanged();
        return getFlowFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The [Flow] of the impact assessment factor.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      public org.openlca.proto.Proto.FlowRefOrBuilder getFlowOrBuilder() {
        if (flowBuilder_ != null) {
          return flowBuilder_.getMessageOrBuilder();
        } else {
          return flow_ == null ?
              org.openlca.proto.Proto.FlowRef.getDefaultInstance() : flow_;
        }
      }
      /**
       * <pre>
       * The [Flow] of the impact assessment factor.
       * </pre>
       *
       * <code>.protolca.FlowRef flow = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.FlowRef, org.openlca.proto.Proto.FlowRef.Builder, org.openlca.proto.Proto.FlowRefOrBuilder> 
          getFlowFieldBuilder() {
        if (flowBuilder_ == null) {
          flowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.FlowRef, org.openlca.proto.Proto.FlowRef.Builder, org.openlca.proto.Proto.FlowRefOrBuilder>(
                  getFlow(),
                  getParentForChildren(),
                  isClean());
          flow_ = null;
        }
        return flowBuilder_;
      }

      private org.openlca.proto.Proto.Ref flowProperty_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> flowPropertyBuilder_;
      /**
       * <pre>
       * The quantity of the flow to which the LCIA factor is related (e.g. Mass).
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 3;</code>
       * @return Whether the flowProperty field is set.
       */
      public boolean hasFlowProperty() {
        return flowPropertyBuilder_ != null || flowProperty_ != null;
      }
      /**
       * <pre>
       * The quantity of the flow to which the LCIA factor is related (e.g. Mass).
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 3;</code>
       * @return The flowProperty.
       */
      public org.openlca.proto.Proto.Ref getFlowProperty() {
        if (flowPropertyBuilder_ == null) {
          return flowProperty_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : flowProperty_;
        } else {
          return flowPropertyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The quantity of the flow to which the LCIA factor is related (e.g. Mass).
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 3;</code>
       */
      public Builder setFlowProperty(org.openlca.proto.Proto.Ref value) {
        if (flowPropertyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          flowProperty_ = value;
          onChanged();
        } else {
          flowPropertyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The quantity of the flow to which the LCIA factor is related (e.g. Mass).
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 3;</code>
       */
      public Builder setFlowProperty(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (flowPropertyBuilder_ == null) {
          flowProperty_ = builderForValue.build();
          onChanged();
        } else {
          flowPropertyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The quantity of the flow to which the LCIA factor is related (e.g. Mass).
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 3;</code>
       */
      public Builder mergeFlowProperty(org.openlca.proto.Proto.Ref value) {
        if (flowPropertyBuilder_ == null) {
          if (flowProperty_ != null) {
            flowProperty_ =
              org.openlca.proto.Proto.Ref.newBuilder(flowProperty_).mergeFrom(value).buildPartial();
          } else {
            flowProperty_ = value;
          }
          onChanged();
        } else {
          flowPropertyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The quantity of the flow to which the LCIA factor is related (e.g. Mass).
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 3;</code>
       */
      public Builder clearFlowProperty() {
        if (flowPropertyBuilder_ == null) {
          flowProperty_ = null;
          onChanged();
        } else {
          flowProperty_ = null;
          flowPropertyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The quantity of the flow to which the LCIA factor is related (e.g. Mass).
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 3;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getFlowPropertyBuilder() {
        
        onChanged();
        return getFlowPropertyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The quantity of the flow to which the LCIA factor is related (e.g. Mass).
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 3;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getFlowPropertyOrBuilder() {
        if (flowPropertyBuilder_ != null) {
          return flowPropertyBuilder_.getMessageOrBuilder();
        } else {
          return flowProperty_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : flowProperty_;
        }
      }
      /**
       * <pre>
       * The quantity of the flow to which the LCIA factor is related (e.g. Mass).
       * </pre>
       *
       * <code>.protolca.Ref flow_property = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getFlowPropertyFieldBuilder() {
        if (flowPropertyBuilder_ == null) {
          flowPropertyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getFlowProperty(),
                  getParentForChildren(),
                  isClean());
          flowProperty_ = null;
        }
        return flowPropertyBuilder_;
      }

      private org.openlca.proto.Proto.Ref unit_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> unitBuilder_;
      /**
       * <pre>
       * The flow unit to which the LCIA factor is related (e.g. kg).
       * </pre>
       *
       * <code>.protolca.Ref unit = 4;</code>
       * @return Whether the unit field is set.
       */
      public boolean hasUnit() {
        return unitBuilder_ != null || unit_ != null;
      }
      /**
       * <pre>
       * The flow unit to which the LCIA factor is related (e.g. kg).
       * </pre>
       *
       * <code>.protolca.Ref unit = 4;</code>
       * @return The unit.
       */
      public org.openlca.proto.Proto.Ref getUnit() {
        if (unitBuilder_ == null) {
          return unit_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : unit_;
        } else {
          return unitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The flow unit to which the LCIA factor is related (e.g. kg).
       * </pre>
       *
       * <code>.protolca.Ref unit = 4;</code>
       */
      public Builder setUnit(org.openlca.proto.Proto.Ref value) {
        if (unitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          unit_ = value;
          onChanged();
        } else {
          unitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The flow unit to which the LCIA factor is related (e.g. kg).
       * </pre>
       *
       * <code>.protolca.Ref unit = 4;</code>
       */
      public Builder setUnit(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (unitBuilder_ == null) {
          unit_ = builderForValue.build();
          onChanged();
        } else {
          unitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The flow unit to which the LCIA factor is related (e.g. kg).
       * </pre>
       *
       * <code>.protolca.Ref unit = 4;</code>
       */
      public Builder mergeUnit(org.openlca.proto.Proto.Ref value) {
        if (unitBuilder_ == null) {
          if (unit_ != null) {
            unit_ =
              org.openlca.proto.Proto.Ref.newBuilder(unit_).mergeFrom(value).buildPartial();
          } else {
            unit_ = value;
          }
          onChanged();
        } else {
          unitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The flow unit to which the LCIA factor is related (e.g. kg).
       * </pre>
       *
       * <code>.protolca.Ref unit = 4;</code>
       */
      public Builder clearUnit() {
        if (unitBuilder_ == null) {
          unit_ = null;
          onChanged();
        } else {
          unit_ = null;
          unitBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The flow unit to which the LCIA factor is related (e.g. kg).
       * </pre>
       *
       * <code>.protolca.Ref unit = 4;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getUnitBuilder() {
        
        onChanged();
        return getUnitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The flow unit to which the LCIA factor is related (e.g. kg).
       * </pre>
       *
       * <code>.protolca.Ref unit = 4;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getUnitOrBuilder() {
        if (unitBuilder_ != null) {
          return unitBuilder_.getMessageOrBuilder();
        } else {
          return unit_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : unit_;
        }
      }
      /**
       * <pre>
       * The flow unit to which the LCIA factor is related (e.g. kg).
       * </pre>
       *
       * <code>.protolca.Ref unit = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getUnitFieldBuilder() {
        if (unitBuilder_ == null) {
          unitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getUnit(),
                  getParentForChildren(),
                  isClean());
          unit_ = null;
        }
        return unitBuilder_;
      }

      private double value_ ;
      /**
       * <pre>
       * The value of the impact assessment factor.
       * </pre>
       *
       * <code>double value = 5;</code>
       * @return The value.
       */
      @java.lang.Override
      public double getValue() {
        return value_;
      }
      /**
       * <pre>
       * The value of the impact assessment factor.
       * </pre>
       *
       * <code>double value = 5;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(double value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The value of the impact assessment factor.
       * </pre>
       *
       * <code>double value = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object formula_ = "";
      /**
       * <pre>
       * A mathematical formula for calculating the value of the LCIA factor.
       * </pre>
       *
       * <code>string formula = 6;</code>
       * @return The formula.
       */
      public java.lang.String getFormula() {
        java.lang.Object ref = formula_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          formula_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A mathematical formula for calculating the value of the LCIA factor.
       * </pre>
       *
       * <code>string formula = 6;</code>
       * @return The bytes for formula.
       */
      public com.google.protobuf.ByteString
          getFormulaBytes() {
        java.lang.Object ref = formula_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          formula_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A mathematical formula for calculating the value of the LCIA factor.
       * </pre>
       *
       * <code>string formula = 6;</code>
       * @param value The formula to set.
       * @return This builder for chaining.
       */
      public Builder setFormula(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        formula_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A mathematical formula for calculating the value of the LCIA factor.
       * </pre>
       *
       * <code>string formula = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearFormula() {
        
        formula_ = getDefaultInstance().getFormula();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A mathematical formula for calculating the value of the LCIA factor.
       * </pre>
       *
       * <code>string formula = 6;</code>
       * @param value The bytes for formula to set.
       * @return This builder for chaining.
       */
      public Builder setFormulaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        formula_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Uncertainty uncertainty_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Uncertainty, org.openlca.proto.Proto.Uncertainty.Builder, org.openlca.proto.Proto.UncertaintyOrBuilder> uncertaintyBuilder_;
      /**
       * <pre>
       * The uncertainty distribution of the factors' value.
       * </pre>
       *
       * <code>.protolca.Uncertainty uncertainty = 7;</code>
       * @return Whether the uncertainty field is set.
       */
      public boolean hasUncertainty() {
        return uncertaintyBuilder_ != null || uncertainty_ != null;
      }
      /**
       * <pre>
       * The uncertainty distribution of the factors' value.
       * </pre>
       *
       * <code>.protolca.Uncertainty uncertainty = 7;</code>
       * @return The uncertainty.
       */
      public org.openlca.proto.Proto.Uncertainty getUncertainty() {
        if (uncertaintyBuilder_ == null) {
          return uncertainty_ == null ? org.openlca.proto.Proto.Uncertainty.getDefaultInstance() : uncertainty_;
        } else {
          return uncertaintyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The uncertainty distribution of the factors' value.
       * </pre>
       *
       * <code>.protolca.Uncertainty uncertainty = 7;</code>
       */
      public Builder setUncertainty(org.openlca.proto.Proto.Uncertainty value) {
        if (uncertaintyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          uncertainty_ = value;
          onChanged();
        } else {
          uncertaintyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The uncertainty distribution of the factors' value.
       * </pre>
       *
       * <code>.protolca.Uncertainty uncertainty = 7;</code>
       */
      public Builder setUncertainty(
          org.openlca.proto.Proto.Uncertainty.Builder builderForValue) {
        if (uncertaintyBuilder_ == null) {
          uncertainty_ = builderForValue.build();
          onChanged();
        } else {
          uncertaintyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The uncertainty distribution of the factors' value.
       * </pre>
       *
       * <code>.protolca.Uncertainty uncertainty = 7;</code>
       */
      public Builder mergeUncertainty(org.openlca.proto.Proto.Uncertainty value) {
        if (uncertaintyBuilder_ == null) {
          if (uncertainty_ != null) {
            uncertainty_ =
              org.openlca.proto.Proto.Uncertainty.newBuilder(uncertainty_).mergeFrom(value).buildPartial();
          } else {
            uncertainty_ = value;
          }
          onChanged();
        } else {
          uncertaintyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The uncertainty distribution of the factors' value.
       * </pre>
       *
       * <code>.protolca.Uncertainty uncertainty = 7;</code>
       */
      public Builder clearUncertainty() {
        if (uncertaintyBuilder_ == null) {
          uncertainty_ = null;
          onChanged();
        } else {
          uncertainty_ = null;
          uncertaintyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The uncertainty distribution of the factors' value.
       * </pre>
       *
       * <code>.protolca.Uncertainty uncertainty = 7;</code>
       */
      public org.openlca.proto.Proto.Uncertainty.Builder getUncertaintyBuilder() {
        
        onChanged();
        return getUncertaintyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The uncertainty distribution of the factors' value.
       * </pre>
       *
       * <code>.protolca.Uncertainty uncertainty = 7;</code>
       */
      public org.openlca.proto.Proto.UncertaintyOrBuilder getUncertaintyOrBuilder() {
        if (uncertaintyBuilder_ != null) {
          return uncertaintyBuilder_.getMessageOrBuilder();
        } else {
          return uncertainty_ == null ?
              org.openlca.proto.Proto.Uncertainty.getDefaultInstance() : uncertainty_;
        }
      }
      /**
       * <pre>
       * The uncertainty distribution of the factors' value.
       * </pre>
       *
       * <code>.protolca.Uncertainty uncertainty = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Uncertainty, org.openlca.proto.Proto.Uncertainty.Builder, org.openlca.proto.Proto.UncertaintyOrBuilder> 
          getUncertaintyFieldBuilder() {
        if (uncertaintyBuilder_ == null) {
          uncertaintyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Uncertainty, org.openlca.proto.Proto.Uncertainty.Builder, org.openlca.proto.Proto.UncertaintyOrBuilder>(
                  getUncertainty(),
                  getParentForChildren(),
                  isClean());
          uncertainty_ = null;
        }
        return uncertaintyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.ImpactFactor)
    }

    // @@protoc_insertion_point(class_scope:protolca.ImpactFactor)
    private static final org.openlca.proto.Proto.ImpactFactor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.ImpactFactor();
    }

    public static org.openlca.proto.Proto.ImpactFactor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ImpactFactor>
        PARSER = new com.google.protobuf.AbstractParser<ImpactFactor>() {
      @java.lang.Override
      public ImpactFactor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ImpactFactor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ImpactFactor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ImpactFactor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.ImpactFactor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ImpactMethodOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.ImpactMethod)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    boolean hasCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    org.openlca.proto.Proto.Ref getCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder();

    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    java.util.List<java.lang.String>
        getTagsList();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    int getTagsCount();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    java.lang.String getTags(int index);
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);

    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    java.lang.String getLibrary();
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    com.google.protobuf.ByteString
        getLibraryBytes();

    /**
     * <pre>
     * The LCIA categories of the method.
     * </pre>
     *
     * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
     */
    java.util.List<org.openlca.proto.Proto.ImpactCategoryRef> 
        getImpactCategoriesList();
    /**
     * <pre>
     * The LCIA categories of the method.
     * </pre>
     *
     * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
     */
    org.openlca.proto.Proto.ImpactCategoryRef getImpactCategories(int index);
    /**
     * <pre>
     * The LCIA categories of the method.
     * </pre>
     *
     * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
     */
    int getImpactCategoriesCount();
    /**
     * <pre>
     * The LCIA categories of the method.
     * </pre>
     *
     * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
     */
    java.util.List<? extends org.openlca.proto.Proto.ImpactCategoryRefOrBuilder> 
        getImpactCategoriesOrBuilderList();
    /**
     * <pre>
     * The LCIA categories of the method.
     * </pre>
     *
     * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
     */
    org.openlca.proto.Proto.ImpactCategoryRefOrBuilder getImpactCategoriesOrBuilder(
        int index);

    /**
     * <pre>
     * A set of method specific parameters which can be used in formulas of the
     * characterisation factors in this method.
     * </pre>
     *
     * <code>repeated .protolca.Parameter parameters = 11;</code>
     */
    java.util.List<org.openlca.proto.Proto.Parameter> 
        getParametersList();
    /**
     * <pre>
     * A set of method specific parameters which can be used in formulas of the
     * characterisation factors in this method.
     * </pre>
     *
     * <code>repeated .protolca.Parameter parameters = 11;</code>
     */
    org.openlca.proto.Proto.Parameter getParameters(int index);
    /**
     * <pre>
     * A set of method specific parameters which can be used in formulas of the
     * characterisation factors in this method.
     * </pre>
     *
     * <code>repeated .protolca.Parameter parameters = 11;</code>
     */
    int getParametersCount();
    /**
     * <pre>
     * A set of method specific parameters which can be used in formulas of the
     * characterisation factors in this method.
     * </pre>
     *
     * <code>repeated .protolca.Parameter parameters = 11;</code>
     */
    java.util.List<? extends org.openlca.proto.Proto.ParameterOrBuilder> 
        getParametersOrBuilderList();
    /**
     * <pre>
     * A set of method specific parameters which can be used in formulas of the
     * characterisation factors in this method.
     * </pre>
     *
     * <code>repeated .protolca.Parameter parameters = 11;</code>
     */
    org.openlca.proto.Proto.ParameterOrBuilder getParametersOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A impact assessment method.
   * </pre>
   *
   * Protobuf type {@code protolca.ImpactMethod}
   */
  public static final class ImpactMethod extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.ImpactMethod)
      ImpactMethodOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ImpactMethod.newBuilder() to construct.
    private ImpactMethod(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ImpactMethod() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      library_ = "";
      impactCategories_ = java.util.Collections.emptyList();
      parameters_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ImpactMethod();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ImpactMethod(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (category_ != null) {
                subBuilder = category_.toBuilder();
              }
              category_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(category_);
                category_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tags_.add(s);
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              library_ = s;
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                impactCategories_ = new java.util.ArrayList<org.openlca.proto.Proto.ImpactCategoryRef>();
                mutable_bitField0_ |= 0x00000002;
              }
              impactCategories_.add(
                  input.readMessage(org.openlca.proto.Proto.ImpactCategoryRef.parser(), extensionRegistry));
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                parameters_ = new java.util.ArrayList<org.openlca.proto.Proto.Parameter>();
                mutable_bitField0_ |= 0x00000004;
              }
              parameters_.add(
                  input.readMessage(org.openlca.proto.Proto.Parameter.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          impactCategories_ = java.util.Collections.unmodifiableList(impactCategories_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          parameters_ = java.util.Collections.unmodifiableList(parameters_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_ImpactMethod_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_ImpactMethod_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.ImpactMethod.class, org.openlca.proto.Proto.ImpactMethod.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.Ref category_;
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    @java.lang.Override
    public boolean hasCategory() {
      return category_ != null;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getCategory() {
      return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
      return getCategory();
    }

    public static final int TAGS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    public static final int LIBRARY_FIELD_NUMBER = 9;
    private volatile java.lang.Object library_;
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    @java.lang.Override
    public java.lang.String getLibrary() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        library_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLibraryBytes() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        library_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IMPACT_CATEGORIES_FIELD_NUMBER = 10;
    private java.util.List<org.openlca.proto.Proto.ImpactCategoryRef> impactCategories_;
    /**
     * <pre>
     * The LCIA categories of the method.
     * </pre>
     *
     * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.proto.Proto.ImpactCategoryRef> getImpactCategoriesList() {
      return impactCategories_;
    }
    /**
     * <pre>
     * The LCIA categories of the method.
     * </pre>
     *
     * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.proto.Proto.ImpactCategoryRefOrBuilder> 
        getImpactCategoriesOrBuilderList() {
      return impactCategories_;
    }
    /**
     * <pre>
     * The LCIA categories of the method.
     * </pre>
     *
     * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
     */
    @java.lang.Override
    public int getImpactCategoriesCount() {
      return impactCategories_.size();
    }
    /**
     * <pre>
     * The LCIA categories of the method.
     * </pre>
     *
     * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ImpactCategoryRef getImpactCategories(int index) {
      return impactCategories_.get(index);
    }
    /**
     * <pre>
     * The LCIA categories of the method.
     * </pre>
     *
     * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ImpactCategoryRefOrBuilder getImpactCategoriesOrBuilder(
        int index) {
      return impactCategories_.get(index);
    }

    public static final int PARAMETERS_FIELD_NUMBER = 11;
    private java.util.List<org.openlca.proto.Proto.Parameter> parameters_;
    /**
     * <pre>
     * A set of method specific parameters which can be used in formulas of the
     * characterisation factors in this method.
     * </pre>
     *
     * <code>repeated .protolca.Parameter parameters = 11;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.proto.Proto.Parameter> getParametersList() {
      return parameters_;
    }
    /**
     * <pre>
     * A set of method specific parameters which can be used in formulas of the
     * characterisation factors in this method.
     * </pre>
     *
     * <code>repeated .protolca.Parameter parameters = 11;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.proto.Proto.ParameterOrBuilder> 
        getParametersOrBuilderList() {
      return parameters_;
    }
    /**
     * <pre>
     * A set of method specific parameters which can be used in formulas of the
     * characterisation factors in this method.
     * </pre>
     *
     * <code>repeated .protolca.Parameter parameters = 11;</code>
     */
    @java.lang.Override
    public int getParametersCount() {
      return parameters_.size();
    }
    /**
     * <pre>
     * A set of method specific parameters which can be used in formulas of the
     * characterisation factors in this method.
     * </pre>
     *
     * <code>repeated .protolca.Parameter parameters = 11;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Parameter getParameters(int index) {
      return parameters_.get(index);
    }
    /**
     * <pre>
     * A set of method specific parameters which can be used in formulas of the
     * characterisation factors in this method.
     * </pre>
     *
     * <code>repeated .protolca.Parameter parameters = 11;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ParameterOrBuilder getParametersOrBuilder(
        int index) {
      return parameters_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (category_ != null) {
        output.writeMessage(7, getCategory());
      }
      for (int i = 0; i < tags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, tags_.getRaw(i));
      }
      if (!getLibraryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, library_);
      }
      for (int i = 0; i < impactCategories_.size(); i++) {
        output.writeMessage(10, impactCategories_.get(i));
      }
      for (int i = 0; i < parameters_.size(); i++) {
        output.writeMessage(11, parameters_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (category_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCategory());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += computeStringSizeNoTag(tags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      if (!getLibraryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, library_);
      }
      for (int i = 0; i < impactCategories_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, impactCategories_.get(i));
      }
      for (int i = 0; i < parameters_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, parameters_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.ImpactMethod)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.ImpactMethod other = (org.openlca.proto.Proto.ImpactMethod) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (hasCategory() != other.hasCategory()) return false;
      if (hasCategory()) {
        if (!getCategory()
            .equals(other.getCategory())) return false;
      }
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (!getLibrary()
          .equals(other.getLibrary())) return false;
      if (!getImpactCategoriesList()
          .equals(other.getImpactCategoriesList())) return false;
      if (!getParametersList()
          .equals(other.getParametersList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (hasCategory()) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategory().hashCode();
      }
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibrary().hashCode();
      if (getImpactCategoriesCount() > 0) {
        hash = (37 * hash) + IMPACT_CATEGORIES_FIELD_NUMBER;
        hash = (53 * hash) + getImpactCategoriesList().hashCode();
      }
      if (getParametersCount() > 0) {
        hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + getParametersList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.ImpactMethod parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ImpactMethod parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactMethod parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ImpactMethod parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactMethod parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ImpactMethod parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactMethod parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ImpactMethod parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactMethod parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ImpactMethod parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactMethod parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ImpactMethod parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.ImpactMethod prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A impact assessment method.
     * </pre>
     *
     * Protobuf type {@code protolca.ImpactMethod}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.ImpactMethod)
        org.openlca.proto.Proto.ImpactMethodOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_ImpactMethod_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_ImpactMethod_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.ImpactMethod.class, org.openlca.proto.Proto.ImpactMethod.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.ImpactMethod.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getImpactCategoriesFieldBuilder();
          getParametersFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        if (categoryBuilder_ == null) {
          category_ = null;
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        library_ = "";

        if (impactCategoriesBuilder_ == null) {
          impactCategories_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          impactCategoriesBuilder_.clear();
        }
        if (parametersBuilder_ == null) {
          parameters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          parametersBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_ImpactMethod_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ImpactMethod getDefaultInstanceForType() {
        return org.openlca.proto.Proto.ImpactMethod.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ImpactMethod build() {
        org.openlca.proto.Proto.ImpactMethod result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ImpactMethod buildPartial() {
        org.openlca.proto.Proto.ImpactMethod result = new org.openlca.proto.Proto.ImpactMethod(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (categoryBuilder_ == null) {
          result.category_ = category_;
        } else {
          result.category_ = categoryBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tags_ = tags_;
        result.library_ = library_;
        if (impactCategoriesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            impactCategories_ = java.util.Collections.unmodifiableList(impactCategories_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.impactCategories_ = impactCategories_;
        } else {
          result.impactCategories_ = impactCategoriesBuilder_.build();
        }
        if (parametersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            parameters_ = java.util.Collections.unmodifiableList(parameters_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.parameters_ = parameters_;
        } else {
          result.parameters_ = parametersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.ImpactMethod) {
          return mergeFrom((org.openlca.proto.Proto.ImpactMethod)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.ImpactMethod other) {
        if (other == org.openlca.proto.Proto.ImpactMethod.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.hasCategory()) {
          mergeCategory(other.getCategory());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        if (!other.getLibrary().isEmpty()) {
          library_ = other.library_;
          onChanged();
        }
        if (impactCategoriesBuilder_ == null) {
          if (!other.impactCategories_.isEmpty()) {
            if (impactCategories_.isEmpty()) {
              impactCategories_ = other.impactCategories_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureImpactCategoriesIsMutable();
              impactCategories_.addAll(other.impactCategories_);
            }
            onChanged();
          }
        } else {
          if (!other.impactCategories_.isEmpty()) {
            if (impactCategoriesBuilder_.isEmpty()) {
              impactCategoriesBuilder_.dispose();
              impactCategoriesBuilder_ = null;
              impactCategories_ = other.impactCategories_;
              bitField0_ = (bitField0_ & ~0x00000002);
              impactCategoriesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getImpactCategoriesFieldBuilder() : null;
            } else {
              impactCategoriesBuilder_.addAllMessages(other.impactCategories_);
            }
          }
        }
        if (parametersBuilder_ == null) {
          if (!other.parameters_.isEmpty()) {
            if (parameters_.isEmpty()) {
              parameters_ = other.parameters_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureParametersIsMutable();
              parameters_.addAll(other.parameters_);
            }
            onChanged();
          }
        } else {
          if (!other.parameters_.isEmpty()) {
            if (parametersBuilder_.isEmpty()) {
              parametersBuilder_.dispose();
              parametersBuilder_ = null;
              parameters_ = other.parameters_;
              bitField0_ = (bitField0_ & ~0x00000004);
              parametersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getParametersFieldBuilder() : null;
            } else {
              parametersBuilder_.addAllMessages(other.parameters_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.ImpactMethod parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.ImpactMethod) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref category_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> categoryBuilder_;
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return Whether the category field is set.
       */
      public boolean hasCategory() {
        return categoryBuilder_ != null || category_ != null;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return The category.
       */
      public org.openlca.proto.Proto.Ref getCategory() {
        if (categoryBuilder_ == null) {
          return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        } else {
          return categoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          category_ = value;
          onChanged();
        } else {
          categoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          category_ = builderForValue.build();
          onChanged();
        } else {
          categoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder mergeCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (category_ != null) {
            category_ =
              org.openlca.proto.Proto.Ref.newBuilder(category_).mergeFrom(value).buildPartial();
          } else {
            category_ = value;
          }
          onChanged();
        } else {
          categoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder clearCategory() {
        if (categoryBuilder_ == null) {
          category_ = null;
          onChanged();
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getCategoryBuilder() {
        
        onChanged();
        return getCategoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
        if (categoryBuilder_ != null) {
          return categoryBuilder_.getMessageOrBuilder();
        } else {
          return category_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getCategoryFieldBuilder() {
        if (categoryBuilder_ == null) {
          categoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getCategory(),
                  getParentForChildren(),
                  isClean());
          category_ = null;
        }
        return categoryBuilder_;
      }

      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return A list containing the tags.
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return The count of tags.
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the element to return.
       * @return The tags at the given index.
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tags at the given index.
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index to set the value at.
       * @param value The tags to set.
       * @return This builder for chaining.
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The tags to add.
       * @return This builder for chaining.
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param values The tags to add.
       * @return This builder for chaining.
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The bytes of the tags to add.
       * @return This builder for chaining.
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object library_ = "";
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The library.
       */
      public java.lang.String getLibrary() {
        java.lang.Object ref = library_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          library_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The bytes for library.
       */
      public com.google.protobuf.ByteString
          getLibraryBytes() {
        java.lang.Object ref = library_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          library_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The library to set.
       * @return This builder for chaining.
       */
      public Builder setLibrary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        library_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLibrary() {
        
        library_ = getDefaultInstance().getLibrary();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The bytes for library to set.
       * @return This builder for chaining.
       */
      public Builder setLibraryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        library_ = value;
        onChanged();
        return this;
      }

      private java.util.List<org.openlca.proto.Proto.ImpactCategoryRef> impactCategories_ =
        java.util.Collections.emptyList();
      private void ensureImpactCategoriesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          impactCategories_ = new java.util.ArrayList<org.openlca.proto.Proto.ImpactCategoryRef>(impactCategories_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.ImpactCategoryRef, org.openlca.proto.Proto.ImpactCategoryRef.Builder, org.openlca.proto.Proto.ImpactCategoryRefOrBuilder> impactCategoriesBuilder_;

      /**
       * <pre>
       * The LCIA categories of the method.
       * </pre>
       *
       * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
       */
      public java.util.List<org.openlca.proto.Proto.ImpactCategoryRef> getImpactCategoriesList() {
        if (impactCategoriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(impactCategories_);
        } else {
          return impactCategoriesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The LCIA categories of the method.
       * </pre>
       *
       * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
       */
      public int getImpactCategoriesCount() {
        if (impactCategoriesBuilder_ == null) {
          return impactCategories_.size();
        } else {
          return impactCategoriesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The LCIA categories of the method.
       * </pre>
       *
       * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
       */
      public org.openlca.proto.Proto.ImpactCategoryRef getImpactCategories(int index) {
        if (impactCategoriesBuilder_ == null) {
          return impactCategories_.get(index);
        } else {
          return impactCategoriesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The LCIA categories of the method.
       * </pre>
       *
       * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
       */
      public Builder setImpactCategories(
          int index, org.openlca.proto.Proto.ImpactCategoryRef value) {
        if (impactCategoriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImpactCategoriesIsMutable();
          impactCategories_.set(index, value);
          onChanged();
        } else {
          impactCategoriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The LCIA categories of the method.
       * </pre>
       *
       * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
       */
      public Builder setImpactCategories(
          int index, org.openlca.proto.Proto.ImpactCategoryRef.Builder builderForValue) {
        if (impactCategoriesBuilder_ == null) {
          ensureImpactCategoriesIsMutable();
          impactCategories_.set(index, builderForValue.build());
          onChanged();
        } else {
          impactCategoriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The LCIA categories of the method.
       * </pre>
       *
       * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
       */
      public Builder addImpactCategories(org.openlca.proto.Proto.ImpactCategoryRef value) {
        if (impactCategoriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImpactCategoriesIsMutable();
          impactCategories_.add(value);
          onChanged();
        } else {
          impactCategoriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The LCIA categories of the method.
       * </pre>
       *
       * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
       */
      public Builder addImpactCategories(
          int index, org.openlca.proto.Proto.ImpactCategoryRef value) {
        if (impactCategoriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImpactCategoriesIsMutable();
          impactCategories_.add(index, value);
          onChanged();
        } else {
          impactCategoriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The LCIA categories of the method.
       * </pre>
       *
       * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
       */
      public Builder addImpactCategories(
          org.openlca.proto.Proto.ImpactCategoryRef.Builder builderForValue) {
        if (impactCategoriesBuilder_ == null) {
          ensureImpactCategoriesIsMutable();
          impactCategories_.add(builderForValue.build());
          onChanged();
        } else {
          impactCategoriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The LCIA categories of the method.
       * </pre>
       *
       * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
       */
      public Builder addImpactCategories(
          int index, org.openlca.proto.Proto.ImpactCategoryRef.Builder builderForValue) {
        if (impactCategoriesBuilder_ == null) {
          ensureImpactCategoriesIsMutable();
          impactCategories_.add(index, builderForValue.build());
          onChanged();
        } else {
          impactCategoriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The LCIA categories of the method.
       * </pre>
       *
       * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
       */
      public Builder addAllImpactCategories(
          java.lang.Iterable<? extends org.openlca.proto.Proto.ImpactCategoryRef> values) {
        if (impactCategoriesBuilder_ == null) {
          ensureImpactCategoriesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, impactCategories_);
          onChanged();
        } else {
          impactCategoriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The LCIA categories of the method.
       * </pre>
       *
       * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
       */
      public Builder clearImpactCategories() {
        if (impactCategoriesBuilder_ == null) {
          impactCategories_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          impactCategoriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The LCIA categories of the method.
       * </pre>
       *
       * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
       */
      public Builder removeImpactCategories(int index) {
        if (impactCategoriesBuilder_ == null) {
          ensureImpactCategoriesIsMutable();
          impactCategories_.remove(index);
          onChanged();
        } else {
          impactCategoriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The LCIA categories of the method.
       * </pre>
       *
       * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
       */
      public org.openlca.proto.Proto.ImpactCategoryRef.Builder getImpactCategoriesBuilder(
          int index) {
        return getImpactCategoriesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The LCIA categories of the method.
       * </pre>
       *
       * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
       */
      public org.openlca.proto.Proto.ImpactCategoryRefOrBuilder getImpactCategoriesOrBuilder(
          int index) {
        if (impactCategoriesBuilder_ == null) {
          return impactCategories_.get(index);  } else {
          return impactCategoriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The LCIA categories of the method.
       * </pre>
       *
       * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
       */
      public java.util.List<? extends org.openlca.proto.Proto.ImpactCategoryRefOrBuilder> 
           getImpactCategoriesOrBuilderList() {
        if (impactCategoriesBuilder_ != null) {
          return impactCategoriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(impactCategories_);
        }
      }
      /**
       * <pre>
       * The LCIA categories of the method.
       * </pre>
       *
       * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
       */
      public org.openlca.proto.Proto.ImpactCategoryRef.Builder addImpactCategoriesBuilder() {
        return getImpactCategoriesFieldBuilder().addBuilder(
            org.openlca.proto.Proto.ImpactCategoryRef.getDefaultInstance());
      }
      /**
       * <pre>
       * The LCIA categories of the method.
       * </pre>
       *
       * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
       */
      public org.openlca.proto.Proto.ImpactCategoryRef.Builder addImpactCategoriesBuilder(
          int index) {
        return getImpactCategoriesFieldBuilder().addBuilder(
            index, org.openlca.proto.Proto.ImpactCategoryRef.getDefaultInstance());
      }
      /**
       * <pre>
       * The LCIA categories of the method.
       * </pre>
       *
       * <code>repeated .protolca.ImpactCategoryRef impact_categories = 10;</code>
       */
      public java.util.List<org.openlca.proto.Proto.ImpactCategoryRef.Builder> 
           getImpactCategoriesBuilderList() {
        return getImpactCategoriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.ImpactCategoryRef, org.openlca.proto.Proto.ImpactCategoryRef.Builder, org.openlca.proto.Proto.ImpactCategoryRefOrBuilder> 
          getImpactCategoriesFieldBuilder() {
        if (impactCategoriesBuilder_ == null) {
          impactCategoriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.proto.Proto.ImpactCategoryRef, org.openlca.proto.Proto.ImpactCategoryRef.Builder, org.openlca.proto.Proto.ImpactCategoryRefOrBuilder>(
                  impactCategories_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          impactCategories_ = null;
        }
        return impactCategoriesBuilder_;
      }

      private java.util.List<org.openlca.proto.Proto.Parameter> parameters_ =
        java.util.Collections.emptyList();
      private void ensureParametersIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          parameters_ = new java.util.ArrayList<org.openlca.proto.Proto.Parameter>(parameters_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.Parameter, org.openlca.proto.Proto.Parameter.Builder, org.openlca.proto.Proto.ParameterOrBuilder> parametersBuilder_;

      /**
       * <pre>
       * A set of method specific parameters which can be used in formulas of the
       * characterisation factors in this method.
       * </pre>
       *
       * <code>repeated .protolca.Parameter parameters = 11;</code>
       */
      public java.util.List<org.openlca.proto.Proto.Parameter> getParametersList() {
        if (parametersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(parameters_);
        } else {
          return parametersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A set of method specific parameters which can be used in formulas of the
       * characterisation factors in this method.
       * </pre>
       *
       * <code>repeated .protolca.Parameter parameters = 11;</code>
       */
      public int getParametersCount() {
        if (parametersBuilder_ == null) {
          return parameters_.size();
        } else {
          return parametersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A set of method specific parameters which can be used in formulas of the
       * characterisation factors in this method.
       * </pre>
       *
       * <code>repeated .protolca.Parameter parameters = 11;</code>
       */
      public org.openlca.proto.Proto.Parameter getParameters(int index) {
        if (parametersBuilder_ == null) {
          return parameters_.get(index);
        } else {
          return parametersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A set of method specific parameters which can be used in formulas of the
       * characterisation factors in this method.
       * </pre>
       *
       * <code>repeated .protolca.Parameter parameters = 11;</code>
       */
      public Builder setParameters(
          int index, org.openlca.proto.Proto.Parameter value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.set(index, value);
          onChanged();
        } else {
          parametersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A set of method specific parameters which can be used in formulas of the
       * characterisation factors in this method.
       * </pre>
       *
       * <code>repeated .protolca.Parameter parameters = 11;</code>
       */
      public Builder setParameters(
          int index, org.openlca.proto.Proto.Parameter.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.set(index, builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A set of method specific parameters which can be used in formulas of the
       * characterisation factors in this method.
       * </pre>
       *
       * <code>repeated .protolca.Parameter parameters = 11;</code>
       */
      public Builder addParameters(org.openlca.proto.Proto.Parameter value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.add(value);
          onChanged();
        } else {
          parametersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A set of method specific parameters which can be used in formulas of the
       * characterisation factors in this method.
       * </pre>
       *
       * <code>repeated .protolca.Parameter parameters = 11;</code>
       */
      public Builder addParameters(
          int index, org.openlca.proto.Proto.Parameter value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.add(index, value);
          onChanged();
        } else {
          parametersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A set of method specific parameters which can be used in formulas of the
       * characterisation factors in this method.
       * </pre>
       *
       * <code>repeated .protolca.Parameter parameters = 11;</code>
       */
      public Builder addParameters(
          org.openlca.proto.Proto.Parameter.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.add(builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A set of method specific parameters which can be used in formulas of the
       * characterisation factors in this method.
       * </pre>
       *
       * <code>repeated .protolca.Parameter parameters = 11;</code>
       */
      public Builder addParameters(
          int index, org.openlca.proto.Proto.Parameter.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.add(index, builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A set of method specific parameters which can be used in formulas of the
       * characterisation factors in this method.
       * </pre>
       *
       * <code>repeated .protolca.Parameter parameters = 11;</code>
       */
      public Builder addAllParameters(
          java.lang.Iterable<? extends org.openlca.proto.Proto.Parameter> values) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, parameters_);
          onChanged();
        } else {
          parametersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A set of method specific parameters which can be used in formulas of the
       * characterisation factors in this method.
       * </pre>
       *
       * <code>repeated .protolca.Parameter parameters = 11;</code>
       */
      public Builder clearParameters() {
        if (parametersBuilder_ == null) {
          parameters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          parametersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A set of method specific parameters which can be used in formulas of the
       * characterisation factors in this method.
       * </pre>
       *
       * <code>repeated .protolca.Parameter parameters = 11;</code>
       */
      public Builder removeParameters(int index) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.remove(index);
          onChanged();
        } else {
          parametersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A set of method specific parameters which can be used in formulas of the
       * characterisation factors in this method.
       * </pre>
       *
       * <code>repeated .protolca.Parameter parameters = 11;</code>
       */
      public org.openlca.proto.Proto.Parameter.Builder getParametersBuilder(
          int index) {
        return getParametersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A set of method specific parameters which can be used in formulas of the
       * characterisation factors in this method.
       * </pre>
       *
       * <code>repeated .protolca.Parameter parameters = 11;</code>
       */
      public org.openlca.proto.Proto.ParameterOrBuilder getParametersOrBuilder(
          int index) {
        if (parametersBuilder_ == null) {
          return parameters_.get(index);  } else {
          return parametersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A set of method specific parameters which can be used in formulas of the
       * characterisation factors in this method.
       * </pre>
       *
       * <code>repeated .protolca.Parameter parameters = 11;</code>
       */
      public java.util.List<? extends org.openlca.proto.Proto.ParameterOrBuilder> 
           getParametersOrBuilderList() {
        if (parametersBuilder_ != null) {
          return parametersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(parameters_);
        }
      }
      /**
       * <pre>
       * A set of method specific parameters which can be used in formulas of the
       * characterisation factors in this method.
       * </pre>
       *
       * <code>repeated .protolca.Parameter parameters = 11;</code>
       */
      public org.openlca.proto.Proto.Parameter.Builder addParametersBuilder() {
        return getParametersFieldBuilder().addBuilder(
            org.openlca.proto.Proto.Parameter.getDefaultInstance());
      }
      /**
       * <pre>
       * A set of method specific parameters which can be used in formulas of the
       * characterisation factors in this method.
       * </pre>
       *
       * <code>repeated .protolca.Parameter parameters = 11;</code>
       */
      public org.openlca.proto.Proto.Parameter.Builder addParametersBuilder(
          int index) {
        return getParametersFieldBuilder().addBuilder(
            index, org.openlca.proto.Proto.Parameter.getDefaultInstance());
      }
      /**
       * <pre>
       * A set of method specific parameters which can be used in formulas of the
       * characterisation factors in this method.
       * </pre>
       *
       * <code>repeated .protolca.Parameter parameters = 11;</code>
       */
      public java.util.List<org.openlca.proto.Proto.Parameter.Builder> 
           getParametersBuilderList() {
        return getParametersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.Parameter, org.openlca.proto.Proto.Parameter.Builder, org.openlca.proto.Proto.ParameterOrBuilder> 
          getParametersFieldBuilder() {
        if (parametersBuilder_ == null) {
          parametersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.proto.Proto.Parameter, org.openlca.proto.Proto.Parameter.Builder, org.openlca.proto.Proto.ParameterOrBuilder>(
                  parameters_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          parameters_ = null;
        }
        return parametersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.ImpactMethod)
    }

    // @@protoc_insertion_point(class_scope:protolca.ImpactMethod)
    private static final org.openlca.proto.Proto.ImpactMethod DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.ImpactMethod();
    }

    public static org.openlca.proto.Proto.ImpactMethod getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ImpactMethod>
        PARSER = new com.google.protobuf.AbstractParser<ImpactMethod>() {
      @java.lang.Override
      public ImpactMethod parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ImpactMethod(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ImpactMethod> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ImpactMethod> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.ImpactMethod getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ImpactResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.ImpactResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference to the impact assessment category.
     * </pre>
     *
     * <code>.protolca.ImpactCategoryRef impact_category = 2;</code>
     * @return Whether the impactCategory field is set.
     */
    boolean hasImpactCategory();
    /**
     * <pre>
     * The reference to the impact assessment category.
     * </pre>
     *
     * <code>.protolca.ImpactCategoryRef impact_category = 2;</code>
     * @return The impactCategory.
     */
    org.openlca.proto.Proto.ImpactCategoryRef getImpactCategory();
    /**
     * <pre>
     * The reference to the impact assessment category.
     * </pre>
     *
     * <code>.protolca.ImpactCategoryRef impact_category = 2;</code>
     */
    org.openlca.proto.Proto.ImpactCategoryRefOrBuilder getImpactCategoryOrBuilder();

    /**
     * <pre>
     * The value of the flow amount.
     * </pre>
     *
     * <code>double value = 3;</code>
     * @return The value.
     */
    double getValue();
  }
  /**
   * <pre>
   * A result value for an impact assessment category.
   * </pre>
   *
   * Protobuf type {@code protolca.ImpactResult}
   */
  public static final class ImpactResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.ImpactResult)
      ImpactResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ImpactResult.newBuilder() to construct.
    private ImpactResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ImpactResult() {
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ImpactResult();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ImpactResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              org.openlca.proto.Proto.ImpactCategoryRef.Builder subBuilder = null;
              if (impactCategory_ != null) {
                subBuilder = impactCategory_.toBuilder();
              }
              impactCategory_ = input.readMessage(org.openlca.proto.Proto.ImpactCategoryRef.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(impactCategory_);
                impactCategory_ = subBuilder.buildPartial();
              }

              break;
            }
            case 25: {

              value_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_ImpactResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_ImpactResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.ImpactResult.class, org.openlca.proto.Proto.ImpactResult.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IMPACT_CATEGORY_FIELD_NUMBER = 2;
    private org.openlca.proto.Proto.ImpactCategoryRef impactCategory_;
    /**
     * <pre>
     * The reference to the impact assessment category.
     * </pre>
     *
     * <code>.protolca.ImpactCategoryRef impact_category = 2;</code>
     * @return Whether the impactCategory field is set.
     */
    @java.lang.Override
    public boolean hasImpactCategory() {
      return impactCategory_ != null;
    }
    /**
     * <pre>
     * The reference to the impact assessment category.
     * </pre>
     *
     * <code>.protolca.ImpactCategoryRef impact_category = 2;</code>
     * @return The impactCategory.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ImpactCategoryRef getImpactCategory() {
      return impactCategory_ == null ? org.openlca.proto.Proto.ImpactCategoryRef.getDefaultInstance() : impactCategory_;
    }
    /**
     * <pre>
     * The reference to the impact assessment category.
     * </pre>
     *
     * <code>.protolca.ImpactCategoryRef impact_category = 2;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ImpactCategoryRefOrBuilder getImpactCategoryOrBuilder() {
      return getImpactCategory();
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private double value_;
    /**
     * <pre>
     * The value of the flow amount.
     * </pre>
     *
     * <code>double value = 3;</code>
     * @return The value.
     */
    @java.lang.Override
    public double getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (impactCategory_ != null) {
        output.writeMessage(2, getImpactCategory());
      }
      if (value_ != 0D) {
        output.writeDouble(3, value_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (impactCategory_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getImpactCategory());
      }
      if (value_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.ImpactResult)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.ImpactResult other = (org.openlca.proto.Proto.ImpactResult) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (hasImpactCategory() != other.hasImpactCategory()) return false;
      if (hasImpactCategory()) {
        if (!getImpactCategory()
            .equals(other.getImpactCategory())) return false;
      }
      if (java.lang.Double.doubleToLongBits(getValue())
          != java.lang.Double.doubleToLongBits(
              other.getValue())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      if (hasImpactCategory()) {
        hash = (37 * hash) + IMPACT_CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getImpactCategory().hashCode();
      }
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getValue()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.ImpactResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ImpactResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ImpactResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ImpactResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ImpactResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ImpactResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ImpactResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ImpactResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.ImpactResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A result value for an impact assessment category.
     * </pre>
     *
     * Protobuf type {@code protolca.ImpactResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.ImpactResult)
        org.openlca.proto.Proto.ImpactResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_ImpactResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_ImpactResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.ImpactResult.class, org.openlca.proto.Proto.ImpactResult.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.ImpactResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        if (impactCategoryBuilder_ == null) {
          impactCategory_ = null;
        } else {
          impactCategory_ = null;
          impactCategoryBuilder_ = null;
        }
        value_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_ImpactResult_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ImpactResult getDefaultInstanceForType() {
        return org.openlca.proto.Proto.ImpactResult.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ImpactResult build() {
        org.openlca.proto.Proto.ImpactResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ImpactResult buildPartial() {
        org.openlca.proto.Proto.ImpactResult result = new org.openlca.proto.Proto.ImpactResult(this);
        result.type_ = type_;
        if (impactCategoryBuilder_ == null) {
          result.impactCategory_ = impactCategory_;
        } else {
          result.impactCategory_ = impactCategoryBuilder_.build();
        }
        result.value_ = value_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.ImpactResult) {
          return mergeFrom((org.openlca.proto.Proto.ImpactResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.ImpactResult other) {
        if (other == org.openlca.proto.Proto.ImpactResult.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.hasImpactCategory()) {
          mergeImpactCategory(other.getImpactCategory());
        }
        if (other.getValue() != 0D) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.ImpactResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.ImpactResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.ImpactCategoryRef impactCategory_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.ImpactCategoryRef, org.openlca.proto.Proto.ImpactCategoryRef.Builder, org.openlca.proto.Proto.ImpactCategoryRefOrBuilder> impactCategoryBuilder_;
      /**
       * <pre>
       * The reference to the impact assessment category.
       * </pre>
       *
       * <code>.protolca.ImpactCategoryRef impact_category = 2;</code>
       * @return Whether the impactCategory field is set.
       */
      public boolean hasImpactCategory() {
        return impactCategoryBuilder_ != null || impactCategory_ != null;
      }
      /**
       * <pre>
       * The reference to the impact assessment category.
       * </pre>
       *
       * <code>.protolca.ImpactCategoryRef impact_category = 2;</code>
       * @return The impactCategory.
       */
      public org.openlca.proto.Proto.ImpactCategoryRef getImpactCategory() {
        if (impactCategoryBuilder_ == null) {
          return impactCategory_ == null ? org.openlca.proto.Proto.ImpactCategoryRef.getDefaultInstance() : impactCategory_;
        } else {
          return impactCategoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The reference to the impact assessment category.
       * </pre>
       *
       * <code>.protolca.ImpactCategoryRef impact_category = 2;</code>
       */
      public Builder setImpactCategory(org.openlca.proto.Proto.ImpactCategoryRef value) {
        if (impactCategoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          impactCategory_ = value;
          onChanged();
        } else {
          impactCategoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The reference to the impact assessment category.
       * </pre>
       *
       * <code>.protolca.ImpactCategoryRef impact_category = 2;</code>
       */
      public Builder setImpactCategory(
          org.openlca.proto.Proto.ImpactCategoryRef.Builder builderForValue) {
        if (impactCategoryBuilder_ == null) {
          impactCategory_ = builderForValue.build();
          onChanged();
        } else {
          impactCategoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The reference to the impact assessment category.
       * </pre>
       *
       * <code>.protolca.ImpactCategoryRef impact_category = 2;</code>
       */
      public Builder mergeImpactCategory(org.openlca.proto.Proto.ImpactCategoryRef value) {
        if (impactCategoryBuilder_ == null) {
          if (impactCategory_ != null) {
            impactCategory_ =
              org.openlca.proto.Proto.ImpactCategoryRef.newBuilder(impactCategory_).mergeFrom(value).buildPartial();
          } else {
            impactCategory_ = value;
          }
          onChanged();
        } else {
          impactCategoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The reference to the impact assessment category.
       * </pre>
       *
       * <code>.protolca.ImpactCategoryRef impact_category = 2;</code>
       */
      public Builder clearImpactCategory() {
        if (impactCategoryBuilder_ == null) {
          impactCategory_ = null;
          onChanged();
        } else {
          impactCategory_ = null;
          impactCategoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The reference to the impact assessment category.
       * </pre>
       *
       * <code>.protolca.ImpactCategoryRef impact_category = 2;</code>
       */
      public org.openlca.proto.Proto.ImpactCategoryRef.Builder getImpactCategoryBuilder() {
        
        onChanged();
        return getImpactCategoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The reference to the impact assessment category.
       * </pre>
       *
       * <code>.protolca.ImpactCategoryRef impact_category = 2;</code>
       */
      public org.openlca.proto.Proto.ImpactCategoryRefOrBuilder getImpactCategoryOrBuilder() {
        if (impactCategoryBuilder_ != null) {
          return impactCategoryBuilder_.getMessageOrBuilder();
        } else {
          return impactCategory_ == null ?
              org.openlca.proto.Proto.ImpactCategoryRef.getDefaultInstance() : impactCategory_;
        }
      }
      /**
       * <pre>
       * The reference to the impact assessment category.
       * </pre>
       *
       * <code>.protolca.ImpactCategoryRef impact_category = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.ImpactCategoryRef, org.openlca.proto.Proto.ImpactCategoryRef.Builder, org.openlca.proto.Proto.ImpactCategoryRefOrBuilder> 
          getImpactCategoryFieldBuilder() {
        if (impactCategoryBuilder_ == null) {
          impactCategoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.ImpactCategoryRef, org.openlca.proto.Proto.ImpactCategoryRef.Builder, org.openlca.proto.Proto.ImpactCategoryRefOrBuilder>(
                  getImpactCategory(),
                  getParentForChildren(),
                  isClean());
          impactCategory_ = null;
        }
        return impactCategoryBuilder_;
      }

      private double value_ ;
      /**
       * <pre>
       * The value of the flow amount.
       * </pre>
       *
       * <code>double value = 3;</code>
       * @return The value.
       */
      @java.lang.Override
      public double getValue() {
        return value_;
      }
      /**
       * <pre>
       * The value of the flow amount.
       * </pre>
       *
       * <code>double value = 3;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(double value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The value of the flow amount.
       * </pre>
       *
       * <code>double value = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.ImpactResult)
    }

    // @@protoc_insertion_point(class_scope:protolca.ImpactResult)
    private static final org.openlca.proto.Proto.ImpactResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.ImpactResult();
    }

    public static org.openlca.proto.Proto.ImpactResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ImpactResult>
        PARSER = new com.google.protobuf.AbstractParser<ImpactResult>() {
      @java.lang.Override
      public ImpactResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ImpactResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ImpactResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ImpactResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.ImpactResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LocationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.Location)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    boolean hasCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    org.openlca.proto.Proto.Ref getCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder();

    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    java.util.List<java.lang.String>
        getTagsList();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    int getTagsCount();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    java.lang.String getTags(int index);
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);

    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    java.lang.String getLibrary();
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    com.google.protobuf.ByteString
        getLibraryBytes();

    /**
     * <pre>
     * The code of the location (e.g. an ISO 2-letter country code).
     * </pre>
     *
     * <code>string code = 10;</code>
     * @return The code.
     */
    java.lang.String getCode();
    /**
     * <pre>
     * The code of the location (e.g. an ISO 2-letter country code).
     * </pre>
     *
     * <code>string code = 10;</code>
     * @return The bytes for code.
     */
    com.google.protobuf.ByteString
        getCodeBytes();

    /**
     * <pre>
     * The average latitude of the location.
     * </pre>
     *
     * <code>double latitude = 11;</code>
     * @return The latitude.
     */
    double getLatitude();

    /**
     * <pre>
     * The average longitude of the location.
     * </pre>
     *
     * <code>double longitude = 12;</code>
     * @return The longitude.
     */
    double getLongitude();

    /**
     * <pre>
     * KML data of the location.
     * </pre>
     *
     * <code>string kml = 13;</code>
     * @return The kml.
     */
    java.lang.String getKml();
    /**
     * <pre>
     * KML data of the location.
     * </pre>
     *
     * <code>string kml = 13;</code>
     * @return The bytes for kml.
     */
    com.google.protobuf.ByteString
        getKmlBytes();
  }
  /**
   * <pre>
   * A location like a country, state, city, etc.
   * </pre>
   *
   * Protobuf type {@code protolca.Location}
   */
  public static final class Location extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.Location)
      LocationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Location.newBuilder() to construct.
    private Location(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Location() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      library_ = "";
      code_ = "";
      kml_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Location();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Location(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (category_ != null) {
                subBuilder = category_.toBuilder();
              }
              category_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(category_);
                category_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tags_.add(s);
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              library_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              code_ = s;
              break;
            }
            case 89: {

              latitude_ = input.readDouble();
              break;
            }
            case 97: {

              longitude_ = input.readDouble();
              break;
            }
            case 106: {
              java.lang.String s = input.readStringRequireUtf8();

              kml_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_Location_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_Location_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.Location.class, org.openlca.proto.Proto.Location.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.Ref category_;
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    @java.lang.Override
    public boolean hasCategory() {
      return category_ != null;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getCategory() {
      return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
      return getCategory();
    }

    public static final int TAGS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    public static final int LIBRARY_FIELD_NUMBER = 9;
    private volatile java.lang.Object library_;
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    @java.lang.Override
    public java.lang.String getLibrary() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        library_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLibraryBytes() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        library_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CODE_FIELD_NUMBER = 10;
    private volatile java.lang.Object code_;
    /**
     * <pre>
     * The code of the location (e.g. an ISO 2-letter country code).
     * </pre>
     *
     * <code>string code = 10;</code>
     * @return The code.
     */
    @java.lang.Override
    public java.lang.String getCode() {
      java.lang.Object ref = code_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        code_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The code of the location (e.g. an ISO 2-letter country code).
     * </pre>
     *
     * <code>string code = 10;</code>
     * @return The bytes for code.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCodeBytes() {
      java.lang.Object ref = code_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        code_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LATITUDE_FIELD_NUMBER = 11;
    private double latitude_;
    /**
     * <pre>
     * The average latitude of the location.
     * </pre>
     *
     * <code>double latitude = 11;</code>
     * @return The latitude.
     */
    @java.lang.Override
    public double getLatitude() {
      return latitude_;
    }

    public static final int LONGITUDE_FIELD_NUMBER = 12;
    private double longitude_;
    /**
     * <pre>
     * The average longitude of the location.
     * </pre>
     *
     * <code>double longitude = 12;</code>
     * @return The longitude.
     */
    @java.lang.Override
    public double getLongitude() {
      return longitude_;
    }

    public static final int KML_FIELD_NUMBER = 13;
    private volatile java.lang.Object kml_;
    /**
     * <pre>
     * KML data of the location.
     * </pre>
     *
     * <code>string kml = 13;</code>
     * @return The kml.
     */
    @java.lang.Override
    public java.lang.String getKml() {
      java.lang.Object ref = kml_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        kml_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * KML data of the location.
     * </pre>
     *
     * <code>string kml = 13;</code>
     * @return The bytes for kml.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKmlBytes() {
      java.lang.Object ref = kml_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        kml_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (category_ != null) {
        output.writeMessage(7, getCategory());
      }
      for (int i = 0; i < tags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, tags_.getRaw(i));
      }
      if (!getLibraryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, library_);
      }
      if (!getCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, code_);
      }
      if (latitude_ != 0D) {
        output.writeDouble(11, latitude_);
      }
      if (longitude_ != 0D) {
        output.writeDouble(12, longitude_);
      }
      if (!getKmlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, kml_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (category_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCategory());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += computeStringSizeNoTag(tags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      if (!getLibraryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, library_);
      }
      if (!getCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, code_);
      }
      if (latitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, latitude_);
      }
      if (longitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, longitude_);
      }
      if (!getKmlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, kml_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.Location)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.Location other = (org.openlca.proto.Proto.Location) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (hasCategory() != other.hasCategory()) return false;
      if (hasCategory()) {
        if (!getCategory()
            .equals(other.getCategory())) return false;
      }
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (!getLibrary()
          .equals(other.getLibrary())) return false;
      if (!getCode()
          .equals(other.getCode())) return false;
      if (java.lang.Double.doubleToLongBits(getLatitude())
          != java.lang.Double.doubleToLongBits(
              other.getLatitude())) return false;
      if (java.lang.Double.doubleToLongBits(getLongitude())
          != java.lang.Double.doubleToLongBits(
              other.getLongitude())) return false;
      if (!getKml()
          .equals(other.getKml())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (hasCategory()) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategory().hashCode();
      }
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibrary().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCode().hashCode();
      hash = (37 * hash) + LATITUDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLatitude()));
      hash = (37 * hash) + LONGITUDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLongitude()));
      hash = (37 * hash) + KML_FIELD_NUMBER;
      hash = (53 * hash) + getKml().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.Location parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Location parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Location parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Location parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Location parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Location parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Location parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Location parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Location parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Location parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Location parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Location parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.Location prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A location like a country, state, city, etc.
     * </pre>
     *
     * Protobuf type {@code protolca.Location}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.Location)
        org.openlca.proto.Proto.LocationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_Location_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_Location_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.Location.class, org.openlca.proto.Proto.Location.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.Location.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        if (categoryBuilder_ == null) {
          category_ = null;
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        library_ = "";

        code_ = "";

        latitude_ = 0D;

        longitude_ = 0D;

        kml_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_Location_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Location getDefaultInstanceForType() {
        return org.openlca.proto.Proto.Location.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Location build() {
        org.openlca.proto.Proto.Location result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Location buildPartial() {
        org.openlca.proto.Proto.Location result = new org.openlca.proto.Proto.Location(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (categoryBuilder_ == null) {
          result.category_ = category_;
        } else {
          result.category_ = categoryBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tags_ = tags_;
        result.library_ = library_;
        result.code_ = code_;
        result.latitude_ = latitude_;
        result.longitude_ = longitude_;
        result.kml_ = kml_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.Location) {
          return mergeFrom((org.openlca.proto.Proto.Location)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.Location other) {
        if (other == org.openlca.proto.Proto.Location.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.hasCategory()) {
          mergeCategory(other.getCategory());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        if (!other.getLibrary().isEmpty()) {
          library_ = other.library_;
          onChanged();
        }
        if (!other.getCode().isEmpty()) {
          code_ = other.code_;
          onChanged();
        }
        if (other.getLatitude() != 0D) {
          setLatitude(other.getLatitude());
        }
        if (other.getLongitude() != 0D) {
          setLongitude(other.getLongitude());
        }
        if (!other.getKml().isEmpty()) {
          kml_ = other.kml_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.Location parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.Location) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref category_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> categoryBuilder_;
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return Whether the category field is set.
       */
      public boolean hasCategory() {
        return categoryBuilder_ != null || category_ != null;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return The category.
       */
      public org.openlca.proto.Proto.Ref getCategory() {
        if (categoryBuilder_ == null) {
          return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        } else {
          return categoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          category_ = value;
          onChanged();
        } else {
          categoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          category_ = builderForValue.build();
          onChanged();
        } else {
          categoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder mergeCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (category_ != null) {
            category_ =
              org.openlca.proto.Proto.Ref.newBuilder(category_).mergeFrom(value).buildPartial();
          } else {
            category_ = value;
          }
          onChanged();
        } else {
          categoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder clearCategory() {
        if (categoryBuilder_ == null) {
          category_ = null;
          onChanged();
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getCategoryBuilder() {
        
        onChanged();
        return getCategoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
        if (categoryBuilder_ != null) {
          return categoryBuilder_.getMessageOrBuilder();
        } else {
          return category_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getCategoryFieldBuilder() {
        if (categoryBuilder_ == null) {
          categoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getCategory(),
                  getParentForChildren(),
                  isClean());
          category_ = null;
        }
        return categoryBuilder_;
      }

      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return A list containing the tags.
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return The count of tags.
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the element to return.
       * @return The tags at the given index.
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tags at the given index.
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index to set the value at.
       * @param value The tags to set.
       * @return This builder for chaining.
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The tags to add.
       * @return This builder for chaining.
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param values The tags to add.
       * @return This builder for chaining.
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The bytes of the tags to add.
       * @return This builder for chaining.
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object library_ = "";
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The library.
       */
      public java.lang.String getLibrary() {
        java.lang.Object ref = library_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          library_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The bytes for library.
       */
      public com.google.protobuf.ByteString
          getLibraryBytes() {
        java.lang.Object ref = library_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          library_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The library to set.
       * @return This builder for chaining.
       */
      public Builder setLibrary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        library_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLibrary() {
        
        library_ = getDefaultInstance().getLibrary();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The bytes for library to set.
       * @return This builder for chaining.
       */
      public Builder setLibraryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        library_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object code_ = "";
      /**
       * <pre>
       * The code of the location (e.g. an ISO 2-letter country code).
       * </pre>
       *
       * <code>string code = 10;</code>
       * @return The code.
       */
      public java.lang.String getCode() {
        java.lang.Object ref = code_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          code_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The code of the location (e.g. an ISO 2-letter country code).
       * </pre>
       *
       * <code>string code = 10;</code>
       * @return The bytes for code.
       */
      public com.google.protobuf.ByteString
          getCodeBytes() {
        java.lang.Object ref = code_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          code_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The code of the location (e.g. an ISO 2-letter country code).
       * </pre>
       *
       * <code>string code = 10;</code>
       * @param value The code to set.
       * @return This builder for chaining.
       */
      public Builder setCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The code of the location (e.g. an ISO 2-letter country code).
       * </pre>
       *
       * <code>string code = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearCode() {
        
        code_ = getDefaultInstance().getCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The code of the location (e.g. an ISO 2-letter country code).
       * </pre>
       *
       * <code>string code = 10;</code>
       * @param value The bytes for code to set.
       * @return This builder for chaining.
       */
      public Builder setCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        code_ = value;
        onChanged();
        return this;
      }

      private double latitude_ ;
      /**
       * <pre>
       * The average latitude of the location.
       * </pre>
       *
       * <code>double latitude = 11;</code>
       * @return The latitude.
       */
      @java.lang.Override
      public double getLatitude() {
        return latitude_;
      }
      /**
       * <pre>
       * The average latitude of the location.
       * </pre>
       *
       * <code>double latitude = 11;</code>
       * @param value The latitude to set.
       * @return This builder for chaining.
       */
      public Builder setLatitude(double value) {
        
        latitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The average latitude of the location.
       * </pre>
       *
       * <code>double latitude = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearLatitude() {
        
        latitude_ = 0D;
        onChanged();
        return this;
      }

      private double longitude_ ;
      /**
       * <pre>
       * The average longitude of the location.
       * </pre>
       *
       * <code>double longitude = 12;</code>
       * @return The longitude.
       */
      @java.lang.Override
      public double getLongitude() {
        return longitude_;
      }
      /**
       * <pre>
       * The average longitude of the location.
       * </pre>
       *
       * <code>double longitude = 12;</code>
       * @param value The longitude to set.
       * @return This builder for chaining.
       */
      public Builder setLongitude(double value) {
        
        longitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The average longitude of the location.
       * </pre>
       *
       * <code>double longitude = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongitude() {
        
        longitude_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object kml_ = "";
      /**
       * <pre>
       * KML data of the location.
       * </pre>
       *
       * <code>string kml = 13;</code>
       * @return The kml.
       */
      public java.lang.String getKml() {
        java.lang.Object ref = kml_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          kml_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * KML data of the location.
       * </pre>
       *
       * <code>string kml = 13;</code>
       * @return The bytes for kml.
       */
      public com.google.protobuf.ByteString
          getKmlBytes() {
        java.lang.Object ref = kml_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          kml_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * KML data of the location.
       * </pre>
       *
       * <code>string kml = 13;</code>
       * @param value The kml to set.
       * @return This builder for chaining.
       */
      public Builder setKml(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        kml_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * KML data of the location.
       * </pre>
       *
       * <code>string kml = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearKml() {
        
        kml_ = getDefaultInstance().getKml();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * KML data of the location.
       * </pre>
       *
       * <code>string kml = 13;</code>
       * @param value The bytes for kml to set.
       * @return This builder for chaining.
       */
      public Builder setKmlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        kml_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.Location)
    }

    // @@protoc_insertion_point(class_scope:protolca.Location)
    private static final org.openlca.proto.Proto.Location DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.Location();
    }

    public static org.openlca.proto.Proto.Location getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Location>
        PARSER = new com.google.protobuf.AbstractParser<Location>() {
      @java.lang.Override
      public Location parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Location(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Location> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Location> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.Location getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NwFactorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.NwFactor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <code>.protolca.Ref impact_category = 2;</code>
     * @return Whether the impactCategory field is set.
     */
    boolean hasImpactCategory();
    /**
     * <code>.protolca.Ref impact_category = 2;</code>
     * @return The impactCategory.
     */
    org.openlca.proto.Proto.Ref getImpactCategory();
    /**
     * <code>.protolca.Ref impact_category = 2;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getImpactCategoryOrBuilder();

    /**
     * <code>double normalisation_factor = 3;</code>
     * @return The normalisationFactor.
     */
    double getNormalisationFactor();

    /**
     * <code>double weighting_factor = 4;</code>
     * @return The weightingFactor.
     */
    double getWeightingFactor();
  }
  /**
   * <pre>
   * A normalization and weighting factor of a [NwSet] related to an impact
   * category. Depending on the purpose of the [NwSet] (normalization, weighting,
   * or both) the normalization and weighting factor can be present or not.
   * </pre>
   *
   * Protobuf type {@code protolca.NwFactor}
   */
  public static final class NwFactor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.NwFactor)
      NwFactorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NwFactor.newBuilder() to construct.
    private NwFactor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NwFactor() {
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NwFactor();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NwFactor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (impactCategory_ != null) {
                subBuilder = impactCategory_.toBuilder();
              }
              impactCategory_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(impactCategory_);
                impactCategory_ = subBuilder.buildPartial();
              }

              break;
            }
            case 25: {

              normalisationFactor_ = input.readDouble();
              break;
            }
            case 33: {

              weightingFactor_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_NwFactor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_NwFactor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.NwFactor.class, org.openlca.proto.Proto.NwFactor.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IMPACT_CATEGORY_FIELD_NUMBER = 2;
    private org.openlca.proto.Proto.Ref impactCategory_;
    /**
     * <code>.protolca.Ref impact_category = 2;</code>
     * @return Whether the impactCategory field is set.
     */
    @java.lang.Override
    public boolean hasImpactCategory() {
      return impactCategory_ != null;
    }
    /**
     * <code>.protolca.Ref impact_category = 2;</code>
     * @return The impactCategory.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getImpactCategory() {
      return impactCategory_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : impactCategory_;
    }
    /**
     * <code>.protolca.Ref impact_category = 2;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getImpactCategoryOrBuilder() {
      return getImpactCategory();
    }

    public static final int NORMALISATION_FACTOR_FIELD_NUMBER = 3;
    private double normalisationFactor_;
    /**
     * <code>double normalisation_factor = 3;</code>
     * @return The normalisationFactor.
     */
    @java.lang.Override
    public double getNormalisationFactor() {
      return normalisationFactor_;
    }

    public static final int WEIGHTING_FACTOR_FIELD_NUMBER = 4;
    private double weightingFactor_;
    /**
     * <code>double weighting_factor = 4;</code>
     * @return The weightingFactor.
     */
    @java.lang.Override
    public double getWeightingFactor() {
      return weightingFactor_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (impactCategory_ != null) {
        output.writeMessage(2, getImpactCategory());
      }
      if (normalisationFactor_ != 0D) {
        output.writeDouble(3, normalisationFactor_);
      }
      if (weightingFactor_ != 0D) {
        output.writeDouble(4, weightingFactor_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (impactCategory_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getImpactCategory());
      }
      if (normalisationFactor_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, normalisationFactor_);
      }
      if (weightingFactor_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, weightingFactor_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.NwFactor)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.NwFactor other = (org.openlca.proto.Proto.NwFactor) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (hasImpactCategory() != other.hasImpactCategory()) return false;
      if (hasImpactCategory()) {
        if (!getImpactCategory()
            .equals(other.getImpactCategory())) return false;
      }
      if (java.lang.Double.doubleToLongBits(getNormalisationFactor())
          != java.lang.Double.doubleToLongBits(
              other.getNormalisationFactor())) return false;
      if (java.lang.Double.doubleToLongBits(getWeightingFactor())
          != java.lang.Double.doubleToLongBits(
              other.getWeightingFactor())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      if (hasImpactCategory()) {
        hash = (37 * hash) + IMPACT_CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getImpactCategory().hashCode();
      }
      hash = (37 * hash) + NORMALISATION_FACTOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getNormalisationFactor()));
      hash = (37 * hash) + WEIGHTING_FACTOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getWeightingFactor()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.NwFactor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.NwFactor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.NwFactor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.NwFactor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.NwFactor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.NwFactor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.NwFactor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.NwFactor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.NwFactor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.NwFactor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.NwFactor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.NwFactor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.NwFactor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A normalization and weighting factor of a [NwSet] related to an impact
     * category. Depending on the purpose of the [NwSet] (normalization, weighting,
     * or both) the normalization and weighting factor can be present or not.
     * </pre>
     *
     * Protobuf type {@code protolca.NwFactor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.NwFactor)
        org.openlca.proto.Proto.NwFactorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_NwFactor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_NwFactor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.NwFactor.class, org.openlca.proto.Proto.NwFactor.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.NwFactor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        if (impactCategoryBuilder_ == null) {
          impactCategory_ = null;
        } else {
          impactCategory_ = null;
          impactCategoryBuilder_ = null;
        }
        normalisationFactor_ = 0D;

        weightingFactor_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_NwFactor_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.NwFactor getDefaultInstanceForType() {
        return org.openlca.proto.Proto.NwFactor.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.NwFactor build() {
        org.openlca.proto.Proto.NwFactor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.NwFactor buildPartial() {
        org.openlca.proto.Proto.NwFactor result = new org.openlca.proto.Proto.NwFactor(this);
        result.type_ = type_;
        if (impactCategoryBuilder_ == null) {
          result.impactCategory_ = impactCategory_;
        } else {
          result.impactCategory_ = impactCategoryBuilder_.build();
        }
        result.normalisationFactor_ = normalisationFactor_;
        result.weightingFactor_ = weightingFactor_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.NwFactor) {
          return mergeFrom((org.openlca.proto.Proto.NwFactor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.NwFactor other) {
        if (other == org.openlca.proto.Proto.NwFactor.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.hasImpactCategory()) {
          mergeImpactCategory(other.getImpactCategory());
        }
        if (other.getNormalisationFactor() != 0D) {
          setNormalisationFactor(other.getNormalisationFactor());
        }
        if (other.getWeightingFactor() != 0D) {
          setWeightingFactor(other.getWeightingFactor());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.NwFactor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.NwFactor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref impactCategory_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> impactCategoryBuilder_;
      /**
       * <code>.protolca.Ref impact_category = 2;</code>
       * @return Whether the impactCategory field is set.
       */
      public boolean hasImpactCategory() {
        return impactCategoryBuilder_ != null || impactCategory_ != null;
      }
      /**
       * <code>.protolca.Ref impact_category = 2;</code>
       * @return The impactCategory.
       */
      public org.openlca.proto.Proto.Ref getImpactCategory() {
        if (impactCategoryBuilder_ == null) {
          return impactCategory_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : impactCategory_;
        } else {
          return impactCategoryBuilder_.getMessage();
        }
      }
      /**
       * <code>.protolca.Ref impact_category = 2;</code>
       */
      public Builder setImpactCategory(org.openlca.proto.Proto.Ref value) {
        if (impactCategoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          impactCategory_ = value;
          onChanged();
        } else {
          impactCategoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref impact_category = 2;</code>
       */
      public Builder setImpactCategory(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (impactCategoryBuilder_ == null) {
          impactCategory_ = builderForValue.build();
          onChanged();
        } else {
          impactCategoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protolca.Ref impact_category = 2;</code>
       */
      public Builder mergeImpactCategory(org.openlca.proto.Proto.Ref value) {
        if (impactCategoryBuilder_ == null) {
          if (impactCategory_ != null) {
            impactCategory_ =
              org.openlca.proto.Proto.Ref.newBuilder(impactCategory_).mergeFrom(value).buildPartial();
          } else {
            impactCategory_ = value;
          }
          onChanged();
        } else {
          impactCategoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref impact_category = 2;</code>
       */
      public Builder clearImpactCategory() {
        if (impactCategoryBuilder_ == null) {
          impactCategory_ = null;
          onChanged();
        } else {
          impactCategory_ = null;
          impactCategoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protolca.Ref impact_category = 2;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getImpactCategoryBuilder() {
        
        onChanged();
        return getImpactCategoryFieldBuilder().getBuilder();
      }
      /**
       * <code>.protolca.Ref impact_category = 2;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getImpactCategoryOrBuilder() {
        if (impactCategoryBuilder_ != null) {
          return impactCategoryBuilder_.getMessageOrBuilder();
        } else {
          return impactCategory_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : impactCategory_;
        }
      }
      /**
       * <code>.protolca.Ref impact_category = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getImpactCategoryFieldBuilder() {
        if (impactCategoryBuilder_ == null) {
          impactCategoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getImpactCategory(),
                  getParentForChildren(),
                  isClean());
          impactCategory_ = null;
        }
        return impactCategoryBuilder_;
      }

      private double normalisationFactor_ ;
      /**
       * <code>double normalisation_factor = 3;</code>
       * @return The normalisationFactor.
       */
      @java.lang.Override
      public double getNormalisationFactor() {
        return normalisationFactor_;
      }
      /**
       * <code>double normalisation_factor = 3;</code>
       * @param value The normalisationFactor to set.
       * @return This builder for chaining.
       */
      public Builder setNormalisationFactor(double value) {
        
        normalisationFactor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double normalisation_factor = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearNormalisationFactor() {
        
        normalisationFactor_ = 0D;
        onChanged();
        return this;
      }

      private double weightingFactor_ ;
      /**
       * <code>double weighting_factor = 4;</code>
       * @return The weightingFactor.
       */
      @java.lang.Override
      public double getWeightingFactor() {
        return weightingFactor_;
      }
      /**
       * <code>double weighting_factor = 4;</code>
       * @param value The weightingFactor to set.
       * @return This builder for chaining.
       */
      public Builder setWeightingFactor(double value) {
        
        weightingFactor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double weighting_factor = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearWeightingFactor() {
        
        weightingFactor_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.NwFactor)
    }

    // @@protoc_insertion_point(class_scope:protolca.NwFactor)
    private static final org.openlca.proto.Proto.NwFactor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.NwFactor();
    }

    public static org.openlca.proto.Proto.NwFactor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NwFactor>
        PARSER = new com.google.protobuf.AbstractParser<NwFactor>() {
      @java.lang.Override
      public NwFactor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NwFactor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NwFactor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NwFactor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.NwFactor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NwSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.NwSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * This is the optional unit of the (normalized and) weighted score when this
     * normalization and weighting set was applied on a LCIA result.
     * </pre>
     *
     * <code>string weighted_score_unit = 7;</code>
     * @return The weightedScoreUnit.
     */
    java.lang.String getWeightedScoreUnit();
    /**
     * <pre>
     * This is the optional unit of the (normalized and) weighted score when this
     * normalization and weighting set was applied on a LCIA result.
     * </pre>
     *
     * <code>string weighted_score_unit = 7;</code>
     * @return The bytes for weightedScoreUnit.
     */
    com.google.protobuf.ByteString
        getWeightedScoreUnitBytes();

    /**
     * <pre>
     * The list of normalization and weighting factors of this set.
     * </pre>
     *
     * <code>repeated .protolca.NwFactor factors = 8;</code>
     */
    java.util.List<org.openlca.proto.Proto.NwFactor> 
        getFactorsList();
    /**
     * <pre>
     * The list of normalization and weighting factors of this set.
     * </pre>
     *
     * <code>repeated .protolca.NwFactor factors = 8;</code>
     */
    org.openlca.proto.Proto.NwFactor getFactors(int index);
    /**
     * <pre>
     * The list of normalization and weighting factors of this set.
     * </pre>
     *
     * <code>repeated .protolca.NwFactor factors = 8;</code>
     */
    int getFactorsCount();
    /**
     * <pre>
     * The list of normalization and weighting factors of this set.
     * </pre>
     *
     * <code>repeated .protolca.NwFactor factors = 8;</code>
     */
    java.util.List<? extends org.openlca.proto.Proto.NwFactorOrBuilder> 
        getFactorsOrBuilderList();
    /**
     * <pre>
     * The list of normalization and weighting factors of this set.
     * </pre>
     *
     * <code>repeated .protolca.NwFactor factors = 8;</code>
     */
    org.openlca.proto.Proto.NwFactorOrBuilder getFactorsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A normalization and weighting set.
   * </pre>
   *
   * Protobuf type {@code protolca.NwSet}
   */
  public static final class NwSet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.NwSet)
      NwSetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NwSet.newBuilder() to construct.
    private NwSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NwSet() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      weightedScoreUnit_ = "";
      factors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NwSet();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NwSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              weightedScoreUnit_ = s;
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                factors_ = new java.util.ArrayList<org.openlca.proto.Proto.NwFactor>();
                mutable_bitField0_ |= 0x00000001;
              }
              factors_.add(
                  input.readMessage(org.openlca.proto.Proto.NwFactor.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          factors_ = java.util.Collections.unmodifiableList(factors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_NwSet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_NwSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.NwSet.class, org.openlca.proto.Proto.NwSet.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WEIGHTED_SCORE_UNIT_FIELD_NUMBER = 7;
    private volatile java.lang.Object weightedScoreUnit_;
    /**
     * <pre>
     * This is the optional unit of the (normalized and) weighted score when this
     * normalization and weighting set was applied on a LCIA result.
     * </pre>
     *
     * <code>string weighted_score_unit = 7;</code>
     * @return The weightedScoreUnit.
     */
    @java.lang.Override
    public java.lang.String getWeightedScoreUnit() {
      java.lang.Object ref = weightedScoreUnit_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        weightedScoreUnit_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * This is the optional unit of the (normalized and) weighted score when this
     * normalization and weighting set was applied on a LCIA result.
     * </pre>
     *
     * <code>string weighted_score_unit = 7;</code>
     * @return The bytes for weightedScoreUnit.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getWeightedScoreUnitBytes() {
      java.lang.Object ref = weightedScoreUnit_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        weightedScoreUnit_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FACTORS_FIELD_NUMBER = 8;
    private java.util.List<org.openlca.proto.Proto.NwFactor> factors_;
    /**
     * <pre>
     * The list of normalization and weighting factors of this set.
     * </pre>
     *
     * <code>repeated .protolca.NwFactor factors = 8;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.proto.Proto.NwFactor> getFactorsList() {
      return factors_;
    }
    /**
     * <pre>
     * The list of normalization and weighting factors of this set.
     * </pre>
     *
     * <code>repeated .protolca.NwFactor factors = 8;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.proto.Proto.NwFactorOrBuilder> 
        getFactorsOrBuilderList() {
      return factors_;
    }
    /**
     * <pre>
     * The list of normalization and weighting factors of this set.
     * </pre>
     *
     * <code>repeated .protolca.NwFactor factors = 8;</code>
     */
    @java.lang.Override
    public int getFactorsCount() {
      return factors_.size();
    }
    /**
     * <pre>
     * The list of normalization and weighting factors of this set.
     * </pre>
     *
     * <code>repeated .protolca.NwFactor factors = 8;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.NwFactor getFactors(int index) {
      return factors_.get(index);
    }
    /**
     * <pre>
     * The list of normalization and weighting factors of this set.
     * </pre>
     *
     * <code>repeated .protolca.NwFactor factors = 8;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.NwFactorOrBuilder getFactorsOrBuilder(
        int index) {
      return factors_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (!getWeightedScoreUnitBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, weightedScoreUnit_);
      }
      for (int i = 0; i < factors_.size(); i++) {
        output.writeMessage(8, factors_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (!getWeightedScoreUnitBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, weightedScoreUnit_);
      }
      for (int i = 0; i < factors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, factors_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.NwSet)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.NwSet other = (org.openlca.proto.Proto.NwSet) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (!getWeightedScoreUnit()
          .equals(other.getWeightedScoreUnit())) return false;
      if (!getFactorsList()
          .equals(other.getFactorsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      hash = (37 * hash) + WEIGHTED_SCORE_UNIT_FIELD_NUMBER;
      hash = (53 * hash) + getWeightedScoreUnit().hashCode();
      if (getFactorsCount() > 0) {
        hash = (37 * hash) + FACTORS_FIELD_NUMBER;
        hash = (53 * hash) + getFactorsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.NwSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.NwSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.NwSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.NwSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.NwSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.NwSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.NwSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.NwSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.NwSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.NwSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.NwSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.NwSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.NwSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A normalization and weighting set.
     * </pre>
     *
     * Protobuf type {@code protolca.NwSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.NwSet)
        org.openlca.proto.Proto.NwSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_NwSet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_NwSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.NwSet.class, org.openlca.proto.Proto.NwSet.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.NwSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFactorsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        weightedScoreUnit_ = "";

        if (factorsBuilder_ == null) {
          factors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          factorsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_NwSet_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.NwSet getDefaultInstanceForType() {
        return org.openlca.proto.Proto.NwSet.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.NwSet build() {
        org.openlca.proto.Proto.NwSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.NwSet buildPartial() {
        org.openlca.proto.Proto.NwSet result = new org.openlca.proto.Proto.NwSet(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        result.weightedScoreUnit_ = weightedScoreUnit_;
        if (factorsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            factors_ = java.util.Collections.unmodifiableList(factors_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.factors_ = factors_;
        } else {
          result.factors_ = factorsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.NwSet) {
          return mergeFrom((org.openlca.proto.Proto.NwSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.NwSet other) {
        if (other == org.openlca.proto.Proto.NwSet.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (!other.getWeightedScoreUnit().isEmpty()) {
          weightedScoreUnit_ = other.weightedScoreUnit_;
          onChanged();
        }
        if (factorsBuilder_ == null) {
          if (!other.factors_.isEmpty()) {
            if (factors_.isEmpty()) {
              factors_ = other.factors_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFactorsIsMutable();
              factors_.addAll(other.factors_);
            }
            onChanged();
          }
        } else {
          if (!other.factors_.isEmpty()) {
            if (factorsBuilder_.isEmpty()) {
              factorsBuilder_.dispose();
              factorsBuilder_ = null;
              factors_ = other.factors_;
              bitField0_ = (bitField0_ & ~0x00000001);
              factorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFactorsFieldBuilder() : null;
            } else {
              factorsBuilder_.addAllMessages(other.factors_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.NwSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.NwSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object weightedScoreUnit_ = "";
      /**
       * <pre>
       * This is the optional unit of the (normalized and) weighted score when this
       * normalization and weighting set was applied on a LCIA result.
       * </pre>
       *
       * <code>string weighted_score_unit = 7;</code>
       * @return The weightedScoreUnit.
       */
      public java.lang.String getWeightedScoreUnit() {
        java.lang.Object ref = weightedScoreUnit_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          weightedScoreUnit_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * This is the optional unit of the (normalized and) weighted score when this
       * normalization and weighting set was applied on a LCIA result.
       * </pre>
       *
       * <code>string weighted_score_unit = 7;</code>
       * @return The bytes for weightedScoreUnit.
       */
      public com.google.protobuf.ByteString
          getWeightedScoreUnitBytes() {
        java.lang.Object ref = weightedScoreUnit_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          weightedScoreUnit_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * This is the optional unit of the (normalized and) weighted score when this
       * normalization and weighting set was applied on a LCIA result.
       * </pre>
       *
       * <code>string weighted_score_unit = 7;</code>
       * @param value The weightedScoreUnit to set.
       * @return This builder for chaining.
       */
      public Builder setWeightedScoreUnit(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        weightedScoreUnit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is the optional unit of the (normalized and) weighted score when this
       * normalization and weighting set was applied on a LCIA result.
       * </pre>
       *
       * <code>string weighted_score_unit = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearWeightedScoreUnit() {
        
        weightedScoreUnit_ = getDefaultInstance().getWeightedScoreUnit();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is the optional unit of the (normalized and) weighted score when this
       * normalization and weighting set was applied on a LCIA result.
       * </pre>
       *
       * <code>string weighted_score_unit = 7;</code>
       * @param value The bytes for weightedScoreUnit to set.
       * @return This builder for chaining.
       */
      public Builder setWeightedScoreUnitBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        weightedScoreUnit_ = value;
        onChanged();
        return this;
      }

      private java.util.List<org.openlca.proto.Proto.NwFactor> factors_ =
        java.util.Collections.emptyList();
      private void ensureFactorsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          factors_ = new java.util.ArrayList<org.openlca.proto.Proto.NwFactor>(factors_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.NwFactor, org.openlca.proto.Proto.NwFactor.Builder, org.openlca.proto.Proto.NwFactorOrBuilder> factorsBuilder_;

      /**
       * <pre>
       * The list of normalization and weighting factors of this set.
       * </pre>
       *
       * <code>repeated .protolca.NwFactor factors = 8;</code>
       */
      public java.util.List<org.openlca.proto.Proto.NwFactor> getFactorsList() {
        if (factorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(factors_);
        } else {
          return factorsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The list of normalization and weighting factors of this set.
       * </pre>
       *
       * <code>repeated .protolca.NwFactor factors = 8;</code>
       */
      public int getFactorsCount() {
        if (factorsBuilder_ == null) {
          return factors_.size();
        } else {
          return factorsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The list of normalization and weighting factors of this set.
       * </pre>
       *
       * <code>repeated .protolca.NwFactor factors = 8;</code>
       */
      public org.openlca.proto.Proto.NwFactor getFactors(int index) {
        if (factorsBuilder_ == null) {
          return factors_.get(index);
        } else {
          return factorsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The list of normalization and weighting factors of this set.
       * </pre>
       *
       * <code>repeated .protolca.NwFactor factors = 8;</code>
       */
      public Builder setFactors(
          int index, org.openlca.proto.Proto.NwFactor value) {
        if (factorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFactorsIsMutable();
          factors_.set(index, value);
          onChanged();
        } else {
          factorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The list of normalization and weighting factors of this set.
       * </pre>
       *
       * <code>repeated .protolca.NwFactor factors = 8;</code>
       */
      public Builder setFactors(
          int index, org.openlca.proto.Proto.NwFactor.Builder builderForValue) {
        if (factorsBuilder_ == null) {
          ensureFactorsIsMutable();
          factors_.set(index, builderForValue.build());
          onChanged();
        } else {
          factorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The list of normalization and weighting factors of this set.
       * </pre>
       *
       * <code>repeated .protolca.NwFactor factors = 8;</code>
       */
      public Builder addFactors(org.openlca.proto.Proto.NwFactor value) {
        if (factorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFactorsIsMutable();
          factors_.add(value);
          onChanged();
        } else {
          factorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The list of normalization and weighting factors of this set.
       * </pre>
       *
       * <code>repeated .protolca.NwFactor factors = 8;</code>
       */
      public Builder addFactors(
          int index, org.openlca.proto.Proto.NwFactor value) {
        if (factorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFactorsIsMutable();
          factors_.add(index, value);
          onChanged();
        } else {
          factorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The list of normalization and weighting factors of this set.
       * </pre>
       *
       * <code>repeated .protolca.NwFactor factors = 8;</code>
       */
      public Builder addFactors(
          org.openlca.proto.Proto.NwFactor.Builder builderForValue) {
        if (factorsBuilder_ == null) {
          ensureFactorsIsMutable();
          factors_.add(builderForValue.build());
          onChanged();
        } else {
          factorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The list of normalization and weighting factors of this set.
       * </pre>
       *
       * <code>repeated .protolca.NwFactor factors = 8;</code>
       */
      public Builder addFactors(
          int index, org.openlca.proto.Proto.NwFactor.Builder builderForValue) {
        if (factorsBuilder_ == null) {
          ensureFactorsIsMutable();
          factors_.add(index, builderForValue.build());
          onChanged();
        } else {
          factorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The list of normalization and weighting factors of this set.
       * </pre>
       *
       * <code>repeated .protolca.NwFactor factors = 8;</code>
       */
      public Builder addAllFactors(
          java.lang.Iterable<? extends org.openlca.proto.Proto.NwFactor> values) {
        if (factorsBuilder_ == null) {
          ensureFactorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, factors_);
          onChanged();
        } else {
          factorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The list of normalization and weighting factors of this set.
       * </pre>
       *
       * <code>repeated .protolca.NwFactor factors = 8;</code>
       */
      public Builder clearFactors() {
        if (factorsBuilder_ == null) {
          factors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          factorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The list of normalization and weighting factors of this set.
       * </pre>
       *
       * <code>repeated .protolca.NwFactor factors = 8;</code>
       */
      public Builder removeFactors(int index) {
        if (factorsBuilder_ == null) {
          ensureFactorsIsMutable();
          factors_.remove(index);
          onChanged();
        } else {
          factorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The list of normalization and weighting factors of this set.
       * </pre>
       *
       * <code>repeated .protolca.NwFactor factors = 8;</code>
       */
      public org.openlca.proto.Proto.NwFactor.Builder getFactorsBuilder(
          int index) {
        return getFactorsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The list of normalization and weighting factors of this set.
       * </pre>
       *
       * <code>repeated .protolca.NwFactor factors = 8;</code>
       */
      public org.openlca.proto.Proto.NwFactorOrBuilder getFactorsOrBuilder(
          int index) {
        if (factorsBuilder_ == null) {
          return factors_.get(index);  } else {
          return factorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The list of normalization and weighting factors of this set.
       * </pre>
       *
       * <code>repeated .protolca.NwFactor factors = 8;</code>
       */
      public java.util.List<? extends org.openlca.proto.Proto.NwFactorOrBuilder> 
           getFactorsOrBuilderList() {
        if (factorsBuilder_ != null) {
          return factorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(factors_);
        }
      }
      /**
       * <pre>
       * The list of normalization and weighting factors of this set.
       * </pre>
       *
       * <code>repeated .protolca.NwFactor factors = 8;</code>
       */
      public org.openlca.proto.Proto.NwFactor.Builder addFactorsBuilder() {
        return getFactorsFieldBuilder().addBuilder(
            org.openlca.proto.Proto.NwFactor.getDefaultInstance());
      }
      /**
       * <pre>
       * The list of normalization and weighting factors of this set.
       * </pre>
       *
       * <code>repeated .protolca.NwFactor factors = 8;</code>
       */
      public org.openlca.proto.Proto.NwFactor.Builder addFactorsBuilder(
          int index) {
        return getFactorsFieldBuilder().addBuilder(
            index, org.openlca.proto.Proto.NwFactor.getDefaultInstance());
      }
      /**
       * <pre>
       * The list of normalization and weighting factors of this set.
       * </pre>
       *
       * <code>repeated .protolca.NwFactor factors = 8;</code>
       */
      public java.util.List<org.openlca.proto.Proto.NwFactor.Builder> 
           getFactorsBuilderList() {
        return getFactorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.NwFactor, org.openlca.proto.Proto.NwFactor.Builder, org.openlca.proto.Proto.NwFactorOrBuilder> 
          getFactorsFieldBuilder() {
        if (factorsBuilder_ == null) {
          factorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.proto.Proto.NwFactor, org.openlca.proto.Proto.NwFactor.Builder, org.openlca.proto.Proto.NwFactorOrBuilder>(
                  factors_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          factors_ = null;
        }
        return factorsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.NwSet)
    }

    // @@protoc_insertion_point(class_scope:protolca.NwSet)
    private static final org.openlca.proto.Proto.NwSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.NwSet();
    }

    public static org.openlca.proto.Proto.NwSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NwSet>
        PARSER = new com.google.protobuf.AbstractParser<NwSet>() {
      @java.lang.Override
      public NwSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NwSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NwSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NwSet> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.NwSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ParameterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.Parameter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    boolean hasCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    org.openlca.proto.Proto.Ref getCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder();

    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    java.util.List<java.lang.String>
        getTagsList();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    int getTagsCount();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    java.lang.String getTags(int index);
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);

    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    java.lang.String getLibrary();
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    com.google.protobuf.ByteString
        getLibraryBytes();

    /**
     * <pre>
     * The scope where the parameter is valid.
     * </pre>
     *
     * <code>.protolca.ParameterScope parameter_scope = 10;</code>
     * @return The enum numeric value on the wire for parameterScope.
     */
    int getParameterScopeValue();
    /**
     * <pre>
     * The scope where the parameter is valid.
     * </pre>
     *
     * <code>.protolca.ParameterScope parameter_scope = 10;</code>
     * @return The parameterScope.
     */
    org.openlca.proto.Proto.ParameterScope getParameterScope();

    /**
     * <pre>
     * Indicates whether the parameter is an input parameter (true) or a
     * dependent/calculated parameter (false). A parameter can have a formula if
     * it is not an input parameter.
     * </pre>
     *
     * <code>bool input_parameter = 11;</code>
     * @return The inputParameter.
     */
    boolean getInputParameter();

    /**
     * <pre>
     * The parameter value.
     * </pre>
     *
     * <code>double value = 12;</code>
     * @return The value.
     */
    double getValue();

    /**
     * <pre>
     * A mathematical expression to calculate the parameter value.
     * </pre>
     *
     * <code>string formula = 13;</code>
     * @return The formula.
     */
    java.lang.String getFormula();
    /**
     * <pre>
     * A mathematical expression to calculate the parameter value.
     * </pre>
     *
     * <code>string formula = 13;</code>
     * @return The bytes for formula.
     */
    com.google.protobuf.ByteString
        getFormulaBytes();

    /**
     * <pre>
     * An uncertainty distribution of the parameter value. This is only valid for
     * input parameters.
     * </pre>
     *
     * <code>.protolca.Uncertainty uncertainty = 14;</code>
     * @return Whether the uncertainty field is set.
     */
    boolean hasUncertainty();
    /**
     * <pre>
     * An uncertainty distribution of the parameter value. This is only valid for
     * input parameters.
     * </pre>
     *
     * <code>.protolca.Uncertainty uncertainty = 14;</code>
     * @return The uncertainty.
     */
    org.openlca.proto.Proto.Uncertainty getUncertainty();
    /**
     * <pre>
     * An uncertainty distribution of the parameter value. This is only valid for
     * input parameters.
     * </pre>
     *
     * <code>.protolca.Uncertainty uncertainty = 14;</code>
     */
    org.openlca.proto.Proto.UncertaintyOrBuilder getUncertaintyOrBuilder();
  }
  /**
   * <pre>
   * In openLCA, parameters can be defined in different scopes: global, process,
   * or LCIA method. The parameter name can be used in formulas and, thus, need
   * to conform to a specific syntax. Within a scope the parameter name should be
   * unique (otherwise the evaluation is not deterministic). There are two types
   * of parameters in openLCA: input parameters and dependent parameters. An
   * input parameter can have an optional uncertainty distribution but not a
   * formula. A dependent parameter can (should) have a formula (where also other
   * parameters can be used) but no uncertainty distribution.
   * </pre>
   *
   * Protobuf type {@code protolca.Parameter}
   */
  public static final class Parameter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.Parameter)
      ParameterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Parameter.newBuilder() to construct.
    private Parameter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Parameter() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      library_ = "";
      parameterScope_ = 0;
      formula_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Parameter();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Parameter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (category_ != null) {
                subBuilder = category_.toBuilder();
              }
              category_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(category_);
                category_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tags_.add(s);
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              library_ = s;
              break;
            }
            case 80: {
              int rawValue = input.readEnum();

              parameterScope_ = rawValue;
              break;
            }
            case 88: {

              inputParameter_ = input.readBool();
              break;
            }
            case 97: {

              value_ = input.readDouble();
              break;
            }
            case 106: {
              java.lang.String s = input.readStringRequireUtf8();

              formula_ = s;
              break;
            }
            case 114: {
              org.openlca.proto.Proto.Uncertainty.Builder subBuilder = null;
              if (uncertainty_ != null) {
                subBuilder = uncertainty_.toBuilder();
              }
              uncertainty_ = input.readMessage(org.openlca.proto.Proto.Uncertainty.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(uncertainty_);
                uncertainty_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_Parameter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_Parameter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.Parameter.class, org.openlca.proto.Proto.Parameter.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.Ref category_;
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    @java.lang.Override
    public boolean hasCategory() {
      return category_ != null;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getCategory() {
      return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
      return getCategory();
    }

    public static final int TAGS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    public static final int LIBRARY_FIELD_NUMBER = 9;
    private volatile java.lang.Object library_;
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    @java.lang.Override
    public java.lang.String getLibrary() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        library_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLibraryBytes() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        library_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARAMETER_SCOPE_FIELD_NUMBER = 10;
    private int parameterScope_;
    /**
     * <pre>
     * The scope where the parameter is valid.
     * </pre>
     *
     * <code>.protolca.ParameterScope parameter_scope = 10;</code>
     * @return The enum numeric value on the wire for parameterScope.
     */
    @java.lang.Override public int getParameterScopeValue() {
      return parameterScope_;
    }
    /**
     * <pre>
     * The scope where the parameter is valid.
     * </pre>
     *
     * <code>.protolca.ParameterScope parameter_scope = 10;</code>
     * @return The parameterScope.
     */
    @java.lang.Override public org.openlca.proto.Proto.ParameterScope getParameterScope() {
      @SuppressWarnings("deprecation")
      org.openlca.proto.Proto.ParameterScope result = org.openlca.proto.Proto.ParameterScope.valueOf(parameterScope_);
      return result == null ? org.openlca.proto.Proto.ParameterScope.UNRECOGNIZED : result;
    }

    public static final int INPUT_PARAMETER_FIELD_NUMBER = 11;
    private boolean inputParameter_;
    /**
     * <pre>
     * Indicates whether the parameter is an input parameter (true) or a
     * dependent/calculated parameter (false). A parameter can have a formula if
     * it is not an input parameter.
     * </pre>
     *
     * <code>bool input_parameter = 11;</code>
     * @return The inputParameter.
     */
    @java.lang.Override
    public boolean getInputParameter() {
      return inputParameter_;
    }

    public static final int VALUE_FIELD_NUMBER = 12;
    private double value_;
    /**
     * <pre>
     * The parameter value.
     * </pre>
     *
     * <code>double value = 12;</code>
     * @return The value.
     */
    @java.lang.Override
    public double getValue() {
      return value_;
    }

    public static final int FORMULA_FIELD_NUMBER = 13;
    private volatile java.lang.Object formula_;
    /**
     * <pre>
     * A mathematical expression to calculate the parameter value.
     * </pre>
     *
     * <code>string formula = 13;</code>
     * @return The formula.
     */
    @java.lang.Override
    public java.lang.String getFormula() {
      java.lang.Object ref = formula_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        formula_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A mathematical expression to calculate the parameter value.
     * </pre>
     *
     * <code>string formula = 13;</code>
     * @return The bytes for formula.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFormulaBytes() {
      java.lang.Object ref = formula_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        formula_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UNCERTAINTY_FIELD_NUMBER = 14;
    private org.openlca.proto.Proto.Uncertainty uncertainty_;
    /**
     * <pre>
     * An uncertainty distribution of the parameter value. This is only valid for
     * input parameters.
     * </pre>
     *
     * <code>.protolca.Uncertainty uncertainty = 14;</code>
     * @return Whether the uncertainty field is set.
     */
    @java.lang.Override
    public boolean hasUncertainty() {
      return uncertainty_ != null;
    }
    /**
     * <pre>
     * An uncertainty distribution of the parameter value. This is only valid for
     * input parameters.
     * </pre>
     *
     * <code>.protolca.Uncertainty uncertainty = 14;</code>
     * @return The uncertainty.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Uncertainty getUncertainty() {
      return uncertainty_ == null ? org.openlca.proto.Proto.Uncertainty.getDefaultInstance() : uncertainty_;
    }
    /**
     * <pre>
     * An uncertainty distribution of the parameter value. This is only valid for
     * input parameters.
     * </pre>
     *
     * <code>.protolca.Uncertainty uncertainty = 14;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.UncertaintyOrBuilder getUncertaintyOrBuilder() {
      return getUncertainty();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (category_ != null) {
        output.writeMessage(7, getCategory());
      }
      for (int i = 0; i < tags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, tags_.getRaw(i));
      }
      if (!getLibraryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, library_);
      }
      if (parameterScope_ != org.openlca.proto.Proto.ParameterScope.UNDEFINED_PARAMETER_SCOPE.getNumber()) {
        output.writeEnum(10, parameterScope_);
      }
      if (inputParameter_ != false) {
        output.writeBool(11, inputParameter_);
      }
      if (value_ != 0D) {
        output.writeDouble(12, value_);
      }
      if (!getFormulaBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, formula_);
      }
      if (uncertainty_ != null) {
        output.writeMessage(14, getUncertainty());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (category_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCategory());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += computeStringSizeNoTag(tags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      if (!getLibraryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, library_);
      }
      if (parameterScope_ != org.openlca.proto.Proto.ParameterScope.UNDEFINED_PARAMETER_SCOPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, parameterScope_);
      }
      if (inputParameter_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, inputParameter_);
      }
      if (value_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, value_);
      }
      if (!getFormulaBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, formula_);
      }
      if (uncertainty_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getUncertainty());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.Parameter)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.Parameter other = (org.openlca.proto.Proto.Parameter) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (hasCategory() != other.hasCategory()) return false;
      if (hasCategory()) {
        if (!getCategory()
            .equals(other.getCategory())) return false;
      }
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (!getLibrary()
          .equals(other.getLibrary())) return false;
      if (parameterScope_ != other.parameterScope_) return false;
      if (getInputParameter()
          != other.getInputParameter()) return false;
      if (java.lang.Double.doubleToLongBits(getValue())
          != java.lang.Double.doubleToLongBits(
              other.getValue())) return false;
      if (!getFormula()
          .equals(other.getFormula())) return false;
      if (hasUncertainty() != other.hasUncertainty()) return false;
      if (hasUncertainty()) {
        if (!getUncertainty()
            .equals(other.getUncertainty())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (hasCategory()) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategory().hashCode();
      }
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibrary().hashCode();
      hash = (37 * hash) + PARAMETER_SCOPE_FIELD_NUMBER;
      hash = (53 * hash) + parameterScope_;
      hash = (37 * hash) + INPUT_PARAMETER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getInputParameter());
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getValue()));
      hash = (37 * hash) + FORMULA_FIELD_NUMBER;
      hash = (53 * hash) + getFormula().hashCode();
      if (hasUncertainty()) {
        hash = (37 * hash) + UNCERTAINTY_FIELD_NUMBER;
        hash = (53 * hash) + getUncertainty().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.Parameter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Parameter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Parameter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Parameter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Parameter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Parameter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Parameter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Parameter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Parameter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Parameter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Parameter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Parameter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.Parameter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * In openLCA, parameters can be defined in different scopes: global, process,
     * or LCIA method. The parameter name can be used in formulas and, thus, need
     * to conform to a specific syntax. Within a scope the parameter name should be
     * unique (otherwise the evaluation is not deterministic). There are two types
     * of parameters in openLCA: input parameters and dependent parameters. An
     * input parameter can have an optional uncertainty distribution but not a
     * formula. A dependent parameter can (should) have a formula (where also other
     * parameters can be used) but no uncertainty distribution.
     * </pre>
     *
     * Protobuf type {@code protolca.Parameter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.Parameter)
        org.openlca.proto.Proto.ParameterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_Parameter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_Parameter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.Parameter.class, org.openlca.proto.Proto.Parameter.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.Parameter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        if (categoryBuilder_ == null) {
          category_ = null;
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        library_ = "";

        parameterScope_ = 0;

        inputParameter_ = false;

        value_ = 0D;

        formula_ = "";

        if (uncertaintyBuilder_ == null) {
          uncertainty_ = null;
        } else {
          uncertainty_ = null;
          uncertaintyBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_Parameter_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Parameter getDefaultInstanceForType() {
        return org.openlca.proto.Proto.Parameter.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Parameter build() {
        org.openlca.proto.Proto.Parameter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Parameter buildPartial() {
        org.openlca.proto.Proto.Parameter result = new org.openlca.proto.Proto.Parameter(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (categoryBuilder_ == null) {
          result.category_ = category_;
        } else {
          result.category_ = categoryBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tags_ = tags_;
        result.library_ = library_;
        result.parameterScope_ = parameterScope_;
        result.inputParameter_ = inputParameter_;
        result.value_ = value_;
        result.formula_ = formula_;
        if (uncertaintyBuilder_ == null) {
          result.uncertainty_ = uncertainty_;
        } else {
          result.uncertainty_ = uncertaintyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.Parameter) {
          return mergeFrom((org.openlca.proto.Proto.Parameter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.Parameter other) {
        if (other == org.openlca.proto.Proto.Parameter.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.hasCategory()) {
          mergeCategory(other.getCategory());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        if (!other.getLibrary().isEmpty()) {
          library_ = other.library_;
          onChanged();
        }
        if (other.parameterScope_ != 0) {
          setParameterScopeValue(other.getParameterScopeValue());
        }
        if (other.getInputParameter() != false) {
          setInputParameter(other.getInputParameter());
        }
        if (other.getValue() != 0D) {
          setValue(other.getValue());
        }
        if (!other.getFormula().isEmpty()) {
          formula_ = other.formula_;
          onChanged();
        }
        if (other.hasUncertainty()) {
          mergeUncertainty(other.getUncertainty());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.Parameter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.Parameter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref category_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> categoryBuilder_;
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return Whether the category field is set.
       */
      public boolean hasCategory() {
        return categoryBuilder_ != null || category_ != null;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return The category.
       */
      public org.openlca.proto.Proto.Ref getCategory() {
        if (categoryBuilder_ == null) {
          return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        } else {
          return categoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          category_ = value;
          onChanged();
        } else {
          categoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          category_ = builderForValue.build();
          onChanged();
        } else {
          categoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder mergeCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (category_ != null) {
            category_ =
              org.openlca.proto.Proto.Ref.newBuilder(category_).mergeFrom(value).buildPartial();
          } else {
            category_ = value;
          }
          onChanged();
        } else {
          categoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder clearCategory() {
        if (categoryBuilder_ == null) {
          category_ = null;
          onChanged();
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getCategoryBuilder() {
        
        onChanged();
        return getCategoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
        if (categoryBuilder_ != null) {
          return categoryBuilder_.getMessageOrBuilder();
        } else {
          return category_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getCategoryFieldBuilder() {
        if (categoryBuilder_ == null) {
          categoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getCategory(),
                  getParentForChildren(),
                  isClean());
          category_ = null;
        }
        return categoryBuilder_;
      }

      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return A list containing the tags.
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return The count of tags.
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the element to return.
       * @return The tags at the given index.
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tags at the given index.
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index to set the value at.
       * @param value The tags to set.
       * @return This builder for chaining.
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The tags to add.
       * @return This builder for chaining.
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param values The tags to add.
       * @return This builder for chaining.
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The bytes of the tags to add.
       * @return This builder for chaining.
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object library_ = "";
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The library.
       */
      public java.lang.String getLibrary() {
        java.lang.Object ref = library_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          library_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The bytes for library.
       */
      public com.google.protobuf.ByteString
          getLibraryBytes() {
        java.lang.Object ref = library_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          library_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The library to set.
       * @return This builder for chaining.
       */
      public Builder setLibrary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        library_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLibrary() {
        
        library_ = getDefaultInstance().getLibrary();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The bytes for library to set.
       * @return This builder for chaining.
       */
      public Builder setLibraryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        library_ = value;
        onChanged();
        return this;
      }

      private int parameterScope_ = 0;
      /**
       * <pre>
       * The scope where the parameter is valid.
       * </pre>
       *
       * <code>.protolca.ParameterScope parameter_scope = 10;</code>
       * @return The enum numeric value on the wire for parameterScope.
       */
      @java.lang.Override public int getParameterScopeValue() {
        return parameterScope_;
      }
      /**
       * <pre>
       * The scope where the parameter is valid.
       * </pre>
       *
       * <code>.protolca.ParameterScope parameter_scope = 10;</code>
       * @param value The enum numeric value on the wire for parameterScope to set.
       * @return This builder for chaining.
       */
      public Builder setParameterScopeValue(int value) {
        
        parameterScope_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The scope where the parameter is valid.
       * </pre>
       *
       * <code>.protolca.ParameterScope parameter_scope = 10;</code>
       * @return The parameterScope.
       */
      @java.lang.Override
      public org.openlca.proto.Proto.ParameterScope getParameterScope() {
        @SuppressWarnings("deprecation")
        org.openlca.proto.Proto.ParameterScope result = org.openlca.proto.Proto.ParameterScope.valueOf(parameterScope_);
        return result == null ? org.openlca.proto.Proto.ParameterScope.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The scope where the parameter is valid.
       * </pre>
       *
       * <code>.protolca.ParameterScope parameter_scope = 10;</code>
       * @param value The parameterScope to set.
       * @return This builder for chaining.
       */
      public Builder setParameterScope(org.openlca.proto.Proto.ParameterScope value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        parameterScope_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The scope where the parameter is valid.
       * </pre>
       *
       * <code>.protolca.ParameterScope parameter_scope = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearParameterScope() {
        
        parameterScope_ = 0;
        onChanged();
        return this;
      }

      private boolean inputParameter_ ;
      /**
       * <pre>
       * Indicates whether the parameter is an input parameter (true) or a
       * dependent/calculated parameter (false). A parameter can have a formula if
       * it is not an input parameter.
       * </pre>
       *
       * <code>bool input_parameter = 11;</code>
       * @return The inputParameter.
       */
      @java.lang.Override
      public boolean getInputParameter() {
        return inputParameter_;
      }
      /**
       * <pre>
       * Indicates whether the parameter is an input parameter (true) or a
       * dependent/calculated parameter (false). A parameter can have a formula if
       * it is not an input parameter.
       * </pre>
       *
       * <code>bool input_parameter = 11;</code>
       * @param value The inputParameter to set.
       * @return This builder for chaining.
       */
      public Builder setInputParameter(boolean value) {
        
        inputParameter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates whether the parameter is an input parameter (true) or a
       * dependent/calculated parameter (false). A parameter can have a formula if
       * it is not an input parameter.
       * </pre>
       *
       * <code>bool input_parameter = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearInputParameter() {
        
        inputParameter_ = false;
        onChanged();
        return this;
      }

      private double value_ ;
      /**
       * <pre>
       * The parameter value.
       * </pre>
       *
       * <code>double value = 12;</code>
       * @return The value.
       */
      @java.lang.Override
      public double getValue() {
        return value_;
      }
      /**
       * <pre>
       * The parameter value.
       * </pre>
       *
       * <code>double value = 12;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(double value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The parameter value.
       * </pre>
       *
       * <code>double value = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object formula_ = "";
      /**
       * <pre>
       * A mathematical expression to calculate the parameter value.
       * </pre>
       *
       * <code>string formula = 13;</code>
       * @return The formula.
       */
      public java.lang.String getFormula() {
        java.lang.Object ref = formula_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          formula_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A mathematical expression to calculate the parameter value.
       * </pre>
       *
       * <code>string formula = 13;</code>
       * @return The bytes for formula.
       */
      public com.google.protobuf.ByteString
          getFormulaBytes() {
        java.lang.Object ref = formula_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          formula_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A mathematical expression to calculate the parameter value.
       * </pre>
       *
       * <code>string formula = 13;</code>
       * @param value The formula to set.
       * @return This builder for chaining.
       */
      public Builder setFormula(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        formula_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A mathematical expression to calculate the parameter value.
       * </pre>
       *
       * <code>string formula = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearFormula() {
        
        formula_ = getDefaultInstance().getFormula();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A mathematical expression to calculate the parameter value.
       * </pre>
       *
       * <code>string formula = 13;</code>
       * @param value The bytes for formula to set.
       * @return This builder for chaining.
       */
      public Builder setFormulaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        formula_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Uncertainty uncertainty_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Uncertainty, org.openlca.proto.Proto.Uncertainty.Builder, org.openlca.proto.Proto.UncertaintyOrBuilder> uncertaintyBuilder_;
      /**
       * <pre>
       * An uncertainty distribution of the parameter value. This is only valid for
       * input parameters.
       * </pre>
       *
       * <code>.protolca.Uncertainty uncertainty = 14;</code>
       * @return Whether the uncertainty field is set.
       */
      public boolean hasUncertainty() {
        return uncertaintyBuilder_ != null || uncertainty_ != null;
      }
      /**
       * <pre>
       * An uncertainty distribution of the parameter value. This is only valid for
       * input parameters.
       * </pre>
       *
       * <code>.protolca.Uncertainty uncertainty = 14;</code>
       * @return The uncertainty.
       */
      public org.openlca.proto.Proto.Uncertainty getUncertainty() {
        if (uncertaintyBuilder_ == null) {
          return uncertainty_ == null ? org.openlca.proto.Proto.Uncertainty.getDefaultInstance() : uncertainty_;
        } else {
          return uncertaintyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * An uncertainty distribution of the parameter value. This is only valid for
       * input parameters.
       * </pre>
       *
       * <code>.protolca.Uncertainty uncertainty = 14;</code>
       */
      public Builder setUncertainty(org.openlca.proto.Proto.Uncertainty value) {
        if (uncertaintyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          uncertainty_ = value;
          onChanged();
        } else {
          uncertaintyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * An uncertainty distribution of the parameter value. This is only valid for
       * input parameters.
       * </pre>
       *
       * <code>.protolca.Uncertainty uncertainty = 14;</code>
       */
      public Builder setUncertainty(
          org.openlca.proto.Proto.Uncertainty.Builder builderForValue) {
        if (uncertaintyBuilder_ == null) {
          uncertainty_ = builderForValue.build();
          onChanged();
        } else {
          uncertaintyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * An uncertainty distribution of the parameter value. This is only valid for
       * input parameters.
       * </pre>
       *
       * <code>.protolca.Uncertainty uncertainty = 14;</code>
       */
      public Builder mergeUncertainty(org.openlca.proto.Proto.Uncertainty value) {
        if (uncertaintyBuilder_ == null) {
          if (uncertainty_ != null) {
            uncertainty_ =
              org.openlca.proto.Proto.Uncertainty.newBuilder(uncertainty_).mergeFrom(value).buildPartial();
          } else {
            uncertainty_ = value;
          }
          onChanged();
        } else {
          uncertaintyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * An uncertainty distribution of the parameter value. This is only valid for
       * input parameters.
       * </pre>
       *
       * <code>.protolca.Uncertainty uncertainty = 14;</code>
       */
      public Builder clearUncertainty() {
        if (uncertaintyBuilder_ == null) {
          uncertainty_ = null;
          onChanged();
        } else {
          uncertainty_ = null;
          uncertaintyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * An uncertainty distribution of the parameter value. This is only valid for
       * input parameters.
       * </pre>
       *
       * <code>.protolca.Uncertainty uncertainty = 14;</code>
       */
      public org.openlca.proto.Proto.Uncertainty.Builder getUncertaintyBuilder() {
        
        onChanged();
        return getUncertaintyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * An uncertainty distribution of the parameter value. This is only valid for
       * input parameters.
       * </pre>
       *
       * <code>.protolca.Uncertainty uncertainty = 14;</code>
       */
      public org.openlca.proto.Proto.UncertaintyOrBuilder getUncertaintyOrBuilder() {
        if (uncertaintyBuilder_ != null) {
          return uncertaintyBuilder_.getMessageOrBuilder();
        } else {
          return uncertainty_ == null ?
              org.openlca.proto.Proto.Uncertainty.getDefaultInstance() : uncertainty_;
        }
      }
      /**
       * <pre>
       * An uncertainty distribution of the parameter value. This is only valid for
       * input parameters.
       * </pre>
       *
       * <code>.protolca.Uncertainty uncertainty = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Uncertainty, org.openlca.proto.Proto.Uncertainty.Builder, org.openlca.proto.Proto.UncertaintyOrBuilder> 
          getUncertaintyFieldBuilder() {
        if (uncertaintyBuilder_ == null) {
          uncertaintyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Uncertainty, org.openlca.proto.Proto.Uncertainty.Builder, org.openlca.proto.Proto.UncertaintyOrBuilder>(
                  getUncertainty(),
                  getParentForChildren(),
                  isClean());
          uncertainty_ = null;
        }
        return uncertaintyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.Parameter)
    }

    // @@protoc_insertion_point(class_scope:protolca.Parameter)
    private static final org.openlca.proto.Proto.Parameter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.Parameter();
    }

    public static org.openlca.proto.Proto.Parameter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameter>
        PARSER = new com.google.protobuf.AbstractParser<Parameter>() {
      @java.lang.Override
      public Parameter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Parameter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Parameter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameter> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.Parameter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ParameterRedefOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.ParameterRedef)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The parameter name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The parameter name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The (new) value of the parameter.
     * </pre>
     *
     * <code>double value = 3;</code>
     * @return The value.
     */
    double getValue();

    /**
     * <pre>
     * The context of the paramater (a process or LCIA method). If no context is
     * provided it is assumed that this is a redefinition of a global parameter.
     * </pre>
     *
     * <code>.protolca.Ref context = 4;</code>
     * @return Whether the context field is set.
     */
    boolean hasContext();
    /**
     * <pre>
     * The context of the paramater (a process or LCIA method). If no context is
     * provided it is assumed that this is a redefinition of a global parameter.
     * </pre>
     *
     * <code>.protolca.Ref context = 4;</code>
     * @return The context.
     */
    org.openlca.proto.Proto.Ref getContext();
    /**
     * <pre>
     * The context of the paramater (a process or LCIA method). If no context is
     * provided it is assumed that this is a redefinition of a global parameter.
     * </pre>
     *
     * <code>.protolca.Ref context = 4;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getContextOrBuilder();
  }
  /**
   * <pre>
   * A redefinition of a parameter in a product system.
   * </pre>
   *
   * Protobuf type {@code protolca.ParameterRedef}
   */
  public static final class ParameterRedef extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.ParameterRedef)
      ParameterRedefOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ParameterRedef.newBuilder() to construct.
    private ParameterRedef(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ParameterRedef() {
      type_ = "";
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ParameterRedef();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ParameterRedef(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 25: {

              value_ = input.readDouble();
              break;
            }
            case 34: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (context_ != null) {
                subBuilder = context_.toBuilder();
              }
              context_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(context_);
                context_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_ParameterRedef_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_ParameterRedef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.ParameterRedef.class, org.openlca.proto.Proto.ParameterRedef.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The parameter name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The parameter name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private double value_;
    /**
     * <pre>
     * The (new) value of the parameter.
     * </pre>
     *
     * <code>double value = 3;</code>
     * @return The value.
     */
    @java.lang.Override
    public double getValue() {
      return value_;
    }

    public static final int CONTEXT_FIELD_NUMBER = 4;
    private org.openlca.proto.Proto.Ref context_;
    /**
     * <pre>
     * The context of the paramater (a process or LCIA method). If no context is
     * provided it is assumed that this is a redefinition of a global parameter.
     * </pre>
     *
     * <code>.protolca.Ref context = 4;</code>
     * @return Whether the context field is set.
     */
    @java.lang.Override
    public boolean hasContext() {
      return context_ != null;
    }
    /**
     * <pre>
     * The context of the paramater (a process or LCIA method). If no context is
     * provided it is assumed that this is a redefinition of a global parameter.
     * </pre>
     *
     * <code>.protolca.Ref context = 4;</code>
     * @return The context.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getContext() {
      return context_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : context_;
    }
    /**
     * <pre>
     * The context of the paramater (a process or LCIA method). If no context is
     * provided it is assumed that this is a redefinition of a global parameter.
     * </pre>
     *
     * <code>.protolca.Ref context = 4;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getContextOrBuilder() {
      return getContext();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (value_ != 0D) {
        output.writeDouble(3, value_);
      }
      if (context_ != null) {
        output.writeMessage(4, getContext());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (value_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, value_);
      }
      if (context_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getContext());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.ParameterRedef)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.ParameterRedef other = (org.openlca.proto.Proto.ParameterRedef) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (java.lang.Double.doubleToLongBits(getValue())
          != java.lang.Double.doubleToLongBits(
              other.getValue())) return false;
      if (hasContext() != other.hasContext()) return false;
      if (hasContext()) {
        if (!getContext()
            .equals(other.getContext())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getValue()));
      if (hasContext()) {
        hash = (37 * hash) + CONTEXT_FIELD_NUMBER;
        hash = (53 * hash) + getContext().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.ParameterRedef parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ParameterRedef parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ParameterRedef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ParameterRedef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ParameterRedef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ParameterRedef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ParameterRedef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ParameterRedef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ParameterRedef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ParameterRedef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ParameterRedef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ParameterRedef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.ParameterRedef prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A redefinition of a parameter in a product system.
     * </pre>
     *
     * Protobuf type {@code protolca.ParameterRedef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.ParameterRedef)
        org.openlca.proto.Proto.ParameterRedefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_ParameterRedef_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_ParameterRedef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.ParameterRedef.class, org.openlca.proto.Proto.ParameterRedef.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.ParameterRedef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        name_ = "";

        value_ = 0D;

        if (contextBuilder_ == null) {
          context_ = null;
        } else {
          context_ = null;
          contextBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_ParameterRedef_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ParameterRedef getDefaultInstanceForType() {
        return org.openlca.proto.Proto.ParameterRedef.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ParameterRedef build() {
        org.openlca.proto.Proto.ParameterRedef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ParameterRedef buildPartial() {
        org.openlca.proto.Proto.ParameterRedef result = new org.openlca.proto.Proto.ParameterRedef(this);
        result.type_ = type_;
        result.name_ = name_;
        result.value_ = value_;
        if (contextBuilder_ == null) {
          result.context_ = context_;
        } else {
          result.context_ = contextBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.ParameterRedef) {
          return mergeFrom((org.openlca.proto.Proto.ParameterRedef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.ParameterRedef other) {
        if (other == org.openlca.proto.Proto.ParameterRedef.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getValue() != 0D) {
          setValue(other.getValue());
        }
        if (other.hasContext()) {
          mergeContext(other.getContext());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.ParameterRedef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.ParameterRedef) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The parameter name.
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The parameter name.
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The parameter name.
       * </pre>
       *
       * <code>string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The parameter name.
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The parameter name.
       * </pre>
       *
       * <code>string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private double value_ ;
      /**
       * <pre>
       * The (new) value of the parameter.
       * </pre>
       *
       * <code>double value = 3;</code>
       * @return The value.
       */
      @java.lang.Override
      public double getValue() {
        return value_;
      }
      /**
       * <pre>
       * The (new) value of the parameter.
       * </pre>
       *
       * <code>double value = 3;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(double value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The (new) value of the parameter.
       * </pre>
       *
       * <code>double value = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = 0D;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref context_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> contextBuilder_;
      /**
       * <pre>
       * The context of the paramater (a process or LCIA method). If no context is
       * provided it is assumed that this is a redefinition of a global parameter.
       * </pre>
       *
       * <code>.protolca.Ref context = 4;</code>
       * @return Whether the context field is set.
       */
      public boolean hasContext() {
        return contextBuilder_ != null || context_ != null;
      }
      /**
       * <pre>
       * The context of the paramater (a process or LCIA method). If no context is
       * provided it is assumed that this is a redefinition of a global parameter.
       * </pre>
       *
       * <code>.protolca.Ref context = 4;</code>
       * @return The context.
       */
      public org.openlca.proto.Proto.Ref getContext() {
        if (contextBuilder_ == null) {
          return context_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : context_;
        } else {
          return contextBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The context of the paramater (a process or LCIA method). If no context is
       * provided it is assumed that this is a redefinition of a global parameter.
       * </pre>
       *
       * <code>.protolca.Ref context = 4;</code>
       */
      public Builder setContext(org.openlca.proto.Proto.Ref value) {
        if (contextBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          context_ = value;
          onChanged();
        } else {
          contextBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The context of the paramater (a process or LCIA method). If no context is
       * provided it is assumed that this is a redefinition of a global parameter.
       * </pre>
       *
       * <code>.protolca.Ref context = 4;</code>
       */
      public Builder setContext(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (contextBuilder_ == null) {
          context_ = builderForValue.build();
          onChanged();
        } else {
          contextBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The context of the paramater (a process or LCIA method). If no context is
       * provided it is assumed that this is a redefinition of a global parameter.
       * </pre>
       *
       * <code>.protolca.Ref context = 4;</code>
       */
      public Builder mergeContext(org.openlca.proto.Proto.Ref value) {
        if (contextBuilder_ == null) {
          if (context_ != null) {
            context_ =
              org.openlca.proto.Proto.Ref.newBuilder(context_).mergeFrom(value).buildPartial();
          } else {
            context_ = value;
          }
          onChanged();
        } else {
          contextBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The context of the paramater (a process or LCIA method). If no context is
       * provided it is assumed that this is a redefinition of a global parameter.
       * </pre>
       *
       * <code>.protolca.Ref context = 4;</code>
       */
      public Builder clearContext() {
        if (contextBuilder_ == null) {
          context_ = null;
          onChanged();
        } else {
          context_ = null;
          contextBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The context of the paramater (a process or LCIA method). If no context is
       * provided it is assumed that this is a redefinition of a global parameter.
       * </pre>
       *
       * <code>.protolca.Ref context = 4;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getContextBuilder() {
        
        onChanged();
        return getContextFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The context of the paramater (a process or LCIA method). If no context is
       * provided it is assumed that this is a redefinition of a global parameter.
       * </pre>
       *
       * <code>.protolca.Ref context = 4;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getContextOrBuilder() {
        if (contextBuilder_ != null) {
          return contextBuilder_.getMessageOrBuilder();
        } else {
          return context_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : context_;
        }
      }
      /**
       * <pre>
       * The context of the paramater (a process or LCIA method). If no context is
       * provided it is assumed that this is a redefinition of a global parameter.
       * </pre>
       *
       * <code>.protolca.Ref context = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getContextFieldBuilder() {
        if (contextBuilder_ == null) {
          contextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getContext(),
                  getParentForChildren(),
                  isClean());
          context_ = null;
        }
        return contextBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.ParameterRedef)
    }

    // @@protoc_insertion_point(class_scope:protolca.ParameterRedef)
    private static final org.openlca.proto.Proto.ParameterRedef DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.ParameterRedef();
    }

    public static org.openlca.proto.Proto.ParameterRedef getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ParameterRedef>
        PARSER = new com.google.protobuf.AbstractParser<ParameterRedef>() {
      @java.lang.Override
      public ParameterRedef parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ParameterRedef(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ParameterRedef> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ParameterRedef> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.ParameterRedef getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProcessOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.Process)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    boolean hasCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    org.openlca.proto.Proto.Ref getCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder();

    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    java.util.List<java.lang.String>
        getTagsList();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    int getTagsCount();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    java.lang.String getTags(int index);
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);

    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    java.lang.String getLibrary();
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    com.google.protobuf.ByteString
        getLibraryBytes();

    /**
     * <code>.protolca.AllocationType default_allocation_method = 10;</code>
     * @return The enum numeric value on the wire for defaultAllocationMethod.
     */
    int getDefaultAllocationMethodValue();
    /**
     * <code>.protolca.AllocationType default_allocation_method = 10;</code>
     * @return The defaultAllocationMethod.
     */
    org.openlca.proto.Proto.AllocationType getDefaultAllocationMethod();

    /**
     * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
     */
    java.util.List<org.openlca.proto.Proto.AllocationFactor> 
        getAllocationFactorsList();
    /**
     * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
     */
    org.openlca.proto.Proto.AllocationFactor getAllocationFactors(int index);
    /**
     * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
     */
    int getAllocationFactorsCount();
    /**
     * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
     */
    java.util.List<? extends org.openlca.proto.Proto.AllocationFactorOrBuilder> 
        getAllocationFactorsOrBuilderList();
    /**
     * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
     */
    org.openlca.proto.Proto.AllocationFactorOrBuilder getAllocationFactorsOrBuilder(
        int index);

    /**
     * <pre>
     * The inputs and outputs of the process.
     * </pre>
     *
     * <code>repeated .protolca.Exchange exchanges = 12;</code>
     */
    java.util.List<org.openlca.proto.Proto.Exchange> 
        getExchangesList();
    /**
     * <pre>
     * The inputs and outputs of the process.
     * </pre>
     *
     * <code>repeated .protolca.Exchange exchanges = 12;</code>
     */
    org.openlca.proto.Proto.Exchange getExchanges(int index);
    /**
     * <pre>
     * The inputs and outputs of the process.
     * </pre>
     *
     * <code>repeated .protolca.Exchange exchanges = 12;</code>
     */
    int getExchangesCount();
    /**
     * <pre>
     * The inputs and outputs of the process.
     * </pre>
     *
     * <code>repeated .protolca.Exchange exchanges = 12;</code>
     */
    java.util.List<? extends org.openlca.proto.Proto.ExchangeOrBuilder> 
        getExchangesOrBuilderList();
    /**
     * <pre>
     * The inputs and outputs of the process.
     * </pre>
     *
     * <code>repeated .protolca.Exchange exchanges = 12;</code>
     */
    org.openlca.proto.Proto.ExchangeOrBuilder getExchangesOrBuilder(
        int index);

    /**
     * <code>.protolca.Location location = 13;</code>
     * @return Whether the location field is set.
     */
    boolean hasLocation();
    /**
     * <code>.protolca.Location location = 13;</code>
     * @return The location.
     */
    org.openlca.proto.Proto.Location getLocation();
    /**
     * <code>.protolca.Location location = 13;</code>
     */
    org.openlca.proto.Proto.LocationOrBuilder getLocationOrBuilder();

    /**
     * <code>repeated .protolca.Parameter parameters = 14;</code>
     */
    java.util.List<org.openlca.proto.Proto.Parameter> 
        getParametersList();
    /**
     * <code>repeated .protolca.Parameter parameters = 14;</code>
     */
    org.openlca.proto.Proto.Parameter getParameters(int index);
    /**
     * <code>repeated .protolca.Parameter parameters = 14;</code>
     */
    int getParametersCount();
    /**
     * <code>repeated .protolca.Parameter parameters = 14;</code>
     */
    java.util.List<? extends org.openlca.proto.Proto.ParameterOrBuilder> 
        getParametersOrBuilderList();
    /**
     * <code>repeated .protolca.Parameter parameters = 14;</code>
     */
    org.openlca.proto.Proto.ParameterOrBuilder getParametersOrBuilder(
        int index);

    /**
     * <code>.protolca.ProcessDocumentation process_documentation = 15;</code>
     * @return Whether the processDocumentation field is set.
     */
    boolean hasProcessDocumentation();
    /**
     * <code>.protolca.ProcessDocumentation process_documentation = 15;</code>
     * @return The processDocumentation.
     */
    org.openlca.proto.Proto.ProcessDocumentation getProcessDocumentation();
    /**
     * <code>.protolca.ProcessDocumentation process_documentation = 15;</code>
     */
    org.openlca.proto.Proto.ProcessDocumentationOrBuilder getProcessDocumentationOrBuilder();

    /**
     * <code>.protolca.ProcessType process_type = 16;</code>
     * @return The enum numeric value on the wire for processType.
     */
    int getProcessTypeValue();
    /**
     * <code>.protolca.ProcessType process_type = 16;</code>
     * @return The processType.
     */
    org.openlca.proto.Proto.ProcessType getProcessType();

    /**
     * <pre>
     * A reference to a data quality system ([DqSystem]) with which the overall
     * quality of the process can be assessed.
     * </pre>
     *
     * <code>.protolca.Ref dq_system = 17;</code>
     * @return Whether the dqSystem field is set.
     */
    boolean hasDqSystem();
    /**
     * <pre>
     * A reference to a data quality system ([DqSystem]) with which the overall
     * quality of the process can be assessed.
     * </pre>
     *
     * <code>.protolca.Ref dq_system = 17;</code>
     * @return The dqSystem.
     */
    org.openlca.proto.Proto.Ref getDqSystem();
    /**
     * <pre>
     * A reference to a data quality system ([DqSystem]) with which the overall
     * quality of the process can be assessed.
     * </pre>
     *
     * <code>.protolca.Ref dq_system = 17;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getDqSystemOrBuilder();

    /**
     * <pre>
     * A reference to a data quality system ([DqSystem]) with which the quality
     * of individual inputs and outputs ([Exchange]s) of the process can be
     * assessed.
     * </pre>
     *
     * <code>.protolca.Ref exchange_dq_system = 18;</code>
     * @return Whether the exchangeDqSystem field is set.
     */
    boolean hasExchangeDqSystem();
    /**
     * <pre>
     * A reference to a data quality system ([DqSystem]) with which the quality
     * of individual inputs and outputs ([Exchange]s) of the process can be
     * assessed.
     * </pre>
     *
     * <code>.protolca.Ref exchange_dq_system = 18;</code>
     * @return The exchangeDqSystem.
     */
    org.openlca.proto.Proto.Ref getExchangeDqSystem();
    /**
     * <pre>
     * A reference to a data quality system ([DqSystem]) with which the quality
     * of individual inputs and outputs ([Exchange]s) of the process can be
     * assessed.
     * </pre>
     *
     * <code>.protolca.Ref exchange_dq_system = 18;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getExchangeDqSystemOrBuilder();

    /**
     * <pre>
     * A reference to a data quality system ([DqSystem]) with which the quality
     * of individual social aspects of the process can be assessed.
     * </pre>
     *
     * <code>.protolca.Ref social_dq_system = 19;</code>
     * @return Whether the socialDqSystem field is set.
     */
    boolean hasSocialDqSystem();
    /**
     * <pre>
     * A reference to a data quality system ([DqSystem]) with which the quality
     * of individual social aspects of the process can be assessed.
     * </pre>
     *
     * <code>.protolca.Ref social_dq_system = 19;</code>
     * @return The socialDqSystem.
     */
    org.openlca.proto.Proto.Ref getSocialDqSystem();
    /**
     * <pre>
     * A reference to a data quality system ([DqSystem]) with which the quality
     * of individual social aspects of the process can be assessed.
     * </pre>
     *
     * <code>.protolca.Ref social_dq_system = 19;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getSocialDqSystemOrBuilder();

    /**
     * <pre>
     * A data quality entry like `(1;3;2;5;1)`. The entry is a vector of data
     * quality values that need to match the overall data quality system of the
     * process (the system that is stored in the `dqSystem` property). In such a
     * system the data quality indicators have fixed positions and the respective
     * values in the `dqEntry` vector map to these positions.
     * </pre>
     *
     * <code>string dq_entry = 20;</code>
     * @return The dqEntry.
     */
    java.lang.String getDqEntry();
    /**
     * <pre>
     * A data quality entry like `(1;3;2;5;1)`. The entry is a vector of data
     * quality values that need to match the overall data quality system of the
     * process (the system that is stored in the `dqSystem` property). In such a
     * system the data quality indicators have fixed positions and the respective
     * values in the `dqEntry` vector map to these positions.
     * </pre>
     *
     * <code>string dq_entry = 20;</code>
     * @return The bytes for dqEntry.
     */
    com.google.protobuf.ByteString
        getDqEntryBytes();
  }
  /**
   * Protobuf type {@code protolca.Process}
   */
  public static final class Process extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.Process)
      ProcessOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Process.newBuilder() to construct.
    private Process(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Process() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      library_ = "";
      defaultAllocationMethod_ = 0;
      allocationFactors_ = java.util.Collections.emptyList();
      exchanges_ = java.util.Collections.emptyList();
      parameters_ = java.util.Collections.emptyList();
      processType_ = 0;
      dqEntry_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Process();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Process(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (category_ != null) {
                subBuilder = category_.toBuilder();
              }
              category_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(category_);
                category_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tags_.add(s);
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              library_ = s;
              break;
            }
            case 80: {
              int rawValue = input.readEnum();

              defaultAllocationMethod_ = rawValue;
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                allocationFactors_ = new java.util.ArrayList<org.openlca.proto.Proto.AllocationFactor>();
                mutable_bitField0_ |= 0x00000002;
              }
              allocationFactors_.add(
                  input.readMessage(org.openlca.proto.Proto.AllocationFactor.parser(), extensionRegistry));
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                exchanges_ = new java.util.ArrayList<org.openlca.proto.Proto.Exchange>();
                mutable_bitField0_ |= 0x00000004;
              }
              exchanges_.add(
                  input.readMessage(org.openlca.proto.Proto.Exchange.parser(), extensionRegistry));
              break;
            }
            case 106: {
              org.openlca.proto.Proto.Location.Builder subBuilder = null;
              if (location_ != null) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(org.openlca.proto.Proto.Location.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }

              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                parameters_ = new java.util.ArrayList<org.openlca.proto.Proto.Parameter>();
                mutable_bitField0_ |= 0x00000008;
              }
              parameters_.add(
                  input.readMessage(org.openlca.proto.Proto.Parameter.parser(), extensionRegistry));
              break;
            }
            case 122: {
              org.openlca.proto.Proto.ProcessDocumentation.Builder subBuilder = null;
              if (processDocumentation_ != null) {
                subBuilder = processDocumentation_.toBuilder();
              }
              processDocumentation_ = input.readMessage(org.openlca.proto.Proto.ProcessDocumentation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(processDocumentation_);
                processDocumentation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 128: {
              int rawValue = input.readEnum();

              processType_ = rawValue;
              break;
            }
            case 138: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (dqSystem_ != null) {
                subBuilder = dqSystem_.toBuilder();
              }
              dqSystem_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dqSystem_);
                dqSystem_ = subBuilder.buildPartial();
              }

              break;
            }
            case 146: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (exchangeDqSystem_ != null) {
                subBuilder = exchangeDqSystem_.toBuilder();
              }
              exchangeDqSystem_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(exchangeDqSystem_);
                exchangeDqSystem_ = subBuilder.buildPartial();
              }

              break;
            }
            case 154: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (socialDqSystem_ != null) {
                subBuilder = socialDqSystem_.toBuilder();
              }
              socialDqSystem_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(socialDqSystem_);
                socialDqSystem_ = subBuilder.buildPartial();
              }

              break;
            }
            case 162: {
              java.lang.String s = input.readStringRequireUtf8();

              dqEntry_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          allocationFactors_ = java.util.Collections.unmodifiableList(allocationFactors_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          exchanges_ = java.util.Collections.unmodifiableList(exchanges_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          parameters_ = java.util.Collections.unmodifiableList(parameters_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_Process_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_Process_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.Process.class, org.openlca.proto.Proto.Process.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.Ref category_;
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    @java.lang.Override
    public boolean hasCategory() {
      return category_ != null;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getCategory() {
      return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
      return getCategory();
    }

    public static final int TAGS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    public static final int LIBRARY_FIELD_NUMBER = 9;
    private volatile java.lang.Object library_;
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    @java.lang.Override
    public java.lang.String getLibrary() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        library_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLibraryBytes() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        library_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEFAULT_ALLOCATION_METHOD_FIELD_NUMBER = 10;
    private int defaultAllocationMethod_;
    /**
     * <code>.protolca.AllocationType default_allocation_method = 10;</code>
     * @return The enum numeric value on the wire for defaultAllocationMethod.
     */
    @java.lang.Override public int getDefaultAllocationMethodValue() {
      return defaultAllocationMethod_;
    }
    /**
     * <code>.protolca.AllocationType default_allocation_method = 10;</code>
     * @return The defaultAllocationMethod.
     */
    @java.lang.Override public org.openlca.proto.Proto.AllocationType getDefaultAllocationMethod() {
      @SuppressWarnings("deprecation")
      org.openlca.proto.Proto.AllocationType result = org.openlca.proto.Proto.AllocationType.valueOf(defaultAllocationMethod_);
      return result == null ? org.openlca.proto.Proto.AllocationType.UNRECOGNIZED : result;
    }

    public static final int ALLOCATION_FACTORS_FIELD_NUMBER = 11;
    private java.util.List<org.openlca.proto.Proto.AllocationFactor> allocationFactors_;
    /**
     * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.proto.Proto.AllocationFactor> getAllocationFactorsList() {
      return allocationFactors_;
    }
    /**
     * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.proto.Proto.AllocationFactorOrBuilder> 
        getAllocationFactorsOrBuilderList() {
      return allocationFactors_;
    }
    /**
     * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
     */
    @java.lang.Override
    public int getAllocationFactorsCount() {
      return allocationFactors_.size();
    }
    /**
     * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.AllocationFactor getAllocationFactors(int index) {
      return allocationFactors_.get(index);
    }
    /**
     * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.AllocationFactorOrBuilder getAllocationFactorsOrBuilder(
        int index) {
      return allocationFactors_.get(index);
    }

    public static final int EXCHANGES_FIELD_NUMBER = 12;
    private java.util.List<org.openlca.proto.Proto.Exchange> exchanges_;
    /**
     * <pre>
     * The inputs and outputs of the process.
     * </pre>
     *
     * <code>repeated .protolca.Exchange exchanges = 12;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.proto.Proto.Exchange> getExchangesList() {
      return exchanges_;
    }
    /**
     * <pre>
     * The inputs and outputs of the process.
     * </pre>
     *
     * <code>repeated .protolca.Exchange exchanges = 12;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.proto.Proto.ExchangeOrBuilder> 
        getExchangesOrBuilderList() {
      return exchanges_;
    }
    /**
     * <pre>
     * The inputs and outputs of the process.
     * </pre>
     *
     * <code>repeated .protolca.Exchange exchanges = 12;</code>
     */
    @java.lang.Override
    public int getExchangesCount() {
      return exchanges_.size();
    }
    /**
     * <pre>
     * The inputs and outputs of the process.
     * </pre>
     *
     * <code>repeated .protolca.Exchange exchanges = 12;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Exchange getExchanges(int index) {
      return exchanges_.get(index);
    }
    /**
     * <pre>
     * The inputs and outputs of the process.
     * </pre>
     *
     * <code>repeated .protolca.Exchange exchanges = 12;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ExchangeOrBuilder getExchangesOrBuilder(
        int index) {
      return exchanges_.get(index);
    }

    public static final int LOCATION_FIELD_NUMBER = 13;
    private org.openlca.proto.Proto.Location location_;
    /**
     * <code>.protolca.Location location = 13;</code>
     * @return Whether the location field is set.
     */
    @java.lang.Override
    public boolean hasLocation() {
      return location_ != null;
    }
    /**
     * <code>.protolca.Location location = 13;</code>
     * @return The location.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Location getLocation() {
      return location_ == null ? org.openlca.proto.Proto.Location.getDefaultInstance() : location_;
    }
    /**
     * <code>.protolca.Location location = 13;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.LocationOrBuilder getLocationOrBuilder() {
      return getLocation();
    }

    public static final int PARAMETERS_FIELD_NUMBER = 14;
    private java.util.List<org.openlca.proto.Proto.Parameter> parameters_;
    /**
     * <code>repeated .protolca.Parameter parameters = 14;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.proto.Proto.Parameter> getParametersList() {
      return parameters_;
    }
    /**
     * <code>repeated .protolca.Parameter parameters = 14;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.proto.Proto.ParameterOrBuilder> 
        getParametersOrBuilderList() {
      return parameters_;
    }
    /**
     * <code>repeated .protolca.Parameter parameters = 14;</code>
     */
    @java.lang.Override
    public int getParametersCount() {
      return parameters_.size();
    }
    /**
     * <code>repeated .protolca.Parameter parameters = 14;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Parameter getParameters(int index) {
      return parameters_.get(index);
    }
    /**
     * <code>repeated .protolca.Parameter parameters = 14;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ParameterOrBuilder getParametersOrBuilder(
        int index) {
      return parameters_.get(index);
    }

    public static final int PROCESS_DOCUMENTATION_FIELD_NUMBER = 15;
    private org.openlca.proto.Proto.ProcessDocumentation processDocumentation_;
    /**
     * <code>.protolca.ProcessDocumentation process_documentation = 15;</code>
     * @return Whether the processDocumentation field is set.
     */
    @java.lang.Override
    public boolean hasProcessDocumentation() {
      return processDocumentation_ != null;
    }
    /**
     * <code>.protolca.ProcessDocumentation process_documentation = 15;</code>
     * @return The processDocumentation.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ProcessDocumentation getProcessDocumentation() {
      return processDocumentation_ == null ? org.openlca.proto.Proto.ProcessDocumentation.getDefaultInstance() : processDocumentation_;
    }
    /**
     * <code>.protolca.ProcessDocumentation process_documentation = 15;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ProcessDocumentationOrBuilder getProcessDocumentationOrBuilder() {
      return getProcessDocumentation();
    }

    public static final int PROCESS_TYPE_FIELD_NUMBER = 16;
    private int processType_;
    /**
     * <code>.protolca.ProcessType process_type = 16;</code>
     * @return The enum numeric value on the wire for processType.
     */
    @java.lang.Override public int getProcessTypeValue() {
      return processType_;
    }
    /**
     * <code>.protolca.ProcessType process_type = 16;</code>
     * @return The processType.
     */
    @java.lang.Override public org.openlca.proto.Proto.ProcessType getProcessType() {
      @SuppressWarnings("deprecation")
      org.openlca.proto.Proto.ProcessType result = org.openlca.proto.Proto.ProcessType.valueOf(processType_);
      return result == null ? org.openlca.proto.Proto.ProcessType.UNRECOGNIZED : result;
    }

    public static final int DQ_SYSTEM_FIELD_NUMBER = 17;
    private org.openlca.proto.Proto.Ref dqSystem_;
    /**
     * <pre>
     * A reference to a data quality system ([DqSystem]) with which the overall
     * quality of the process can be assessed.
     * </pre>
     *
     * <code>.protolca.Ref dq_system = 17;</code>
     * @return Whether the dqSystem field is set.
     */
    @java.lang.Override
    public boolean hasDqSystem() {
      return dqSystem_ != null;
    }
    /**
     * <pre>
     * A reference to a data quality system ([DqSystem]) with which the overall
     * quality of the process can be assessed.
     * </pre>
     *
     * <code>.protolca.Ref dq_system = 17;</code>
     * @return The dqSystem.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getDqSystem() {
      return dqSystem_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : dqSystem_;
    }
    /**
     * <pre>
     * A reference to a data quality system ([DqSystem]) with which the overall
     * quality of the process can be assessed.
     * </pre>
     *
     * <code>.protolca.Ref dq_system = 17;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getDqSystemOrBuilder() {
      return getDqSystem();
    }

    public static final int EXCHANGE_DQ_SYSTEM_FIELD_NUMBER = 18;
    private org.openlca.proto.Proto.Ref exchangeDqSystem_;
    /**
     * <pre>
     * A reference to a data quality system ([DqSystem]) with which the quality
     * of individual inputs and outputs ([Exchange]s) of the process can be
     * assessed.
     * </pre>
     *
     * <code>.protolca.Ref exchange_dq_system = 18;</code>
     * @return Whether the exchangeDqSystem field is set.
     */
    @java.lang.Override
    public boolean hasExchangeDqSystem() {
      return exchangeDqSystem_ != null;
    }
    /**
     * <pre>
     * A reference to a data quality system ([DqSystem]) with which the quality
     * of individual inputs and outputs ([Exchange]s) of the process can be
     * assessed.
     * </pre>
     *
     * <code>.protolca.Ref exchange_dq_system = 18;</code>
     * @return The exchangeDqSystem.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getExchangeDqSystem() {
      return exchangeDqSystem_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : exchangeDqSystem_;
    }
    /**
     * <pre>
     * A reference to a data quality system ([DqSystem]) with which the quality
     * of individual inputs and outputs ([Exchange]s) of the process can be
     * assessed.
     * </pre>
     *
     * <code>.protolca.Ref exchange_dq_system = 18;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getExchangeDqSystemOrBuilder() {
      return getExchangeDqSystem();
    }

    public static final int SOCIAL_DQ_SYSTEM_FIELD_NUMBER = 19;
    private org.openlca.proto.Proto.Ref socialDqSystem_;
    /**
     * <pre>
     * A reference to a data quality system ([DqSystem]) with which the quality
     * of individual social aspects of the process can be assessed.
     * </pre>
     *
     * <code>.protolca.Ref social_dq_system = 19;</code>
     * @return Whether the socialDqSystem field is set.
     */
    @java.lang.Override
    public boolean hasSocialDqSystem() {
      return socialDqSystem_ != null;
    }
    /**
     * <pre>
     * A reference to a data quality system ([DqSystem]) with which the quality
     * of individual social aspects of the process can be assessed.
     * </pre>
     *
     * <code>.protolca.Ref social_dq_system = 19;</code>
     * @return The socialDqSystem.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getSocialDqSystem() {
      return socialDqSystem_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : socialDqSystem_;
    }
    /**
     * <pre>
     * A reference to a data quality system ([DqSystem]) with which the quality
     * of individual social aspects of the process can be assessed.
     * </pre>
     *
     * <code>.protolca.Ref social_dq_system = 19;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getSocialDqSystemOrBuilder() {
      return getSocialDqSystem();
    }

    public static final int DQ_ENTRY_FIELD_NUMBER = 20;
    private volatile java.lang.Object dqEntry_;
    /**
     * <pre>
     * A data quality entry like `(1;3;2;5;1)`. The entry is a vector of data
     * quality values that need to match the overall data quality system of the
     * process (the system that is stored in the `dqSystem` property). In such a
     * system the data quality indicators have fixed positions and the respective
     * values in the `dqEntry` vector map to these positions.
     * </pre>
     *
     * <code>string dq_entry = 20;</code>
     * @return The dqEntry.
     */
    @java.lang.Override
    public java.lang.String getDqEntry() {
      java.lang.Object ref = dqEntry_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dqEntry_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A data quality entry like `(1;3;2;5;1)`. The entry is a vector of data
     * quality values that need to match the overall data quality system of the
     * process (the system that is stored in the `dqSystem` property). In such a
     * system the data quality indicators have fixed positions and the respective
     * values in the `dqEntry` vector map to these positions.
     * </pre>
     *
     * <code>string dq_entry = 20;</code>
     * @return The bytes for dqEntry.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDqEntryBytes() {
      java.lang.Object ref = dqEntry_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dqEntry_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (category_ != null) {
        output.writeMessage(7, getCategory());
      }
      for (int i = 0; i < tags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, tags_.getRaw(i));
      }
      if (!getLibraryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, library_);
      }
      if (defaultAllocationMethod_ != org.openlca.proto.Proto.AllocationType.UNDEFINED_ALLOCATION_TYPE.getNumber()) {
        output.writeEnum(10, defaultAllocationMethod_);
      }
      for (int i = 0; i < allocationFactors_.size(); i++) {
        output.writeMessage(11, allocationFactors_.get(i));
      }
      for (int i = 0; i < exchanges_.size(); i++) {
        output.writeMessage(12, exchanges_.get(i));
      }
      if (location_ != null) {
        output.writeMessage(13, getLocation());
      }
      for (int i = 0; i < parameters_.size(); i++) {
        output.writeMessage(14, parameters_.get(i));
      }
      if (processDocumentation_ != null) {
        output.writeMessage(15, getProcessDocumentation());
      }
      if (processType_ != org.openlca.proto.Proto.ProcessType.UNDEFINED_PROCESS_TYPE.getNumber()) {
        output.writeEnum(16, processType_);
      }
      if (dqSystem_ != null) {
        output.writeMessage(17, getDqSystem());
      }
      if (exchangeDqSystem_ != null) {
        output.writeMessage(18, getExchangeDqSystem());
      }
      if (socialDqSystem_ != null) {
        output.writeMessage(19, getSocialDqSystem());
      }
      if (!getDqEntryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 20, dqEntry_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (category_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCategory());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += computeStringSizeNoTag(tags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      if (!getLibraryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, library_);
      }
      if (defaultAllocationMethod_ != org.openlca.proto.Proto.AllocationType.UNDEFINED_ALLOCATION_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, defaultAllocationMethod_);
      }
      for (int i = 0; i < allocationFactors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, allocationFactors_.get(i));
      }
      for (int i = 0; i < exchanges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, exchanges_.get(i));
      }
      if (location_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getLocation());
      }
      for (int i = 0; i < parameters_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, parameters_.get(i));
      }
      if (processDocumentation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getProcessDocumentation());
      }
      if (processType_ != org.openlca.proto.Proto.ProcessType.UNDEFINED_PROCESS_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, processType_);
      }
      if (dqSystem_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getDqSystem());
      }
      if (exchangeDqSystem_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getExchangeDqSystem());
      }
      if (socialDqSystem_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getSocialDqSystem());
      }
      if (!getDqEntryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(20, dqEntry_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.Process)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.Process other = (org.openlca.proto.Proto.Process) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (hasCategory() != other.hasCategory()) return false;
      if (hasCategory()) {
        if (!getCategory()
            .equals(other.getCategory())) return false;
      }
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (!getLibrary()
          .equals(other.getLibrary())) return false;
      if (defaultAllocationMethod_ != other.defaultAllocationMethod_) return false;
      if (!getAllocationFactorsList()
          .equals(other.getAllocationFactorsList())) return false;
      if (!getExchangesList()
          .equals(other.getExchangesList())) return false;
      if (hasLocation() != other.hasLocation()) return false;
      if (hasLocation()) {
        if (!getLocation()
            .equals(other.getLocation())) return false;
      }
      if (!getParametersList()
          .equals(other.getParametersList())) return false;
      if (hasProcessDocumentation() != other.hasProcessDocumentation()) return false;
      if (hasProcessDocumentation()) {
        if (!getProcessDocumentation()
            .equals(other.getProcessDocumentation())) return false;
      }
      if (processType_ != other.processType_) return false;
      if (hasDqSystem() != other.hasDqSystem()) return false;
      if (hasDqSystem()) {
        if (!getDqSystem()
            .equals(other.getDqSystem())) return false;
      }
      if (hasExchangeDqSystem() != other.hasExchangeDqSystem()) return false;
      if (hasExchangeDqSystem()) {
        if (!getExchangeDqSystem()
            .equals(other.getExchangeDqSystem())) return false;
      }
      if (hasSocialDqSystem() != other.hasSocialDqSystem()) return false;
      if (hasSocialDqSystem()) {
        if (!getSocialDqSystem()
            .equals(other.getSocialDqSystem())) return false;
      }
      if (!getDqEntry()
          .equals(other.getDqEntry())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (hasCategory()) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategory().hashCode();
      }
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibrary().hashCode();
      hash = (37 * hash) + DEFAULT_ALLOCATION_METHOD_FIELD_NUMBER;
      hash = (53 * hash) + defaultAllocationMethod_;
      if (getAllocationFactorsCount() > 0) {
        hash = (37 * hash) + ALLOCATION_FACTORS_FIELD_NUMBER;
        hash = (53 * hash) + getAllocationFactorsList().hashCode();
      }
      if (getExchangesCount() > 0) {
        hash = (37 * hash) + EXCHANGES_FIELD_NUMBER;
        hash = (53 * hash) + getExchangesList().hashCode();
      }
      if (hasLocation()) {
        hash = (37 * hash) + LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getLocation().hashCode();
      }
      if (getParametersCount() > 0) {
        hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + getParametersList().hashCode();
      }
      if (hasProcessDocumentation()) {
        hash = (37 * hash) + PROCESS_DOCUMENTATION_FIELD_NUMBER;
        hash = (53 * hash) + getProcessDocumentation().hashCode();
      }
      hash = (37 * hash) + PROCESS_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + processType_;
      if (hasDqSystem()) {
        hash = (37 * hash) + DQ_SYSTEM_FIELD_NUMBER;
        hash = (53 * hash) + getDqSystem().hashCode();
      }
      if (hasExchangeDqSystem()) {
        hash = (37 * hash) + EXCHANGE_DQ_SYSTEM_FIELD_NUMBER;
        hash = (53 * hash) + getExchangeDqSystem().hashCode();
      }
      if (hasSocialDqSystem()) {
        hash = (37 * hash) + SOCIAL_DQ_SYSTEM_FIELD_NUMBER;
        hash = (53 * hash) + getSocialDqSystem().hashCode();
      }
      hash = (37 * hash) + DQ_ENTRY_FIELD_NUMBER;
      hash = (53 * hash) + getDqEntry().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.Process parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Process parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Process parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Process parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Process parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Process parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Process parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Process parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Process parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Process parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Process parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Process parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.Process prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protolca.Process}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.Process)
        org.openlca.proto.Proto.ProcessOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_Process_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_Process_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.Process.class, org.openlca.proto.Proto.Process.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.Process.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAllocationFactorsFieldBuilder();
          getExchangesFieldBuilder();
          getParametersFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        if (categoryBuilder_ == null) {
          category_ = null;
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        library_ = "";

        defaultAllocationMethod_ = 0;

        if (allocationFactorsBuilder_ == null) {
          allocationFactors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          allocationFactorsBuilder_.clear();
        }
        if (exchangesBuilder_ == null) {
          exchanges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          exchangesBuilder_.clear();
        }
        if (locationBuilder_ == null) {
          location_ = null;
        } else {
          location_ = null;
          locationBuilder_ = null;
        }
        if (parametersBuilder_ == null) {
          parameters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          parametersBuilder_.clear();
        }
        if (processDocumentationBuilder_ == null) {
          processDocumentation_ = null;
        } else {
          processDocumentation_ = null;
          processDocumentationBuilder_ = null;
        }
        processType_ = 0;

        if (dqSystemBuilder_ == null) {
          dqSystem_ = null;
        } else {
          dqSystem_ = null;
          dqSystemBuilder_ = null;
        }
        if (exchangeDqSystemBuilder_ == null) {
          exchangeDqSystem_ = null;
        } else {
          exchangeDqSystem_ = null;
          exchangeDqSystemBuilder_ = null;
        }
        if (socialDqSystemBuilder_ == null) {
          socialDqSystem_ = null;
        } else {
          socialDqSystem_ = null;
          socialDqSystemBuilder_ = null;
        }
        dqEntry_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_Process_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Process getDefaultInstanceForType() {
        return org.openlca.proto.Proto.Process.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Process build() {
        org.openlca.proto.Proto.Process result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Process buildPartial() {
        org.openlca.proto.Proto.Process result = new org.openlca.proto.Proto.Process(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (categoryBuilder_ == null) {
          result.category_ = category_;
        } else {
          result.category_ = categoryBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tags_ = tags_;
        result.library_ = library_;
        result.defaultAllocationMethod_ = defaultAllocationMethod_;
        if (allocationFactorsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            allocationFactors_ = java.util.Collections.unmodifiableList(allocationFactors_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.allocationFactors_ = allocationFactors_;
        } else {
          result.allocationFactors_ = allocationFactorsBuilder_.build();
        }
        if (exchangesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            exchanges_ = java.util.Collections.unmodifiableList(exchanges_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.exchanges_ = exchanges_;
        } else {
          result.exchanges_ = exchangesBuilder_.build();
        }
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        if (parametersBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            parameters_ = java.util.Collections.unmodifiableList(parameters_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.parameters_ = parameters_;
        } else {
          result.parameters_ = parametersBuilder_.build();
        }
        if (processDocumentationBuilder_ == null) {
          result.processDocumentation_ = processDocumentation_;
        } else {
          result.processDocumentation_ = processDocumentationBuilder_.build();
        }
        result.processType_ = processType_;
        if (dqSystemBuilder_ == null) {
          result.dqSystem_ = dqSystem_;
        } else {
          result.dqSystem_ = dqSystemBuilder_.build();
        }
        if (exchangeDqSystemBuilder_ == null) {
          result.exchangeDqSystem_ = exchangeDqSystem_;
        } else {
          result.exchangeDqSystem_ = exchangeDqSystemBuilder_.build();
        }
        if (socialDqSystemBuilder_ == null) {
          result.socialDqSystem_ = socialDqSystem_;
        } else {
          result.socialDqSystem_ = socialDqSystemBuilder_.build();
        }
        result.dqEntry_ = dqEntry_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.Process) {
          return mergeFrom((org.openlca.proto.Proto.Process)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.Process other) {
        if (other == org.openlca.proto.Proto.Process.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.hasCategory()) {
          mergeCategory(other.getCategory());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        if (!other.getLibrary().isEmpty()) {
          library_ = other.library_;
          onChanged();
        }
        if (other.defaultAllocationMethod_ != 0) {
          setDefaultAllocationMethodValue(other.getDefaultAllocationMethodValue());
        }
        if (allocationFactorsBuilder_ == null) {
          if (!other.allocationFactors_.isEmpty()) {
            if (allocationFactors_.isEmpty()) {
              allocationFactors_ = other.allocationFactors_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAllocationFactorsIsMutable();
              allocationFactors_.addAll(other.allocationFactors_);
            }
            onChanged();
          }
        } else {
          if (!other.allocationFactors_.isEmpty()) {
            if (allocationFactorsBuilder_.isEmpty()) {
              allocationFactorsBuilder_.dispose();
              allocationFactorsBuilder_ = null;
              allocationFactors_ = other.allocationFactors_;
              bitField0_ = (bitField0_ & ~0x00000002);
              allocationFactorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAllocationFactorsFieldBuilder() : null;
            } else {
              allocationFactorsBuilder_.addAllMessages(other.allocationFactors_);
            }
          }
        }
        if (exchangesBuilder_ == null) {
          if (!other.exchanges_.isEmpty()) {
            if (exchanges_.isEmpty()) {
              exchanges_ = other.exchanges_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureExchangesIsMutable();
              exchanges_.addAll(other.exchanges_);
            }
            onChanged();
          }
        } else {
          if (!other.exchanges_.isEmpty()) {
            if (exchangesBuilder_.isEmpty()) {
              exchangesBuilder_.dispose();
              exchangesBuilder_ = null;
              exchanges_ = other.exchanges_;
              bitField0_ = (bitField0_ & ~0x00000004);
              exchangesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getExchangesFieldBuilder() : null;
            } else {
              exchangesBuilder_.addAllMessages(other.exchanges_);
            }
          }
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (parametersBuilder_ == null) {
          if (!other.parameters_.isEmpty()) {
            if (parameters_.isEmpty()) {
              parameters_ = other.parameters_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureParametersIsMutable();
              parameters_.addAll(other.parameters_);
            }
            onChanged();
          }
        } else {
          if (!other.parameters_.isEmpty()) {
            if (parametersBuilder_.isEmpty()) {
              parametersBuilder_.dispose();
              parametersBuilder_ = null;
              parameters_ = other.parameters_;
              bitField0_ = (bitField0_ & ~0x00000008);
              parametersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getParametersFieldBuilder() : null;
            } else {
              parametersBuilder_.addAllMessages(other.parameters_);
            }
          }
        }
        if (other.hasProcessDocumentation()) {
          mergeProcessDocumentation(other.getProcessDocumentation());
        }
        if (other.processType_ != 0) {
          setProcessTypeValue(other.getProcessTypeValue());
        }
        if (other.hasDqSystem()) {
          mergeDqSystem(other.getDqSystem());
        }
        if (other.hasExchangeDqSystem()) {
          mergeExchangeDqSystem(other.getExchangeDqSystem());
        }
        if (other.hasSocialDqSystem()) {
          mergeSocialDqSystem(other.getSocialDqSystem());
        }
        if (!other.getDqEntry().isEmpty()) {
          dqEntry_ = other.dqEntry_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.Process parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.Process) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref category_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> categoryBuilder_;
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return Whether the category field is set.
       */
      public boolean hasCategory() {
        return categoryBuilder_ != null || category_ != null;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return The category.
       */
      public org.openlca.proto.Proto.Ref getCategory() {
        if (categoryBuilder_ == null) {
          return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        } else {
          return categoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          category_ = value;
          onChanged();
        } else {
          categoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          category_ = builderForValue.build();
          onChanged();
        } else {
          categoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder mergeCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (category_ != null) {
            category_ =
              org.openlca.proto.Proto.Ref.newBuilder(category_).mergeFrom(value).buildPartial();
          } else {
            category_ = value;
          }
          onChanged();
        } else {
          categoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder clearCategory() {
        if (categoryBuilder_ == null) {
          category_ = null;
          onChanged();
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getCategoryBuilder() {
        
        onChanged();
        return getCategoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
        if (categoryBuilder_ != null) {
          return categoryBuilder_.getMessageOrBuilder();
        } else {
          return category_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getCategoryFieldBuilder() {
        if (categoryBuilder_ == null) {
          categoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getCategory(),
                  getParentForChildren(),
                  isClean());
          category_ = null;
        }
        return categoryBuilder_;
      }

      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return A list containing the tags.
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return The count of tags.
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the element to return.
       * @return The tags at the given index.
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tags at the given index.
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index to set the value at.
       * @param value The tags to set.
       * @return This builder for chaining.
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The tags to add.
       * @return This builder for chaining.
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param values The tags to add.
       * @return This builder for chaining.
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The bytes of the tags to add.
       * @return This builder for chaining.
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object library_ = "";
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The library.
       */
      public java.lang.String getLibrary() {
        java.lang.Object ref = library_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          library_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The bytes for library.
       */
      public com.google.protobuf.ByteString
          getLibraryBytes() {
        java.lang.Object ref = library_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          library_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The library to set.
       * @return This builder for chaining.
       */
      public Builder setLibrary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        library_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLibrary() {
        
        library_ = getDefaultInstance().getLibrary();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The bytes for library to set.
       * @return This builder for chaining.
       */
      public Builder setLibraryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        library_ = value;
        onChanged();
        return this;
      }

      private int defaultAllocationMethod_ = 0;
      /**
       * <code>.protolca.AllocationType default_allocation_method = 10;</code>
       * @return The enum numeric value on the wire for defaultAllocationMethod.
       */
      @java.lang.Override public int getDefaultAllocationMethodValue() {
        return defaultAllocationMethod_;
      }
      /**
       * <code>.protolca.AllocationType default_allocation_method = 10;</code>
       * @param value The enum numeric value on the wire for defaultAllocationMethod to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultAllocationMethodValue(int value) {
        
        defaultAllocationMethod_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.protolca.AllocationType default_allocation_method = 10;</code>
       * @return The defaultAllocationMethod.
       */
      @java.lang.Override
      public org.openlca.proto.Proto.AllocationType getDefaultAllocationMethod() {
        @SuppressWarnings("deprecation")
        org.openlca.proto.Proto.AllocationType result = org.openlca.proto.Proto.AllocationType.valueOf(defaultAllocationMethod_);
        return result == null ? org.openlca.proto.Proto.AllocationType.UNRECOGNIZED : result;
      }
      /**
       * <code>.protolca.AllocationType default_allocation_method = 10;</code>
       * @param value The defaultAllocationMethod to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultAllocationMethod(org.openlca.proto.Proto.AllocationType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        defaultAllocationMethod_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.protolca.AllocationType default_allocation_method = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDefaultAllocationMethod() {
        
        defaultAllocationMethod_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.openlca.proto.Proto.AllocationFactor> allocationFactors_ =
        java.util.Collections.emptyList();
      private void ensureAllocationFactorsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          allocationFactors_ = new java.util.ArrayList<org.openlca.proto.Proto.AllocationFactor>(allocationFactors_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.AllocationFactor, org.openlca.proto.Proto.AllocationFactor.Builder, org.openlca.proto.Proto.AllocationFactorOrBuilder> allocationFactorsBuilder_;

      /**
       * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
       */
      public java.util.List<org.openlca.proto.Proto.AllocationFactor> getAllocationFactorsList() {
        if (allocationFactorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(allocationFactors_);
        } else {
          return allocationFactorsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
       */
      public int getAllocationFactorsCount() {
        if (allocationFactorsBuilder_ == null) {
          return allocationFactors_.size();
        } else {
          return allocationFactorsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
       */
      public org.openlca.proto.Proto.AllocationFactor getAllocationFactors(int index) {
        if (allocationFactorsBuilder_ == null) {
          return allocationFactors_.get(index);
        } else {
          return allocationFactorsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
       */
      public Builder setAllocationFactors(
          int index, org.openlca.proto.Proto.AllocationFactor value) {
        if (allocationFactorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllocationFactorsIsMutable();
          allocationFactors_.set(index, value);
          onChanged();
        } else {
          allocationFactorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
       */
      public Builder setAllocationFactors(
          int index, org.openlca.proto.Proto.AllocationFactor.Builder builderForValue) {
        if (allocationFactorsBuilder_ == null) {
          ensureAllocationFactorsIsMutable();
          allocationFactors_.set(index, builderForValue.build());
          onChanged();
        } else {
          allocationFactorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
       */
      public Builder addAllocationFactors(org.openlca.proto.Proto.AllocationFactor value) {
        if (allocationFactorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllocationFactorsIsMutable();
          allocationFactors_.add(value);
          onChanged();
        } else {
          allocationFactorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
       */
      public Builder addAllocationFactors(
          int index, org.openlca.proto.Proto.AllocationFactor value) {
        if (allocationFactorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllocationFactorsIsMutable();
          allocationFactors_.add(index, value);
          onChanged();
        } else {
          allocationFactorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
       */
      public Builder addAllocationFactors(
          org.openlca.proto.Proto.AllocationFactor.Builder builderForValue) {
        if (allocationFactorsBuilder_ == null) {
          ensureAllocationFactorsIsMutable();
          allocationFactors_.add(builderForValue.build());
          onChanged();
        } else {
          allocationFactorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
       */
      public Builder addAllocationFactors(
          int index, org.openlca.proto.Proto.AllocationFactor.Builder builderForValue) {
        if (allocationFactorsBuilder_ == null) {
          ensureAllocationFactorsIsMutable();
          allocationFactors_.add(index, builderForValue.build());
          onChanged();
        } else {
          allocationFactorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
       */
      public Builder addAllAllocationFactors(
          java.lang.Iterable<? extends org.openlca.proto.Proto.AllocationFactor> values) {
        if (allocationFactorsBuilder_ == null) {
          ensureAllocationFactorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, allocationFactors_);
          onChanged();
        } else {
          allocationFactorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
       */
      public Builder clearAllocationFactors() {
        if (allocationFactorsBuilder_ == null) {
          allocationFactors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          allocationFactorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
       */
      public Builder removeAllocationFactors(int index) {
        if (allocationFactorsBuilder_ == null) {
          ensureAllocationFactorsIsMutable();
          allocationFactors_.remove(index);
          onChanged();
        } else {
          allocationFactorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
       */
      public org.openlca.proto.Proto.AllocationFactor.Builder getAllocationFactorsBuilder(
          int index) {
        return getAllocationFactorsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
       */
      public org.openlca.proto.Proto.AllocationFactorOrBuilder getAllocationFactorsOrBuilder(
          int index) {
        if (allocationFactorsBuilder_ == null) {
          return allocationFactors_.get(index);  } else {
          return allocationFactorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
       */
      public java.util.List<? extends org.openlca.proto.Proto.AllocationFactorOrBuilder> 
           getAllocationFactorsOrBuilderList() {
        if (allocationFactorsBuilder_ != null) {
          return allocationFactorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(allocationFactors_);
        }
      }
      /**
       * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
       */
      public org.openlca.proto.Proto.AllocationFactor.Builder addAllocationFactorsBuilder() {
        return getAllocationFactorsFieldBuilder().addBuilder(
            org.openlca.proto.Proto.AllocationFactor.getDefaultInstance());
      }
      /**
       * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
       */
      public org.openlca.proto.Proto.AllocationFactor.Builder addAllocationFactorsBuilder(
          int index) {
        return getAllocationFactorsFieldBuilder().addBuilder(
            index, org.openlca.proto.Proto.AllocationFactor.getDefaultInstance());
      }
      /**
       * <code>repeated .protolca.AllocationFactor allocation_factors = 11;</code>
       */
      public java.util.List<org.openlca.proto.Proto.AllocationFactor.Builder> 
           getAllocationFactorsBuilderList() {
        return getAllocationFactorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.AllocationFactor, org.openlca.proto.Proto.AllocationFactor.Builder, org.openlca.proto.Proto.AllocationFactorOrBuilder> 
          getAllocationFactorsFieldBuilder() {
        if (allocationFactorsBuilder_ == null) {
          allocationFactorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.proto.Proto.AllocationFactor, org.openlca.proto.Proto.AllocationFactor.Builder, org.openlca.proto.Proto.AllocationFactorOrBuilder>(
                  allocationFactors_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          allocationFactors_ = null;
        }
        return allocationFactorsBuilder_;
      }

      private java.util.List<org.openlca.proto.Proto.Exchange> exchanges_ =
        java.util.Collections.emptyList();
      private void ensureExchangesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          exchanges_ = new java.util.ArrayList<org.openlca.proto.Proto.Exchange>(exchanges_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.Exchange, org.openlca.proto.Proto.Exchange.Builder, org.openlca.proto.Proto.ExchangeOrBuilder> exchangesBuilder_;

      /**
       * <pre>
       * The inputs and outputs of the process.
       * </pre>
       *
       * <code>repeated .protolca.Exchange exchanges = 12;</code>
       */
      public java.util.List<org.openlca.proto.Proto.Exchange> getExchangesList() {
        if (exchangesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(exchanges_);
        } else {
          return exchangesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The inputs and outputs of the process.
       * </pre>
       *
       * <code>repeated .protolca.Exchange exchanges = 12;</code>
       */
      public int getExchangesCount() {
        if (exchangesBuilder_ == null) {
          return exchanges_.size();
        } else {
          return exchangesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The inputs and outputs of the process.
       * </pre>
       *
       * <code>repeated .protolca.Exchange exchanges = 12;</code>
       */
      public org.openlca.proto.Proto.Exchange getExchanges(int index) {
        if (exchangesBuilder_ == null) {
          return exchanges_.get(index);
        } else {
          return exchangesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The inputs and outputs of the process.
       * </pre>
       *
       * <code>repeated .protolca.Exchange exchanges = 12;</code>
       */
      public Builder setExchanges(
          int index, org.openlca.proto.Proto.Exchange value) {
        if (exchangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExchangesIsMutable();
          exchanges_.set(index, value);
          onChanged();
        } else {
          exchangesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The inputs and outputs of the process.
       * </pre>
       *
       * <code>repeated .protolca.Exchange exchanges = 12;</code>
       */
      public Builder setExchanges(
          int index, org.openlca.proto.Proto.Exchange.Builder builderForValue) {
        if (exchangesBuilder_ == null) {
          ensureExchangesIsMutable();
          exchanges_.set(index, builderForValue.build());
          onChanged();
        } else {
          exchangesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The inputs and outputs of the process.
       * </pre>
       *
       * <code>repeated .protolca.Exchange exchanges = 12;</code>
       */
      public Builder addExchanges(org.openlca.proto.Proto.Exchange value) {
        if (exchangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExchangesIsMutable();
          exchanges_.add(value);
          onChanged();
        } else {
          exchangesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The inputs and outputs of the process.
       * </pre>
       *
       * <code>repeated .protolca.Exchange exchanges = 12;</code>
       */
      public Builder addExchanges(
          int index, org.openlca.proto.Proto.Exchange value) {
        if (exchangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExchangesIsMutable();
          exchanges_.add(index, value);
          onChanged();
        } else {
          exchangesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The inputs and outputs of the process.
       * </pre>
       *
       * <code>repeated .protolca.Exchange exchanges = 12;</code>
       */
      public Builder addExchanges(
          org.openlca.proto.Proto.Exchange.Builder builderForValue) {
        if (exchangesBuilder_ == null) {
          ensureExchangesIsMutable();
          exchanges_.add(builderForValue.build());
          onChanged();
        } else {
          exchangesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The inputs and outputs of the process.
       * </pre>
       *
       * <code>repeated .protolca.Exchange exchanges = 12;</code>
       */
      public Builder addExchanges(
          int index, org.openlca.proto.Proto.Exchange.Builder builderForValue) {
        if (exchangesBuilder_ == null) {
          ensureExchangesIsMutable();
          exchanges_.add(index, builderForValue.build());
          onChanged();
        } else {
          exchangesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The inputs and outputs of the process.
       * </pre>
       *
       * <code>repeated .protolca.Exchange exchanges = 12;</code>
       */
      public Builder addAllExchanges(
          java.lang.Iterable<? extends org.openlca.proto.Proto.Exchange> values) {
        if (exchangesBuilder_ == null) {
          ensureExchangesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, exchanges_);
          onChanged();
        } else {
          exchangesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The inputs and outputs of the process.
       * </pre>
       *
       * <code>repeated .protolca.Exchange exchanges = 12;</code>
       */
      public Builder clearExchanges() {
        if (exchangesBuilder_ == null) {
          exchanges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          exchangesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The inputs and outputs of the process.
       * </pre>
       *
       * <code>repeated .protolca.Exchange exchanges = 12;</code>
       */
      public Builder removeExchanges(int index) {
        if (exchangesBuilder_ == null) {
          ensureExchangesIsMutable();
          exchanges_.remove(index);
          onChanged();
        } else {
          exchangesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The inputs and outputs of the process.
       * </pre>
       *
       * <code>repeated .protolca.Exchange exchanges = 12;</code>
       */
      public org.openlca.proto.Proto.Exchange.Builder getExchangesBuilder(
          int index) {
        return getExchangesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The inputs and outputs of the process.
       * </pre>
       *
       * <code>repeated .protolca.Exchange exchanges = 12;</code>
       */
      public org.openlca.proto.Proto.ExchangeOrBuilder getExchangesOrBuilder(
          int index) {
        if (exchangesBuilder_ == null) {
          return exchanges_.get(index);  } else {
          return exchangesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The inputs and outputs of the process.
       * </pre>
       *
       * <code>repeated .protolca.Exchange exchanges = 12;</code>
       */
      public java.util.List<? extends org.openlca.proto.Proto.ExchangeOrBuilder> 
           getExchangesOrBuilderList() {
        if (exchangesBuilder_ != null) {
          return exchangesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(exchanges_);
        }
      }
      /**
       * <pre>
       * The inputs and outputs of the process.
       * </pre>
       *
       * <code>repeated .protolca.Exchange exchanges = 12;</code>
       */
      public org.openlca.proto.Proto.Exchange.Builder addExchangesBuilder() {
        return getExchangesFieldBuilder().addBuilder(
            org.openlca.proto.Proto.Exchange.getDefaultInstance());
      }
      /**
       * <pre>
       * The inputs and outputs of the process.
       * </pre>
       *
       * <code>repeated .protolca.Exchange exchanges = 12;</code>
       */
      public org.openlca.proto.Proto.Exchange.Builder addExchangesBuilder(
          int index) {
        return getExchangesFieldBuilder().addBuilder(
            index, org.openlca.proto.Proto.Exchange.getDefaultInstance());
      }
      /**
       * <pre>
       * The inputs and outputs of the process.
       * </pre>
       *
       * <code>repeated .protolca.Exchange exchanges = 12;</code>
       */
      public java.util.List<org.openlca.proto.Proto.Exchange.Builder> 
           getExchangesBuilderList() {
        return getExchangesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.Exchange, org.openlca.proto.Proto.Exchange.Builder, org.openlca.proto.Proto.ExchangeOrBuilder> 
          getExchangesFieldBuilder() {
        if (exchangesBuilder_ == null) {
          exchangesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.proto.Proto.Exchange, org.openlca.proto.Proto.Exchange.Builder, org.openlca.proto.Proto.ExchangeOrBuilder>(
                  exchanges_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          exchanges_ = null;
        }
        return exchangesBuilder_;
      }

      private org.openlca.proto.Proto.Location location_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Location, org.openlca.proto.Proto.Location.Builder, org.openlca.proto.Proto.LocationOrBuilder> locationBuilder_;
      /**
       * <code>.protolca.Location location = 13;</code>
       * @return Whether the location field is set.
       */
      public boolean hasLocation() {
        return locationBuilder_ != null || location_ != null;
      }
      /**
       * <code>.protolca.Location location = 13;</code>
       * @return The location.
       */
      public org.openlca.proto.Proto.Location getLocation() {
        if (locationBuilder_ == null) {
          return location_ == null ? org.openlca.proto.Proto.Location.getDefaultInstance() : location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <code>.protolca.Location location = 13;</code>
       */
      public Builder setLocation(org.openlca.proto.Proto.Location value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Location location = 13;</code>
       */
      public Builder setLocation(
          org.openlca.proto.Proto.Location.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protolca.Location location = 13;</code>
       */
      public Builder mergeLocation(org.openlca.proto.Proto.Location value) {
        if (locationBuilder_ == null) {
          if (location_ != null) {
            location_ =
              org.openlca.proto.Proto.Location.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Location location = 13;</code>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = null;
          onChanged();
        } else {
          location_ = null;
          locationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protolca.Location location = 13;</code>
       */
      public org.openlca.proto.Proto.Location.Builder getLocationBuilder() {
        
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>.protolca.Location location = 13;</code>
       */
      public org.openlca.proto.Proto.LocationOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_ == null ?
              org.openlca.proto.Proto.Location.getDefaultInstance() : location_;
        }
      }
      /**
       * <code>.protolca.Location location = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Location, org.openlca.proto.Proto.Location.Builder, org.openlca.proto.Proto.LocationOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Location, org.openlca.proto.Proto.Location.Builder, org.openlca.proto.Proto.LocationOrBuilder>(
                  getLocation(),
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }

      private java.util.List<org.openlca.proto.Proto.Parameter> parameters_ =
        java.util.Collections.emptyList();
      private void ensureParametersIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          parameters_ = new java.util.ArrayList<org.openlca.proto.Proto.Parameter>(parameters_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.Parameter, org.openlca.proto.Proto.Parameter.Builder, org.openlca.proto.Proto.ParameterOrBuilder> parametersBuilder_;

      /**
       * <code>repeated .protolca.Parameter parameters = 14;</code>
       */
      public java.util.List<org.openlca.proto.Proto.Parameter> getParametersList() {
        if (parametersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(parameters_);
        } else {
          return parametersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protolca.Parameter parameters = 14;</code>
       */
      public int getParametersCount() {
        if (parametersBuilder_ == null) {
          return parameters_.size();
        } else {
          return parametersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protolca.Parameter parameters = 14;</code>
       */
      public org.openlca.proto.Proto.Parameter getParameters(int index) {
        if (parametersBuilder_ == null) {
          return parameters_.get(index);
        } else {
          return parametersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protolca.Parameter parameters = 14;</code>
       */
      public Builder setParameters(
          int index, org.openlca.proto.Proto.Parameter value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.set(index, value);
          onChanged();
        } else {
          parametersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.Parameter parameters = 14;</code>
       */
      public Builder setParameters(
          int index, org.openlca.proto.Proto.Parameter.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.set(index, builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.Parameter parameters = 14;</code>
       */
      public Builder addParameters(org.openlca.proto.Proto.Parameter value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.add(value);
          onChanged();
        } else {
          parametersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.Parameter parameters = 14;</code>
       */
      public Builder addParameters(
          int index, org.openlca.proto.Proto.Parameter value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.add(index, value);
          onChanged();
        } else {
          parametersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.Parameter parameters = 14;</code>
       */
      public Builder addParameters(
          org.openlca.proto.Proto.Parameter.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.add(builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.Parameter parameters = 14;</code>
       */
      public Builder addParameters(
          int index, org.openlca.proto.Proto.Parameter.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.add(index, builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.Parameter parameters = 14;</code>
       */
      public Builder addAllParameters(
          java.lang.Iterable<? extends org.openlca.proto.Proto.Parameter> values) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, parameters_);
          onChanged();
        } else {
          parametersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.Parameter parameters = 14;</code>
       */
      public Builder clearParameters() {
        if (parametersBuilder_ == null) {
          parameters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          parametersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protolca.Parameter parameters = 14;</code>
       */
      public Builder removeParameters(int index) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.remove(index);
          onChanged();
        } else {
          parametersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.Parameter parameters = 14;</code>
       */
      public org.openlca.proto.Proto.Parameter.Builder getParametersBuilder(
          int index) {
        return getParametersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protolca.Parameter parameters = 14;</code>
       */
      public org.openlca.proto.Proto.ParameterOrBuilder getParametersOrBuilder(
          int index) {
        if (parametersBuilder_ == null) {
          return parameters_.get(index);  } else {
          return parametersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protolca.Parameter parameters = 14;</code>
       */
      public java.util.List<? extends org.openlca.proto.Proto.ParameterOrBuilder> 
           getParametersOrBuilderList() {
        if (parametersBuilder_ != null) {
          return parametersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(parameters_);
        }
      }
      /**
       * <code>repeated .protolca.Parameter parameters = 14;</code>
       */
      public org.openlca.proto.Proto.Parameter.Builder addParametersBuilder() {
        return getParametersFieldBuilder().addBuilder(
            org.openlca.proto.Proto.Parameter.getDefaultInstance());
      }
      /**
       * <code>repeated .protolca.Parameter parameters = 14;</code>
       */
      public org.openlca.proto.Proto.Parameter.Builder addParametersBuilder(
          int index) {
        return getParametersFieldBuilder().addBuilder(
            index, org.openlca.proto.Proto.Parameter.getDefaultInstance());
      }
      /**
       * <code>repeated .protolca.Parameter parameters = 14;</code>
       */
      public java.util.List<org.openlca.proto.Proto.Parameter.Builder> 
           getParametersBuilderList() {
        return getParametersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.Parameter, org.openlca.proto.Proto.Parameter.Builder, org.openlca.proto.Proto.ParameterOrBuilder> 
          getParametersFieldBuilder() {
        if (parametersBuilder_ == null) {
          parametersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.proto.Proto.Parameter, org.openlca.proto.Proto.Parameter.Builder, org.openlca.proto.Proto.ParameterOrBuilder>(
                  parameters_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          parameters_ = null;
        }
        return parametersBuilder_;
      }

      private org.openlca.proto.Proto.ProcessDocumentation processDocumentation_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.ProcessDocumentation, org.openlca.proto.Proto.ProcessDocumentation.Builder, org.openlca.proto.Proto.ProcessDocumentationOrBuilder> processDocumentationBuilder_;
      /**
       * <code>.protolca.ProcessDocumentation process_documentation = 15;</code>
       * @return Whether the processDocumentation field is set.
       */
      public boolean hasProcessDocumentation() {
        return processDocumentationBuilder_ != null || processDocumentation_ != null;
      }
      /**
       * <code>.protolca.ProcessDocumentation process_documentation = 15;</code>
       * @return The processDocumentation.
       */
      public org.openlca.proto.Proto.ProcessDocumentation getProcessDocumentation() {
        if (processDocumentationBuilder_ == null) {
          return processDocumentation_ == null ? org.openlca.proto.Proto.ProcessDocumentation.getDefaultInstance() : processDocumentation_;
        } else {
          return processDocumentationBuilder_.getMessage();
        }
      }
      /**
       * <code>.protolca.ProcessDocumentation process_documentation = 15;</code>
       */
      public Builder setProcessDocumentation(org.openlca.proto.Proto.ProcessDocumentation value) {
        if (processDocumentationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          processDocumentation_ = value;
          onChanged();
        } else {
          processDocumentationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protolca.ProcessDocumentation process_documentation = 15;</code>
       */
      public Builder setProcessDocumentation(
          org.openlca.proto.Proto.ProcessDocumentation.Builder builderForValue) {
        if (processDocumentationBuilder_ == null) {
          processDocumentation_ = builderForValue.build();
          onChanged();
        } else {
          processDocumentationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protolca.ProcessDocumentation process_documentation = 15;</code>
       */
      public Builder mergeProcessDocumentation(org.openlca.proto.Proto.ProcessDocumentation value) {
        if (processDocumentationBuilder_ == null) {
          if (processDocumentation_ != null) {
            processDocumentation_ =
              org.openlca.proto.Proto.ProcessDocumentation.newBuilder(processDocumentation_).mergeFrom(value).buildPartial();
          } else {
            processDocumentation_ = value;
          }
          onChanged();
        } else {
          processDocumentationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protolca.ProcessDocumentation process_documentation = 15;</code>
       */
      public Builder clearProcessDocumentation() {
        if (processDocumentationBuilder_ == null) {
          processDocumentation_ = null;
          onChanged();
        } else {
          processDocumentation_ = null;
          processDocumentationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protolca.ProcessDocumentation process_documentation = 15;</code>
       */
      public org.openlca.proto.Proto.ProcessDocumentation.Builder getProcessDocumentationBuilder() {
        
        onChanged();
        return getProcessDocumentationFieldBuilder().getBuilder();
      }
      /**
       * <code>.protolca.ProcessDocumentation process_documentation = 15;</code>
       */
      public org.openlca.proto.Proto.ProcessDocumentationOrBuilder getProcessDocumentationOrBuilder() {
        if (processDocumentationBuilder_ != null) {
          return processDocumentationBuilder_.getMessageOrBuilder();
        } else {
          return processDocumentation_ == null ?
              org.openlca.proto.Proto.ProcessDocumentation.getDefaultInstance() : processDocumentation_;
        }
      }
      /**
       * <code>.protolca.ProcessDocumentation process_documentation = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.ProcessDocumentation, org.openlca.proto.Proto.ProcessDocumentation.Builder, org.openlca.proto.Proto.ProcessDocumentationOrBuilder> 
          getProcessDocumentationFieldBuilder() {
        if (processDocumentationBuilder_ == null) {
          processDocumentationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.ProcessDocumentation, org.openlca.proto.Proto.ProcessDocumentation.Builder, org.openlca.proto.Proto.ProcessDocumentationOrBuilder>(
                  getProcessDocumentation(),
                  getParentForChildren(),
                  isClean());
          processDocumentation_ = null;
        }
        return processDocumentationBuilder_;
      }

      private int processType_ = 0;
      /**
       * <code>.protolca.ProcessType process_type = 16;</code>
       * @return The enum numeric value on the wire for processType.
       */
      @java.lang.Override public int getProcessTypeValue() {
        return processType_;
      }
      /**
       * <code>.protolca.ProcessType process_type = 16;</code>
       * @param value The enum numeric value on the wire for processType to set.
       * @return This builder for chaining.
       */
      public Builder setProcessTypeValue(int value) {
        
        processType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.protolca.ProcessType process_type = 16;</code>
       * @return The processType.
       */
      @java.lang.Override
      public org.openlca.proto.Proto.ProcessType getProcessType() {
        @SuppressWarnings("deprecation")
        org.openlca.proto.Proto.ProcessType result = org.openlca.proto.Proto.ProcessType.valueOf(processType_);
        return result == null ? org.openlca.proto.Proto.ProcessType.UNRECOGNIZED : result;
      }
      /**
       * <code>.protolca.ProcessType process_type = 16;</code>
       * @param value The processType to set.
       * @return This builder for chaining.
       */
      public Builder setProcessType(org.openlca.proto.Proto.ProcessType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        processType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.protolca.ProcessType process_type = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearProcessType() {
        
        processType_ = 0;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref dqSystem_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> dqSystemBuilder_;
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the overall
       * quality of the process can be assessed.
       * </pre>
       *
       * <code>.protolca.Ref dq_system = 17;</code>
       * @return Whether the dqSystem field is set.
       */
      public boolean hasDqSystem() {
        return dqSystemBuilder_ != null || dqSystem_ != null;
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the overall
       * quality of the process can be assessed.
       * </pre>
       *
       * <code>.protolca.Ref dq_system = 17;</code>
       * @return The dqSystem.
       */
      public org.openlca.proto.Proto.Ref getDqSystem() {
        if (dqSystemBuilder_ == null) {
          return dqSystem_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : dqSystem_;
        } else {
          return dqSystemBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the overall
       * quality of the process can be assessed.
       * </pre>
       *
       * <code>.protolca.Ref dq_system = 17;</code>
       */
      public Builder setDqSystem(org.openlca.proto.Proto.Ref value) {
        if (dqSystemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dqSystem_ = value;
          onChanged();
        } else {
          dqSystemBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the overall
       * quality of the process can be assessed.
       * </pre>
       *
       * <code>.protolca.Ref dq_system = 17;</code>
       */
      public Builder setDqSystem(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (dqSystemBuilder_ == null) {
          dqSystem_ = builderForValue.build();
          onChanged();
        } else {
          dqSystemBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the overall
       * quality of the process can be assessed.
       * </pre>
       *
       * <code>.protolca.Ref dq_system = 17;</code>
       */
      public Builder mergeDqSystem(org.openlca.proto.Proto.Ref value) {
        if (dqSystemBuilder_ == null) {
          if (dqSystem_ != null) {
            dqSystem_ =
              org.openlca.proto.Proto.Ref.newBuilder(dqSystem_).mergeFrom(value).buildPartial();
          } else {
            dqSystem_ = value;
          }
          onChanged();
        } else {
          dqSystemBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the overall
       * quality of the process can be assessed.
       * </pre>
       *
       * <code>.protolca.Ref dq_system = 17;</code>
       */
      public Builder clearDqSystem() {
        if (dqSystemBuilder_ == null) {
          dqSystem_ = null;
          onChanged();
        } else {
          dqSystem_ = null;
          dqSystemBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the overall
       * quality of the process can be assessed.
       * </pre>
       *
       * <code>.protolca.Ref dq_system = 17;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getDqSystemBuilder() {
        
        onChanged();
        return getDqSystemFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the overall
       * quality of the process can be assessed.
       * </pre>
       *
       * <code>.protolca.Ref dq_system = 17;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getDqSystemOrBuilder() {
        if (dqSystemBuilder_ != null) {
          return dqSystemBuilder_.getMessageOrBuilder();
        } else {
          return dqSystem_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : dqSystem_;
        }
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the overall
       * quality of the process can be assessed.
       * </pre>
       *
       * <code>.protolca.Ref dq_system = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getDqSystemFieldBuilder() {
        if (dqSystemBuilder_ == null) {
          dqSystemBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getDqSystem(),
                  getParentForChildren(),
                  isClean());
          dqSystem_ = null;
        }
        return dqSystemBuilder_;
      }

      private org.openlca.proto.Proto.Ref exchangeDqSystem_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> exchangeDqSystemBuilder_;
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the quality
       * of individual inputs and outputs ([Exchange]s) of the process can be
       * assessed.
       * </pre>
       *
       * <code>.protolca.Ref exchange_dq_system = 18;</code>
       * @return Whether the exchangeDqSystem field is set.
       */
      public boolean hasExchangeDqSystem() {
        return exchangeDqSystemBuilder_ != null || exchangeDqSystem_ != null;
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the quality
       * of individual inputs and outputs ([Exchange]s) of the process can be
       * assessed.
       * </pre>
       *
       * <code>.protolca.Ref exchange_dq_system = 18;</code>
       * @return The exchangeDqSystem.
       */
      public org.openlca.proto.Proto.Ref getExchangeDqSystem() {
        if (exchangeDqSystemBuilder_ == null) {
          return exchangeDqSystem_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : exchangeDqSystem_;
        } else {
          return exchangeDqSystemBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the quality
       * of individual inputs and outputs ([Exchange]s) of the process can be
       * assessed.
       * </pre>
       *
       * <code>.protolca.Ref exchange_dq_system = 18;</code>
       */
      public Builder setExchangeDqSystem(org.openlca.proto.Proto.Ref value) {
        if (exchangeDqSystemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          exchangeDqSystem_ = value;
          onChanged();
        } else {
          exchangeDqSystemBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the quality
       * of individual inputs and outputs ([Exchange]s) of the process can be
       * assessed.
       * </pre>
       *
       * <code>.protolca.Ref exchange_dq_system = 18;</code>
       */
      public Builder setExchangeDqSystem(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (exchangeDqSystemBuilder_ == null) {
          exchangeDqSystem_ = builderForValue.build();
          onChanged();
        } else {
          exchangeDqSystemBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the quality
       * of individual inputs and outputs ([Exchange]s) of the process can be
       * assessed.
       * </pre>
       *
       * <code>.protolca.Ref exchange_dq_system = 18;</code>
       */
      public Builder mergeExchangeDqSystem(org.openlca.proto.Proto.Ref value) {
        if (exchangeDqSystemBuilder_ == null) {
          if (exchangeDqSystem_ != null) {
            exchangeDqSystem_ =
              org.openlca.proto.Proto.Ref.newBuilder(exchangeDqSystem_).mergeFrom(value).buildPartial();
          } else {
            exchangeDqSystem_ = value;
          }
          onChanged();
        } else {
          exchangeDqSystemBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the quality
       * of individual inputs and outputs ([Exchange]s) of the process can be
       * assessed.
       * </pre>
       *
       * <code>.protolca.Ref exchange_dq_system = 18;</code>
       */
      public Builder clearExchangeDqSystem() {
        if (exchangeDqSystemBuilder_ == null) {
          exchangeDqSystem_ = null;
          onChanged();
        } else {
          exchangeDqSystem_ = null;
          exchangeDqSystemBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the quality
       * of individual inputs and outputs ([Exchange]s) of the process can be
       * assessed.
       * </pre>
       *
       * <code>.protolca.Ref exchange_dq_system = 18;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getExchangeDqSystemBuilder() {
        
        onChanged();
        return getExchangeDqSystemFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the quality
       * of individual inputs and outputs ([Exchange]s) of the process can be
       * assessed.
       * </pre>
       *
       * <code>.protolca.Ref exchange_dq_system = 18;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getExchangeDqSystemOrBuilder() {
        if (exchangeDqSystemBuilder_ != null) {
          return exchangeDqSystemBuilder_.getMessageOrBuilder();
        } else {
          return exchangeDqSystem_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : exchangeDqSystem_;
        }
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the quality
       * of individual inputs and outputs ([Exchange]s) of the process can be
       * assessed.
       * </pre>
       *
       * <code>.protolca.Ref exchange_dq_system = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getExchangeDqSystemFieldBuilder() {
        if (exchangeDqSystemBuilder_ == null) {
          exchangeDqSystemBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getExchangeDqSystem(),
                  getParentForChildren(),
                  isClean());
          exchangeDqSystem_ = null;
        }
        return exchangeDqSystemBuilder_;
      }

      private org.openlca.proto.Proto.Ref socialDqSystem_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> socialDqSystemBuilder_;
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the quality
       * of individual social aspects of the process can be assessed.
       * </pre>
       *
       * <code>.protolca.Ref social_dq_system = 19;</code>
       * @return Whether the socialDqSystem field is set.
       */
      public boolean hasSocialDqSystem() {
        return socialDqSystemBuilder_ != null || socialDqSystem_ != null;
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the quality
       * of individual social aspects of the process can be assessed.
       * </pre>
       *
       * <code>.protolca.Ref social_dq_system = 19;</code>
       * @return The socialDqSystem.
       */
      public org.openlca.proto.Proto.Ref getSocialDqSystem() {
        if (socialDqSystemBuilder_ == null) {
          return socialDqSystem_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : socialDqSystem_;
        } else {
          return socialDqSystemBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the quality
       * of individual social aspects of the process can be assessed.
       * </pre>
       *
       * <code>.protolca.Ref social_dq_system = 19;</code>
       */
      public Builder setSocialDqSystem(org.openlca.proto.Proto.Ref value) {
        if (socialDqSystemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          socialDqSystem_ = value;
          onChanged();
        } else {
          socialDqSystemBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the quality
       * of individual social aspects of the process can be assessed.
       * </pre>
       *
       * <code>.protolca.Ref social_dq_system = 19;</code>
       */
      public Builder setSocialDqSystem(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (socialDqSystemBuilder_ == null) {
          socialDqSystem_ = builderForValue.build();
          onChanged();
        } else {
          socialDqSystemBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the quality
       * of individual social aspects of the process can be assessed.
       * </pre>
       *
       * <code>.protolca.Ref social_dq_system = 19;</code>
       */
      public Builder mergeSocialDqSystem(org.openlca.proto.Proto.Ref value) {
        if (socialDqSystemBuilder_ == null) {
          if (socialDqSystem_ != null) {
            socialDqSystem_ =
              org.openlca.proto.Proto.Ref.newBuilder(socialDqSystem_).mergeFrom(value).buildPartial();
          } else {
            socialDqSystem_ = value;
          }
          onChanged();
        } else {
          socialDqSystemBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the quality
       * of individual social aspects of the process can be assessed.
       * </pre>
       *
       * <code>.protolca.Ref social_dq_system = 19;</code>
       */
      public Builder clearSocialDqSystem() {
        if (socialDqSystemBuilder_ == null) {
          socialDqSystem_ = null;
          onChanged();
        } else {
          socialDqSystem_ = null;
          socialDqSystemBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the quality
       * of individual social aspects of the process can be assessed.
       * </pre>
       *
       * <code>.protolca.Ref social_dq_system = 19;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getSocialDqSystemBuilder() {
        
        onChanged();
        return getSocialDqSystemFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the quality
       * of individual social aspects of the process can be assessed.
       * </pre>
       *
       * <code>.protolca.Ref social_dq_system = 19;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getSocialDqSystemOrBuilder() {
        if (socialDqSystemBuilder_ != null) {
          return socialDqSystemBuilder_.getMessageOrBuilder();
        } else {
          return socialDqSystem_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : socialDqSystem_;
        }
      }
      /**
       * <pre>
       * A reference to a data quality system ([DqSystem]) with which the quality
       * of individual social aspects of the process can be assessed.
       * </pre>
       *
       * <code>.protolca.Ref social_dq_system = 19;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getSocialDqSystemFieldBuilder() {
        if (socialDqSystemBuilder_ == null) {
          socialDqSystemBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getSocialDqSystem(),
                  getParentForChildren(),
                  isClean());
          socialDqSystem_ = null;
        }
        return socialDqSystemBuilder_;
      }

      private java.lang.Object dqEntry_ = "";
      /**
       * <pre>
       * A data quality entry like `(1;3;2;5;1)`. The entry is a vector of data
       * quality values that need to match the overall data quality system of the
       * process (the system that is stored in the `dqSystem` property). In such a
       * system the data quality indicators have fixed positions and the respective
       * values in the `dqEntry` vector map to these positions.
       * </pre>
       *
       * <code>string dq_entry = 20;</code>
       * @return The dqEntry.
       */
      public java.lang.String getDqEntry() {
        java.lang.Object ref = dqEntry_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dqEntry_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A data quality entry like `(1;3;2;5;1)`. The entry is a vector of data
       * quality values that need to match the overall data quality system of the
       * process (the system that is stored in the `dqSystem` property). In such a
       * system the data quality indicators have fixed positions and the respective
       * values in the `dqEntry` vector map to these positions.
       * </pre>
       *
       * <code>string dq_entry = 20;</code>
       * @return The bytes for dqEntry.
       */
      public com.google.protobuf.ByteString
          getDqEntryBytes() {
        java.lang.Object ref = dqEntry_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dqEntry_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A data quality entry like `(1;3;2;5;1)`. The entry is a vector of data
       * quality values that need to match the overall data quality system of the
       * process (the system that is stored in the `dqSystem` property). In such a
       * system the data quality indicators have fixed positions and the respective
       * values in the `dqEntry` vector map to these positions.
       * </pre>
       *
       * <code>string dq_entry = 20;</code>
       * @param value The dqEntry to set.
       * @return This builder for chaining.
       */
      public Builder setDqEntry(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dqEntry_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A data quality entry like `(1;3;2;5;1)`. The entry is a vector of data
       * quality values that need to match the overall data quality system of the
       * process (the system that is stored in the `dqSystem` property). In such a
       * system the data quality indicators have fixed positions and the respective
       * values in the `dqEntry` vector map to these positions.
       * </pre>
       *
       * <code>string dq_entry = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearDqEntry() {
        
        dqEntry_ = getDefaultInstance().getDqEntry();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A data quality entry like `(1;3;2;5;1)`. The entry is a vector of data
       * quality values that need to match the overall data quality system of the
       * process (the system that is stored in the `dqSystem` property). In such a
       * system the data quality indicators have fixed positions and the respective
       * values in the `dqEntry` vector map to these positions.
       * </pre>
       *
       * <code>string dq_entry = 20;</code>
       * @param value The bytes for dqEntry to set.
       * @return This builder for chaining.
       */
      public Builder setDqEntryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dqEntry_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.Process)
    }

    // @@protoc_insertion_point(class_scope:protolca.Process)
    private static final org.openlca.proto.Proto.Process DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.Process();
    }

    public static org.openlca.proto.Proto.Process getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Process>
        PARSER = new com.google.protobuf.AbstractParser<Process>() {
      @java.lang.Override
      public Process parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Process(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Process> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Process> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.Process getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProcessDocumentationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.ProcessDocumentation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <code>string time_description = 2;</code>
     * @return The timeDescription.
     */
    java.lang.String getTimeDescription();
    /**
     * <code>string time_description = 2;</code>
     * @return The bytes for timeDescription.
     */
    com.google.protobuf.ByteString
        getTimeDescriptionBytes();

    /**
     * <code>string valid_until = 3;</code>
     * @return The validUntil.
     */
    java.lang.String getValidUntil();
    /**
     * <code>string valid_until = 3;</code>
     * @return The bytes for validUntil.
     */
    com.google.protobuf.ByteString
        getValidUntilBytes();

    /**
     * <code>string valid_from = 4;</code>
     * @return The validFrom.
     */
    java.lang.String getValidFrom();
    /**
     * <code>string valid_from = 4;</code>
     * @return The bytes for validFrom.
     */
    com.google.protobuf.ByteString
        getValidFromBytes();

    /**
     * <code>string technology_description = 5;</code>
     * @return The technologyDescription.
     */
    java.lang.String getTechnologyDescription();
    /**
     * <code>string technology_description = 5;</code>
     * @return The bytes for technologyDescription.
     */
    com.google.protobuf.ByteString
        getTechnologyDescriptionBytes();

    /**
     * <code>string data_collection_description = 6;</code>
     * @return The dataCollectionDescription.
     */
    java.lang.String getDataCollectionDescription();
    /**
     * <code>string data_collection_description = 6;</code>
     * @return The bytes for dataCollectionDescription.
     */
    com.google.protobuf.ByteString
        getDataCollectionDescriptionBytes();

    /**
     * <code>string completeness_description = 7;</code>
     * @return The completenessDescription.
     */
    java.lang.String getCompletenessDescription();
    /**
     * <code>string completeness_description = 7;</code>
     * @return The bytes for completenessDescription.
     */
    com.google.protobuf.ByteString
        getCompletenessDescriptionBytes();

    /**
     * <code>string data_selection_description = 8;</code>
     * @return The dataSelectionDescription.
     */
    java.lang.String getDataSelectionDescription();
    /**
     * <code>string data_selection_description = 8;</code>
     * @return The bytes for dataSelectionDescription.
     */
    com.google.protobuf.ByteString
        getDataSelectionDescriptionBytes();

    /**
     * <code>string review_details = 9;</code>
     * @return The reviewDetails.
     */
    java.lang.String getReviewDetails();
    /**
     * <code>string review_details = 9;</code>
     * @return The bytes for reviewDetails.
     */
    com.google.protobuf.ByteString
        getReviewDetailsBytes();

    /**
     * <code>string data_treatment_description = 10;</code>
     * @return The dataTreatmentDescription.
     */
    java.lang.String getDataTreatmentDescription();
    /**
     * <code>string data_treatment_description = 10;</code>
     * @return The bytes for dataTreatmentDescription.
     */
    com.google.protobuf.ByteString
        getDataTreatmentDescriptionBytes();

    /**
     * <code>string inventory_method_description = 11;</code>
     * @return The inventoryMethodDescription.
     */
    java.lang.String getInventoryMethodDescription();
    /**
     * <code>string inventory_method_description = 11;</code>
     * @return The bytes for inventoryMethodDescription.
     */
    com.google.protobuf.ByteString
        getInventoryMethodDescriptionBytes();

    /**
     * <code>string modeling_constants_description = 12;</code>
     * @return The modelingConstantsDescription.
     */
    java.lang.String getModelingConstantsDescription();
    /**
     * <code>string modeling_constants_description = 12;</code>
     * @return The bytes for modelingConstantsDescription.
     */
    com.google.protobuf.ByteString
        getModelingConstantsDescriptionBytes();

    /**
     * <code>.protolca.Ref reviewer = 13;</code>
     * @return Whether the reviewer field is set.
     */
    boolean hasReviewer();
    /**
     * <code>.protolca.Ref reviewer = 13;</code>
     * @return The reviewer.
     */
    org.openlca.proto.Proto.Ref getReviewer();
    /**
     * <code>.protolca.Ref reviewer = 13;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getReviewerOrBuilder();

    /**
     * <code>string sampling_description = 14;</code>
     * @return The samplingDescription.
     */
    java.lang.String getSamplingDescription();
    /**
     * <code>string sampling_description = 14;</code>
     * @return The bytes for samplingDescription.
     */
    com.google.protobuf.ByteString
        getSamplingDescriptionBytes();

    /**
     * <code>repeated .protolca.Ref sources = 15;</code>
     */
    java.util.List<org.openlca.proto.Proto.Ref> 
        getSourcesList();
    /**
     * <code>repeated .protolca.Ref sources = 15;</code>
     */
    org.openlca.proto.Proto.Ref getSources(int index);
    /**
     * <code>repeated .protolca.Ref sources = 15;</code>
     */
    int getSourcesCount();
    /**
     * <code>repeated .protolca.Ref sources = 15;</code>
     */
    java.util.List<? extends org.openlca.proto.Proto.RefOrBuilder> 
        getSourcesOrBuilderList();
    /**
     * <code>repeated .protolca.Ref sources = 15;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getSourcesOrBuilder(
        int index);

    /**
     * <code>string restrictions_description = 16;</code>
     * @return The restrictionsDescription.
     */
    java.lang.String getRestrictionsDescription();
    /**
     * <code>string restrictions_description = 16;</code>
     * @return The bytes for restrictionsDescription.
     */
    com.google.protobuf.ByteString
        getRestrictionsDescriptionBytes();

    /**
     * <code>bool copyright = 17;</code>
     * @return The copyright.
     */
    boolean getCopyright();

    /**
     * <code>string creation_date = 18;</code>
     * @return The creationDate.
     */
    java.lang.String getCreationDate();
    /**
     * <code>string creation_date = 18;</code>
     * @return The bytes for creationDate.
     */
    com.google.protobuf.ByteString
        getCreationDateBytes();

    /**
     * <code>.protolca.Ref data_documentor = 19;</code>
     * @return Whether the dataDocumentor field is set.
     */
    boolean hasDataDocumentor();
    /**
     * <code>.protolca.Ref data_documentor = 19;</code>
     * @return The dataDocumentor.
     */
    org.openlca.proto.Proto.Ref getDataDocumentor();
    /**
     * <code>.protolca.Ref data_documentor = 19;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getDataDocumentorOrBuilder();

    /**
     * <code>.protolca.Ref data_generator = 20;</code>
     * @return Whether the dataGenerator field is set.
     */
    boolean hasDataGenerator();
    /**
     * <code>.protolca.Ref data_generator = 20;</code>
     * @return The dataGenerator.
     */
    org.openlca.proto.Proto.Ref getDataGenerator();
    /**
     * <code>.protolca.Ref data_generator = 20;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getDataGeneratorOrBuilder();

    /**
     * <code>.protolca.Ref data_set_owner = 21;</code>
     * @return Whether the dataSetOwner field is set.
     */
    boolean hasDataSetOwner();
    /**
     * <code>.protolca.Ref data_set_owner = 21;</code>
     * @return The dataSetOwner.
     */
    org.openlca.proto.Proto.Ref getDataSetOwner();
    /**
     * <code>.protolca.Ref data_set_owner = 21;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getDataSetOwnerOrBuilder();

    /**
     * <code>string intended_application = 22;</code>
     * @return The intendedApplication.
     */
    java.lang.String getIntendedApplication();
    /**
     * <code>string intended_application = 22;</code>
     * @return The bytes for intendedApplication.
     */
    com.google.protobuf.ByteString
        getIntendedApplicationBytes();

    /**
     * <code>string project_description = 23;</code>
     * @return The projectDescription.
     */
    java.lang.String getProjectDescription();
    /**
     * <code>string project_description = 23;</code>
     * @return The bytes for projectDescription.
     */
    com.google.protobuf.ByteString
        getProjectDescriptionBytes();

    /**
     * <code>.protolca.Ref publication = 24;</code>
     * @return Whether the publication field is set.
     */
    boolean hasPublication();
    /**
     * <code>.protolca.Ref publication = 24;</code>
     * @return The publication.
     */
    org.openlca.proto.Proto.Ref getPublication();
    /**
     * <code>.protolca.Ref publication = 24;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getPublicationOrBuilder();

    /**
     * <code>string geography_description = 25;</code>
     * @return The geographyDescription.
     */
    java.lang.String getGeographyDescription();
    /**
     * <code>string geography_description = 25;</code>
     * @return The bytes for geographyDescription.
     */
    com.google.protobuf.ByteString
        getGeographyDescriptionBytes();
  }
  /**
   * Protobuf type {@code protolca.ProcessDocumentation}
   */
  public static final class ProcessDocumentation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.ProcessDocumentation)
      ProcessDocumentationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProcessDocumentation.newBuilder() to construct.
    private ProcessDocumentation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProcessDocumentation() {
      type_ = "";
      timeDescription_ = "";
      validUntil_ = "";
      validFrom_ = "";
      technologyDescription_ = "";
      dataCollectionDescription_ = "";
      completenessDescription_ = "";
      dataSelectionDescription_ = "";
      reviewDetails_ = "";
      dataTreatmentDescription_ = "";
      inventoryMethodDescription_ = "";
      modelingConstantsDescription_ = "";
      samplingDescription_ = "";
      sources_ = java.util.Collections.emptyList();
      restrictionsDescription_ = "";
      creationDate_ = "";
      intendedApplication_ = "";
      projectDescription_ = "";
      geographyDescription_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProcessDocumentation();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ProcessDocumentation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              timeDescription_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              validUntil_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              validFrom_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              technologyDescription_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              dataCollectionDescription_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              completenessDescription_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              dataSelectionDescription_ = s;
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              reviewDetails_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              dataTreatmentDescription_ = s;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              inventoryMethodDescription_ = s;
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              modelingConstantsDescription_ = s;
              break;
            }
            case 106: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (reviewer_ != null) {
                subBuilder = reviewer_.toBuilder();
              }
              reviewer_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(reviewer_);
                reviewer_ = subBuilder.buildPartial();
              }

              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();

              samplingDescription_ = s;
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                sources_ = new java.util.ArrayList<org.openlca.proto.Proto.Ref>();
                mutable_bitField0_ |= 0x00000001;
              }
              sources_.add(
                  input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry));
              break;
            }
            case 130: {
              java.lang.String s = input.readStringRequireUtf8();

              restrictionsDescription_ = s;
              break;
            }
            case 136: {

              copyright_ = input.readBool();
              break;
            }
            case 146: {
              java.lang.String s = input.readStringRequireUtf8();

              creationDate_ = s;
              break;
            }
            case 154: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (dataDocumentor_ != null) {
                subBuilder = dataDocumentor_.toBuilder();
              }
              dataDocumentor_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dataDocumentor_);
                dataDocumentor_ = subBuilder.buildPartial();
              }

              break;
            }
            case 162: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (dataGenerator_ != null) {
                subBuilder = dataGenerator_.toBuilder();
              }
              dataGenerator_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dataGenerator_);
                dataGenerator_ = subBuilder.buildPartial();
              }

              break;
            }
            case 170: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (dataSetOwner_ != null) {
                subBuilder = dataSetOwner_.toBuilder();
              }
              dataSetOwner_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dataSetOwner_);
                dataSetOwner_ = subBuilder.buildPartial();
              }

              break;
            }
            case 178: {
              java.lang.String s = input.readStringRequireUtf8();

              intendedApplication_ = s;
              break;
            }
            case 186: {
              java.lang.String s = input.readStringRequireUtf8();

              projectDescription_ = s;
              break;
            }
            case 194: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (publication_ != null) {
                subBuilder = publication_.toBuilder();
              }
              publication_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(publication_);
                publication_ = subBuilder.buildPartial();
              }

              break;
            }
            case 202: {
              java.lang.String s = input.readStringRequireUtf8();

              geographyDescription_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          sources_ = java.util.Collections.unmodifiableList(sources_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_ProcessDocumentation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_ProcessDocumentation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.ProcessDocumentation.class, org.openlca.proto.Proto.ProcessDocumentation.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIME_DESCRIPTION_FIELD_NUMBER = 2;
    private volatile java.lang.Object timeDescription_;
    /**
     * <code>string time_description = 2;</code>
     * @return The timeDescription.
     */
    @java.lang.Override
    public java.lang.String getTimeDescription() {
      java.lang.Object ref = timeDescription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        timeDescription_ = s;
        return s;
      }
    }
    /**
     * <code>string time_description = 2;</code>
     * @return The bytes for timeDescription.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTimeDescriptionBytes() {
      java.lang.Object ref = timeDescription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        timeDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALID_UNTIL_FIELD_NUMBER = 3;
    private volatile java.lang.Object validUntil_;
    /**
     * <code>string valid_until = 3;</code>
     * @return The validUntil.
     */
    @java.lang.Override
    public java.lang.String getValidUntil() {
      java.lang.Object ref = validUntil_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        validUntil_ = s;
        return s;
      }
    }
    /**
     * <code>string valid_until = 3;</code>
     * @return The bytes for validUntil.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValidUntilBytes() {
      java.lang.Object ref = validUntil_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        validUntil_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALID_FROM_FIELD_NUMBER = 4;
    private volatile java.lang.Object validFrom_;
    /**
     * <code>string valid_from = 4;</code>
     * @return The validFrom.
     */
    @java.lang.Override
    public java.lang.String getValidFrom() {
      java.lang.Object ref = validFrom_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        validFrom_ = s;
        return s;
      }
    }
    /**
     * <code>string valid_from = 4;</code>
     * @return The bytes for validFrom.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValidFromBytes() {
      java.lang.Object ref = validFrom_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        validFrom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TECHNOLOGY_DESCRIPTION_FIELD_NUMBER = 5;
    private volatile java.lang.Object technologyDescription_;
    /**
     * <code>string technology_description = 5;</code>
     * @return The technologyDescription.
     */
    @java.lang.Override
    public java.lang.String getTechnologyDescription() {
      java.lang.Object ref = technologyDescription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        technologyDescription_ = s;
        return s;
      }
    }
    /**
     * <code>string technology_description = 5;</code>
     * @return The bytes for technologyDescription.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTechnologyDescriptionBytes() {
      java.lang.Object ref = technologyDescription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        technologyDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_COLLECTION_DESCRIPTION_FIELD_NUMBER = 6;
    private volatile java.lang.Object dataCollectionDescription_;
    /**
     * <code>string data_collection_description = 6;</code>
     * @return The dataCollectionDescription.
     */
    @java.lang.Override
    public java.lang.String getDataCollectionDescription() {
      java.lang.Object ref = dataCollectionDescription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dataCollectionDescription_ = s;
        return s;
      }
    }
    /**
     * <code>string data_collection_description = 6;</code>
     * @return The bytes for dataCollectionDescription.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDataCollectionDescriptionBytes() {
      java.lang.Object ref = dataCollectionDescription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dataCollectionDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMPLETENESS_DESCRIPTION_FIELD_NUMBER = 7;
    private volatile java.lang.Object completenessDescription_;
    /**
     * <code>string completeness_description = 7;</code>
     * @return The completenessDescription.
     */
    @java.lang.Override
    public java.lang.String getCompletenessDescription() {
      java.lang.Object ref = completenessDescription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        completenessDescription_ = s;
        return s;
      }
    }
    /**
     * <code>string completeness_description = 7;</code>
     * @return The bytes for completenessDescription.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCompletenessDescriptionBytes() {
      java.lang.Object ref = completenessDescription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        completenessDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_SELECTION_DESCRIPTION_FIELD_NUMBER = 8;
    private volatile java.lang.Object dataSelectionDescription_;
    /**
     * <code>string data_selection_description = 8;</code>
     * @return The dataSelectionDescription.
     */
    @java.lang.Override
    public java.lang.String getDataSelectionDescription() {
      java.lang.Object ref = dataSelectionDescription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dataSelectionDescription_ = s;
        return s;
      }
    }
    /**
     * <code>string data_selection_description = 8;</code>
     * @return The bytes for dataSelectionDescription.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDataSelectionDescriptionBytes() {
      java.lang.Object ref = dataSelectionDescription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dataSelectionDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REVIEW_DETAILS_FIELD_NUMBER = 9;
    private volatile java.lang.Object reviewDetails_;
    /**
     * <code>string review_details = 9;</code>
     * @return The reviewDetails.
     */
    @java.lang.Override
    public java.lang.String getReviewDetails() {
      java.lang.Object ref = reviewDetails_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        reviewDetails_ = s;
        return s;
      }
    }
    /**
     * <code>string review_details = 9;</code>
     * @return The bytes for reviewDetails.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getReviewDetailsBytes() {
      java.lang.Object ref = reviewDetails_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reviewDetails_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_TREATMENT_DESCRIPTION_FIELD_NUMBER = 10;
    private volatile java.lang.Object dataTreatmentDescription_;
    /**
     * <code>string data_treatment_description = 10;</code>
     * @return The dataTreatmentDescription.
     */
    @java.lang.Override
    public java.lang.String getDataTreatmentDescription() {
      java.lang.Object ref = dataTreatmentDescription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dataTreatmentDescription_ = s;
        return s;
      }
    }
    /**
     * <code>string data_treatment_description = 10;</code>
     * @return The bytes for dataTreatmentDescription.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDataTreatmentDescriptionBytes() {
      java.lang.Object ref = dataTreatmentDescription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dataTreatmentDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INVENTORY_METHOD_DESCRIPTION_FIELD_NUMBER = 11;
    private volatile java.lang.Object inventoryMethodDescription_;
    /**
     * <code>string inventory_method_description = 11;</code>
     * @return The inventoryMethodDescription.
     */
    @java.lang.Override
    public java.lang.String getInventoryMethodDescription() {
      java.lang.Object ref = inventoryMethodDescription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        inventoryMethodDescription_ = s;
        return s;
      }
    }
    /**
     * <code>string inventory_method_description = 11;</code>
     * @return The bytes for inventoryMethodDescription.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getInventoryMethodDescriptionBytes() {
      java.lang.Object ref = inventoryMethodDescription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        inventoryMethodDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MODELING_CONSTANTS_DESCRIPTION_FIELD_NUMBER = 12;
    private volatile java.lang.Object modelingConstantsDescription_;
    /**
     * <code>string modeling_constants_description = 12;</code>
     * @return The modelingConstantsDescription.
     */
    @java.lang.Override
    public java.lang.String getModelingConstantsDescription() {
      java.lang.Object ref = modelingConstantsDescription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modelingConstantsDescription_ = s;
        return s;
      }
    }
    /**
     * <code>string modeling_constants_description = 12;</code>
     * @return The bytes for modelingConstantsDescription.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getModelingConstantsDescriptionBytes() {
      java.lang.Object ref = modelingConstantsDescription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modelingConstantsDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REVIEWER_FIELD_NUMBER = 13;
    private org.openlca.proto.Proto.Ref reviewer_;
    /**
     * <code>.protolca.Ref reviewer = 13;</code>
     * @return Whether the reviewer field is set.
     */
    @java.lang.Override
    public boolean hasReviewer() {
      return reviewer_ != null;
    }
    /**
     * <code>.protolca.Ref reviewer = 13;</code>
     * @return The reviewer.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getReviewer() {
      return reviewer_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : reviewer_;
    }
    /**
     * <code>.protolca.Ref reviewer = 13;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getReviewerOrBuilder() {
      return getReviewer();
    }

    public static final int SAMPLING_DESCRIPTION_FIELD_NUMBER = 14;
    private volatile java.lang.Object samplingDescription_;
    /**
     * <code>string sampling_description = 14;</code>
     * @return The samplingDescription.
     */
    @java.lang.Override
    public java.lang.String getSamplingDescription() {
      java.lang.Object ref = samplingDescription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        samplingDescription_ = s;
        return s;
      }
    }
    /**
     * <code>string sampling_description = 14;</code>
     * @return The bytes for samplingDescription.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSamplingDescriptionBytes() {
      java.lang.Object ref = samplingDescription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        samplingDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOURCES_FIELD_NUMBER = 15;
    private java.util.List<org.openlca.proto.Proto.Ref> sources_;
    /**
     * <code>repeated .protolca.Ref sources = 15;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.proto.Proto.Ref> getSourcesList() {
      return sources_;
    }
    /**
     * <code>repeated .protolca.Ref sources = 15;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.proto.Proto.RefOrBuilder> 
        getSourcesOrBuilderList() {
      return sources_;
    }
    /**
     * <code>repeated .protolca.Ref sources = 15;</code>
     */
    @java.lang.Override
    public int getSourcesCount() {
      return sources_.size();
    }
    /**
     * <code>repeated .protolca.Ref sources = 15;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getSources(int index) {
      return sources_.get(index);
    }
    /**
     * <code>repeated .protolca.Ref sources = 15;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getSourcesOrBuilder(
        int index) {
      return sources_.get(index);
    }

    public static final int RESTRICTIONS_DESCRIPTION_FIELD_NUMBER = 16;
    private volatile java.lang.Object restrictionsDescription_;
    /**
     * <code>string restrictions_description = 16;</code>
     * @return The restrictionsDescription.
     */
    @java.lang.Override
    public java.lang.String getRestrictionsDescription() {
      java.lang.Object ref = restrictionsDescription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        restrictionsDescription_ = s;
        return s;
      }
    }
    /**
     * <code>string restrictions_description = 16;</code>
     * @return The bytes for restrictionsDescription.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRestrictionsDescriptionBytes() {
      java.lang.Object ref = restrictionsDescription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        restrictionsDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COPYRIGHT_FIELD_NUMBER = 17;
    private boolean copyright_;
    /**
     * <code>bool copyright = 17;</code>
     * @return The copyright.
     */
    @java.lang.Override
    public boolean getCopyright() {
      return copyright_;
    }

    public static final int CREATION_DATE_FIELD_NUMBER = 18;
    private volatile java.lang.Object creationDate_;
    /**
     * <code>string creation_date = 18;</code>
     * @return The creationDate.
     */
    @java.lang.Override
    public java.lang.String getCreationDate() {
      java.lang.Object ref = creationDate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        creationDate_ = s;
        return s;
      }
    }
    /**
     * <code>string creation_date = 18;</code>
     * @return The bytes for creationDate.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCreationDateBytes() {
      java.lang.Object ref = creationDate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        creationDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_DOCUMENTOR_FIELD_NUMBER = 19;
    private org.openlca.proto.Proto.Ref dataDocumentor_;
    /**
     * <code>.protolca.Ref data_documentor = 19;</code>
     * @return Whether the dataDocumentor field is set.
     */
    @java.lang.Override
    public boolean hasDataDocumentor() {
      return dataDocumentor_ != null;
    }
    /**
     * <code>.protolca.Ref data_documentor = 19;</code>
     * @return The dataDocumentor.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getDataDocumentor() {
      return dataDocumentor_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : dataDocumentor_;
    }
    /**
     * <code>.protolca.Ref data_documentor = 19;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getDataDocumentorOrBuilder() {
      return getDataDocumentor();
    }

    public static final int DATA_GENERATOR_FIELD_NUMBER = 20;
    private org.openlca.proto.Proto.Ref dataGenerator_;
    /**
     * <code>.protolca.Ref data_generator = 20;</code>
     * @return Whether the dataGenerator field is set.
     */
    @java.lang.Override
    public boolean hasDataGenerator() {
      return dataGenerator_ != null;
    }
    /**
     * <code>.protolca.Ref data_generator = 20;</code>
     * @return The dataGenerator.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getDataGenerator() {
      return dataGenerator_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : dataGenerator_;
    }
    /**
     * <code>.protolca.Ref data_generator = 20;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getDataGeneratorOrBuilder() {
      return getDataGenerator();
    }

    public static final int DATA_SET_OWNER_FIELD_NUMBER = 21;
    private org.openlca.proto.Proto.Ref dataSetOwner_;
    /**
     * <code>.protolca.Ref data_set_owner = 21;</code>
     * @return Whether the dataSetOwner field is set.
     */
    @java.lang.Override
    public boolean hasDataSetOwner() {
      return dataSetOwner_ != null;
    }
    /**
     * <code>.protolca.Ref data_set_owner = 21;</code>
     * @return The dataSetOwner.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getDataSetOwner() {
      return dataSetOwner_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : dataSetOwner_;
    }
    /**
     * <code>.protolca.Ref data_set_owner = 21;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getDataSetOwnerOrBuilder() {
      return getDataSetOwner();
    }

    public static final int INTENDED_APPLICATION_FIELD_NUMBER = 22;
    private volatile java.lang.Object intendedApplication_;
    /**
     * <code>string intended_application = 22;</code>
     * @return The intendedApplication.
     */
    @java.lang.Override
    public java.lang.String getIntendedApplication() {
      java.lang.Object ref = intendedApplication_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        intendedApplication_ = s;
        return s;
      }
    }
    /**
     * <code>string intended_application = 22;</code>
     * @return The bytes for intendedApplication.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIntendedApplicationBytes() {
      java.lang.Object ref = intendedApplication_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        intendedApplication_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROJECT_DESCRIPTION_FIELD_NUMBER = 23;
    private volatile java.lang.Object projectDescription_;
    /**
     * <code>string project_description = 23;</code>
     * @return The projectDescription.
     */
    @java.lang.Override
    public java.lang.String getProjectDescription() {
      java.lang.Object ref = projectDescription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        projectDescription_ = s;
        return s;
      }
    }
    /**
     * <code>string project_description = 23;</code>
     * @return The bytes for projectDescription.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getProjectDescriptionBytes() {
      java.lang.Object ref = projectDescription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        projectDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PUBLICATION_FIELD_NUMBER = 24;
    private org.openlca.proto.Proto.Ref publication_;
    /**
     * <code>.protolca.Ref publication = 24;</code>
     * @return Whether the publication field is set.
     */
    @java.lang.Override
    public boolean hasPublication() {
      return publication_ != null;
    }
    /**
     * <code>.protolca.Ref publication = 24;</code>
     * @return The publication.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getPublication() {
      return publication_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : publication_;
    }
    /**
     * <code>.protolca.Ref publication = 24;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getPublicationOrBuilder() {
      return getPublication();
    }

    public static final int GEOGRAPHY_DESCRIPTION_FIELD_NUMBER = 25;
    private volatile java.lang.Object geographyDescription_;
    /**
     * <code>string geography_description = 25;</code>
     * @return The geographyDescription.
     */
    @java.lang.Override
    public java.lang.String getGeographyDescription() {
      java.lang.Object ref = geographyDescription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        geographyDescription_ = s;
        return s;
      }
    }
    /**
     * <code>string geography_description = 25;</code>
     * @return The bytes for geographyDescription.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGeographyDescriptionBytes() {
      java.lang.Object ref = geographyDescription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        geographyDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getTimeDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, timeDescription_);
      }
      if (!getValidUntilBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, validUntil_);
      }
      if (!getValidFromBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, validFrom_);
      }
      if (!getTechnologyDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, technologyDescription_);
      }
      if (!getDataCollectionDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, dataCollectionDescription_);
      }
      if (!getCompletenessDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, completenessDescription_);
      }
      if (!getDataSelectionDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, dataSelectionDescription_);
      }
      if (!getReviewDetailsBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, reviewDetails_);
      }
      if (!getDataTreatmentDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, dataTreatmentDescription_);
      }
      if (!getInventoryMethodDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, inventoryMethodDescription_);
      }
      if (!getModelingConstantsDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, modelingConstantsDescription_);
      }
      if (reviewer_ != null) {
        output.writeMessage(13, getReviewer());
      }
      if (!getSamplingDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, samplingDescription_);
      }
      for (int i = 0; i < sources_.size(); i++) {
        output.writeMessage(15, sources_.get(i));
      }
      if (!getRestrictionsDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 16, restrictionsDescription_);
      }
      if (copyright_ != false) {
        output.writeBool(17, copyright_);
      }
      if (!getCreationDateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 18, creationDate_);
      }
      if (dataDocumentor_ != null) {
        output.writeMessage(19, getDataDocumentor());
      }
      if (dataGenerator_ != null) {
        output.writeMessage(20, getDataGenerator());
      }
      if (dataSetOwner_ != null) {
        output.writeMessage(21, getDataSetOwner());
      }
      if (!getIntendedApplicationBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 22, intendedApplication_);
      }
      if (!getProjectDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 23, projectDescription_);
      }
      if (publication_ != null) {
        output.writeMessage(24, getPublication());
      }
      if (!getGeographyDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 25, geographyDescription_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getTimeDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, timeDescription_);
      }
      if (!getValidUntilBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, validUntil_);
      }
      if (!getValidFromBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, validFrom_);
      }
      if (!getTechnologyDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, technologyDescription_);
      }
      if (!getDataCollectionDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, dataCollectionDescription_);
      }
      if (!getCompletenessDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, completenessDescription_);
      }
      if (!getDataSelectionDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, dataSelectionDescription_);
      }
      if (!getReviewDetailsBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, reviewDetails_);
      }
      if (!getDataTreatmentDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, dataTreatmentDescription_);
      }
      if (!getInventoryMethodDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, inventoryMethodDescription_);
      }
      if (!getModelingConstantsDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, modelingConstantsDescription_);
      }
      if (reviewer_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getReviewer());
      }
      if (!getSamplingDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, samplingDescription_);
      }
      for (int i = 0; i < sources_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, sources_.get(i));
      }
      if (!getRestrictionsDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, restrictionsDescription_);
      }
      if (copyright_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, copyright_);
      }
      if (!getCreationDateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, creationDate_);
      }
      if (dataDocumentor_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getDataDocumentor());
      }
      if (dataGenerator_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getDataGenerator());
      }
      if (dataSetOwner_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getDataSetOwner());
      }
      if (!getIntendedApplicationBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(22, intendedApplication_);
      }
      if (!getProjectDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(23, projectDescription_);
      }
      if (publication_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, getPublication());
      }
      if (!getGeographyDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(25, geographyDescription_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.ProcessDocumentation)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.ProcessDocumentation other = (org.openlca.proto.Proto.ProcessDocumentation) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getTimeDescription()
          .equals(other.getTimeDescription())) return false;
      if (!getValidUntil()
          .equals(other.getValidUntil())) return false;
      if (!getValidFrom()
          .equals(other.getValidFrom())) return false;
      if (!getTechnologyDescription()
          .equals(other.getTechnologyDescription())) return false;
      if (!getDataCollectionDescription()
          .equals(other.getDataCollectionDescription())) return false;
      if (!getCompletenessDescription()
          .equals(other.getCompletenessDescription())) return false;
      if (!getDataSelectionDescription()
          .equals(other.getDataSelectionDescription())) return false;
      if (!getReviewDetails()
          .equals(other.getReviewDetails())) return false;
      if (!getDataTreatmentDescription()
          .equals(other.getDataTreatmentDescription())) return false;
      if (!getInventoryMethodDescription()
          .equals(other.getInventoryMethodDescription())) return false;
      if (!getModelingConstantsDescription()
          .equals(other.getModelingConstantsDescription())) return false;
      if (hasReviewer() != other.hasReviewer()) return false;
      if (hasReviewer()) {
        if (!getReviewer()
            .equals(other.getReviewer())) return false;
      }
      if (!getSamplingDescription()
          .equals(other.getSamplingDescription())) return false;
      if (!getSourcesList()
          .equals(other.getSourcesList())) return false;
      if (!getRestrictionsDescription()
          .equals(other.getRestrictionsDescription())) return false;
      if (getCopyright()
          != other.getCopyright()) return false;
      if (!getCreationDate()
          .equals(other.getCreationDate())) return false;
      if (hasDataDocumentor() != other.hasDataDocumentor()) return false;
      if (hasDataDocumentor()) {
        if (!getDataDocumentor()
            .equals(other.getDataDocumentor())) return false;
      }
      if (hasDataGenerator() != other.hasDataGenerator()) return false;
      if (hasDataGenerator()) {
        if (!getDataGenerator()
            .equals(other.getDataGenerator())) return false;
      }
      if (hasDataSetOwner() != other.hasDataSetOwner()) return false;
      if (hasDataSetOwner()) {
        if (!getDataSetOwner()
            .equals(other.getDataSetOwner())) return false;
      }
      if (!getIntendedApplication()
          .equals(other.getIntendedApplication())) return false;
      if (!getProjectDescription()
          .equals(other.getProjectDescription())) return false;
      if (hasPublication() != other.hasPublication()) return false;
      if (hasPublication()) {
        if (!getPublication()
            .equals(other.getPublication())) return false;
      }
      if (!getGeographyDescription()
          .equals(other.getGeographyDescription())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + TIME_DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getTimeDescription().hashCode();
      hash = (37 * hash) + VALID_UNTIL_FIELD_NUMBER;
      hash = (53 * hash) + getValidUntil().hashCode();
      hash = (37 * hash) + VALID_FROM_FIELD_NUMBER;
      hash = (53 * hash) + getValidFrom().hashCode();
      hash = (37 * hash) + TECHNOLOGY_DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getTechnologyDescription().hashCode();
      hash = (37 * hash) + DATA_COLLECTION_DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDataCollectionDescription().hashCode();
      hash = (37 * hash) + COMPLETENESS_DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getCompletenessDescription().hashCode();
      hash = (37 * hash) + DATA_SELECTION_DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDataSelectionDescription().hashCode();
      hash = (37 * hash) + REVIEW_DETAILS_FIELD_NUMBER;
      hash = (53 * hash) + getReviewDetails().hashCode();
      hash = (37 * hash) + DATA_TREATMENT_DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDataTreatmentDescription().hashCode();
      hash = (37 * hash) + INVENTORY_METHOD_DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getInventoryMethodDescription().hashCode();
      hash = (37 * hash) + MODELING_CONSTANTS_DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getModelingConstantsDescription().hashCode();
      if (hasReviewer()) {
        hash = (37 * hash) + REVIEWER_FIELD_NUMBER;
        hash = (53 * hash) + getReviewer().hashCode();
      }
      hash = (37 * hash) + SAMPLING_DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getSamplingDescription().hashCode();
      if (getSourcesCount() > 0) {
        hash = (37 * hash) + SOURCES_FIELD_NUMBER;
        hash = (53 * hash) + getSourcesList().hashCode();
      }
      hash = (37 * hash) + RESTRICTIONS_DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getRestrictionsDescription().hashCode();
      hash = (37 * hash) + COPYRIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCopyright());
      hash = (37 * hash) + CREATION_DATE_FIELD_NUMBER;
      hash = (53 * hash) + getCreationDate().hashCode();
      if (hasDataDocumentor()) {
        hash = (37 * hash) + DATA_DOCUMENTOR_FIELD_NUMBER;
        hash = (53 * hash) + getDataDocumentor().hashCode();
      }
      if (hasDataGenerator()) {
        hash = (37 * hash) + DATA_GENERATOR_FIELD_NUMBER;
        hash = (53 * hash) + getDataGenerator().hashCode();
      }
      if (hasDataSetOwner()) {
        hash = (37 * hash) + DATA_SET_OWNER_FIELD_NUMBER;
        hash = (53 * hash) + getDataSetOwner().hashCode();
      }
      hash = (37 * hash) + INTENDED_APPLICATION_FIELD_NUMBER;
      hash = (53 * hash) + getIntendedApplication().hashCode();
      hash = (37 * hash) + PROJECT_DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getProjectDescription().hashCode();
      if (hasPublication()) {
        hash = (37 * hash) + PUBLICATION_FIELD_NUMBER;
        hash = (53 * hash) + getPublication().hashCode();
      }
      hash = (37 * hash) + GEOGRAPHY_DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getGeographyDescription().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.ProcessDocumentation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ProcessDocumentation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProcessDocumentation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ProcessDocumentation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProcessDocumentation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ProcessDocumentation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProcessDocumentation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ProcessDocumentation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProcessDocumentation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ProcessDocumentation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProcessDocumentation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ProcessDocumentation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.ProcessDocumentation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protolca.ProcessDocumentation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.ProcessDocumentation)
        org.openlca.proto.Proto.ProcessDocumentationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_ProcessDocumentation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_ProcessDocumentation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.ProcessDocumentation.class, org.openlca.proto.Proto.ProcessDocumentation.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.ProcessDocumentation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSourcesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        timeDescription_ = "";

        validUntil_ = "";

        validFrom_ = "";

        technologyDescription_ = "";

        dataCollectionDescription_ = "";

        completenessDescription_ = "";

        dataSelectionDescription_ = "";

        reviewDetails_ = "";

        dataTreatmentDescription_ = "";

        inventoryMethodDescription_ = "";

        modelingConstantsDescription_ = "";

        if (reviewerBuilder_ == null) {
          reviewer_ = null;
        } else {
          reviewer_ = null;
          reviewerBuilder_ = null;
        }
        samplingDescription_ = "";

        if (sourcesBuilder_ == null) {
          sources_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          sourcesBuilder_.clear();
        }
        restrictionsDescription_ = "";

        copyright_ = false;

        creationDate_ = "";

        if (dataDocumentorBuilder_ == null) {
          dataDocumentor_ = null;
        } else {
          dataDocumentor_ = null;
          dataDocumentorBuilder_ = null;
        }
        if (dataGeneratorBuilder_ == null) {
          dataGenerator_ = null;
        } else {
          dataGenerator_ = null;
          dataGeneratorBuilder_ = null;
        }
        if (dataSetOwnerBuilder_ == null) {
          dataSetOwner_ = null;
        } else {
          dataSetOwner_ = null;
          dataSetOwnerBuilder_ = null;
        }
        intendedApplication_ = "";

        projectDescription_ = "";

        if (publicationBuilder_ == null) {
          publication_ = null;
        } else {
          publication_ = null;
          publicationBuilder_ = null;
        }
        geographyDescription_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_ProcessDocumentation_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ProcessDocumentation getDefaultInstanceForType() {
        return org.openlca.proto.Proto.ProcessDocumentation.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ProcessDocumentation build() {
        org.openlca.proto.Proto.ProcessDocumentation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ProcessDocumentation buildPartial() {
        org.openlca.proto.Proto.ProcessDocumentation result = new org.openlca.proto.Proto.ProcessDocumentation(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.timeDescription_ = timeDescription_;
        result.validUntil_ = validUntil_;
        result.validFrom_ = validFrom_;
        result.technologyDescription_ = technologyDescription_;
        result.dataCollectionDescription_ = dataCollectionDescription_;
        result.completenessDescription_ = completenessDescription_;
        result.dataSelectionDescription_ = dataSelectionDescription_;
        result.reviewDetails_ = reviewDetails_;
        result.dataTreatmentDescription_ = dataTreatmentDescription_;
        result.inventoryMethodDescription_ = inventoryMethodDescription_;
        result.modelingConstantsDescription_ = modelingConstantsDescription_;
        if (reviewerBuilder_ == null) {
          result.reviewer_ = reviewer_;
        } else {
          result.reviewer_ = reviewerBuilder_.build();
        }
        result.samplingDescription_ = samplingDescription_;
        if (sourcesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            sources_ = java.util.Collections.unmodifiableList(sources_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.sources_ = sources_;
        } else {
          result.sources_ = sourcesBuilder_.build();
        }
        result.restrictionsDescription_ = restrictionsDescription_;
        result.copyright_ = copyright_;
        result.creationDate_ = creationDate_;
        if (dataDocumentorBuilder_ == null) {
          result.dataDocumentor_ = dataDocumentor_;
        } else {
          result.dataDocumentor_ = dataDocumentorBuilder_.build();
        }
        if (dataGeneratorBuilder_ == null) {
          result.dataGenerator_ = dataGenerator_;
        } else {
          result.dataGenerator_ = dataGeneratorBuilder_.build();
        }
        if (dataSetOwnerBuilder_ == null) {
          result.dataSetOwner_ = dataSetOwner_;
        } else {
          result.dataSetOwner_ = dataSetOwnerBuilder_.build();
        }
        result.intendedApplication_ = intendedApplication_;
        result.projectDescription_ = projectDescription_;
        if (publicationBuilder_ == null) {
          result.publication_ = publication_;
        } else {
          result.publication_ = publicationBuilder_.build();
        }
        result.geographyDescription_ = geographyDescription_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.ProcessDocumentation) {
          return mergeFrom((org.openlca.proto.Proto.ProcessDocumentation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.ProcessDocumentation other) {
        if (other == org.openlca.proto.Proto.ProcessDocumentation.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getTimeDescription().isEmpty()) {
          timeDescription_ = other.timeDescription_;
          onChanged();
        }
        if (!other.getValidUntil().isEmpty()) {
          validUntil_ = other.validUntil_;
          onChanged();
        }
        if (!other.getValidFrom().isEmpty()) {
          validFrom_ = other.validFrom_;
          onChanged();
        }
        if (!other.getTechnologyDescription().isEmpty()) {
          technologyDescription_ = other.technologyDescription_;
          onChanged();
        }
        if (!other.getDataCollectionDescription().isEmpty()) {
          dataCollectionDescription_ = other.dataCollectionDescription_;
          onChanged();
        }
        if (!other.getCompletenessDescription().isEmpty()) {
          completenessDescription_ = other.completenessDescription_;
          onChanged();
        }
        if (!other.getDataSelectionDescription().isEmpty()) {
          dataSelectionDescription_ = other.dataSelectionDescription_;
          onChanged();
        }
        if (!other.getReviewDetails().isEmpty()) {
          reviewDetails_ = other.reviewDetails_;
          onChanged();
        }
        if (!other.getDataTreatmentDescription().isEmpty()) {
          dataTreatmentDescription_ = other.dataTreatmentDescription_;
          onChanged();
        }
        if (!other.getInventoryMethodDescription().isEmpty()) {
          inventoryMethodDescription_ = other.inventoryMethodDescription_;
          onChanged();
        }
        if (!other.getModelingConstantsDescription().isEmpty()) {
          modelingConstantsDescription_ = other.modelingConstantsDescription_;
          onChanged();
        }
        if (other.hasReviewer()) {
          mergeReviewer(other.getReviewer());
        }
        if (!other.getSamplingDescription().isEmpty()) {
          samplingDescription_ = other.samplingDescription_;
          onChanged();
        }
        if (sourcesBuilder_ == null) {
          if (!other.sources_.isEmpty()) {
            if (sources_.isEmpty()) {
              sources_ = other.sources_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSourcesIsMutable();
              sources_.addAll(other.sources_);
            }
            onChanged();
          }
        } else {
          if (!other.sources_.isEmpty()) {
            if (sourcesBuilder_.isEmpty()) {
              sourcesBuilder_.dispose();
              sourcesBuilder_ = null;
              sources_ = other.sources_;
              bitField0_ = (bitField0_ & ~0x00000001);
              sourcesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSourcesFieldBuilder() : null;
            } else {
              sourcesBuilder_.addAllMessages(other.sources_);
            }
          }
        }
        if (!other.getRestrictionsDescription().isEmpty()) {
          restrictionsDescription_ = other.restrictionsDescription_;
          onChanged();
        }
        if (other.getCopyright() != false) {
          setCopyright(other.getCopyright());
        }
        if (!other.getCreationDate().isEmpty()) {
          creationDate_ = other.creationDate_;
          onChanged();
        }
        if (other.hasDataDocumentor()) {
          mergeDataDocumentor(other.getDataDocumentor());
        }
        if (other.hasDataGenerator()) {
          mergeDataGenerator(other.getDataGenerator());
        }
        if (other.hasDataSetOwner()) {
          mergeDataSetOwner(other.getDataSetOwner());
        }
        if (!other.getIntendedApplication().isEmpty()) {
          intendedApplication_ = other.intendedApplication_;
          onChanged();
        }
        if (!other.getProjectDescription().isEmpty()) {
          projectDescription_ = other.projectDescription_;
          onChanged();
        }
        if (other.hasPublication()) {
          mergePublication(other.getPublication());
        }
        if (!other.getGeographyDescription().isEmpty()) {
          geographyDescription_ = other.geographyDescription_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.ProcessDocumentation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.ProcessDocumentation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object timeDescription_ = "";
      /**
       * <code>string time_description = 2;</code>
       * @return The timeDescription.
       */
      public java.lang.String getTimeDescription() {
        java.lang.Object ref = timeDescription_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          timeDescription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string time_description = 2;</code>
       * @return The bytes for timeDescription.
       */
      public com.google.protobuf.ByteString
          getTimeDescriptionBytes() {
        java.lang.Object ref = timeDescription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          timeDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string time_description = 2;</code>
       * @param value The timeDescription to set.
       * @return This builder for chaining.
       */
      public Builder setTimeDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        timeDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string time_description = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeDescription() {
        
        timeDescription_ = getDefaultInstance().getTimeDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string time_description = 2;</code>
       * @param value The bytes for timeDescription to set.
       * @return This builder for chaining.
       */
      public Builder setTimeDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        timeDescription_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object validUntil_ = "";
      /**
       * <code>string valid_until = 3;</code>
       * @return The validUntil.
       */
      public java.lang.String getValidUntil() {
        java.lang.Object ref = validUntil_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          validUntil_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string valid_until = 3;</code>
       * @return The bytes for validUntil.
       */
      public com.google.protobuf.ByteString
          getValidUntilBytes() {
        java.lang.Object ref = validUntil_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          validUntil_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string valid_until = 3;</code>
       * @param value The validUntil to set.
       * @return This builder for chaining.
       */
      public Builder setValidUntil(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        validUntil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string valid_until = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearValidUntil() {
        
        validUntil_ = getDefaultInstance().getValidUntil();
        onChanged();
        return this;
      }
      /**
       * <code>string valid_until = 3;</code>
       * @param value The bytes for validUntil to set.
       * @return This builder for chaining.
       */
      public Builder setValidUntilBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        validUntil_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object validFrom_ = "";
      /**
       * <code>string valid_from = 4;</code>
       * @return The validFrom.
       */
      public java.lang.String getValidFrom() {
        java.lang.Object ref = validFrom_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          validFrom_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string valid_from = 4;</code>
       * @return The bytes for validFrom.
       */
      public com.google.protobuf.ByteString
          getValidFromBytes() {
        java.lang.Object ref = validFrom_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          validFrom_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string valid_from = 4;</code>
       * @param value The validFrom to set.
       * @return This builder for chaining.
       */
      public Builder setValidFrom(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        validFrom_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string valid_from = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearValidFrom() {
        
        validFrom_ = getDefaultInstance().getValidFrom();
        onChanged();
        return this;
      }
      /**
       * <code>string valid_from = 4;</code>
       * @param value The bytes for validFrom to set.
       * @return This builder for chaining.
       */
      public Builder setValidFromBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        validFrom_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object technologyDescription_ = "";
      /**
       * <code>string technology_description = 5;</code>
       * @return The technologyDescription.
       */
      public java.lang.String getTechnologyDescription() {
        java.lang.Object ref = technologyDescription_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          technologyDescription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string technology_description = 5;</code>
       * @return The bytes for technologyDescription.
       */
      public com.google.protobuf.ByteString
          getTechnologyDescriptionBytes() {
        java.lang.Object ref = technologyDescription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          technologyDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string technology_description = 5;</code>
       * @param value The technologyDescription to set.
       * @return This builder for chaining.
       */
      public Builder setTechnologyDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        technologyDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string technology_description = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTechnologyDescription() {
        
        technologyDescription_ = getDefaultInstance().getTechnologyDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string technology_description = 5;</code>
       * @param value The bytes for technologyDescription to set.
       * @return This builder for chaining.
       */
      public Builder setTechnologyDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        technologyDescription_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object dataCollectionDescription_ = "";
      /**
       * <code>string data_collection_description = 6;</code>
       * @return The dataCollectionDescription.
       */
      public java.lang.String getDataCollectionDescription() {
        java.lang.Object ref = dataCollectionDescription_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dataCollectionDescription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string data_collection_description = 6;</code>
       * @return The bytes for dataCollectionDescription.
       */
      public com.google.protobuf.ByteString
          getDataCollectionDescriptionBytes() {
        java.lang.Object ref = dataCollectionDescription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dataCollectionDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string data_collection_description = 6;</code>
       * @param value The dataCollectionDescription to set.
       * @return This builder for chaining.
       */
      public Builder setDataCollectionDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dataCollectionDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string data_collection_description = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataCollectionDescription() {
        
        dataCollectionDescription_ = getDefaultInstance().getDataCollectionDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string data_collection_description = 6;</code>
       * @param value The bytes for dataCollectionDescription to set.
       * @return This builder for chaining.
       */
      public Builder setDataCollectionDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dataCollectionDescription_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object completenessDescription_ = "";
      /**
       * <code>string completeness_description = 7;</code>
       * @return The completenessDescription.
       */
      public java.lang.String getCompletenessDescription() {
        java.lang.Object ref = completenessDescription_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          completenessDescription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string completeness_description = 7;</code>
       * @return The bytes for completenessDescription.
       */
      public com.google.protobuf.ByteString
          getCompletenessDescriptionBytes() {
        java.lang.Object ref = completenessDescription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          completenessDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string completeness_description = 7;</code>
       * @param value The completenessDescription to set.
       * @return This builder for chaining.
       */
      public Builder setCompletenessDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        completenessDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string completeness_description = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCompletenessDescription() {
        
        completenessDescription_ = getDefaultInstance().getCompletenessDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string completeness_description = 7;</code>
       * @param value The bytes for completenessDescription to set.
       * @return This builder for chaining.
       */
      public Builder setCompletenessDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        completenessDescription_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object dataSelectionDescription_ = "";
      /**
       * <code>string data_selection_description = 8;</code>
       * @return The dataSelectionDescription.
       */
      public java.lang.String getDataSelectionDescription() {
        java.lang.Object ref = dataSelectionDescription_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dataSelectionDescription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string data_selection_description = 8;</code>
       * @return The bytes for dataSelectionDescription.
       */
      public com.google.protobuf.ByteString
          getDataSelectionDescriptionBytes() {
        java.lang.Object ref = dataSelectionDescription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dataSelectionDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string data_selection_description = 8;</code>
       * @param value The dataSelectionDescription to set.
       * @return This builder for chaining.
       */
      public Builder setDataSelectionDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dataSelectionDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string data_selection_description = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataSelectionDescription() {
        
        dataSelectionDescription_ = getDefaultInstance().getDataSelectionDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string data_selection_description = 8;</code>
       * @param value The bytes for dataSelectionDescription to set.
       * @return This builder for chaining.
       */
      public Builder setDataSelectionDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dataSelectionDescription_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object reviewDetails_ = "";
      /**
       * <code>string review_details = 9;</code>
       * @return The reviewDetails.
       */
      public java.lang.String getReviewDetails() {
        java.lang.Object ref = reviewDetails_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          reviewDetails_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string review_details = 9;</code>
       * @return The bytes for reviewDetails.
       */
      public com.google.protobuf.ByteString
          getReviewDetailsBytes() {
        java.lang.Object ref = reviewDetails_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          reviewDetails_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string review_details = 9;</code>
       * @param value The reviewDetails to set.
       * @return This builder for chaining.
       */
      public Builder setReviewDetails(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        reviewDetails_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string review_details = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearReviewDetails() {
        
        reviewDetails_ = getDefaultInstance().getReviewDetails();
        onChanged();
        return this;
      }
      /**
       * <code>string review_details = 9;</code>
       * @param value The bytes for reviewDetails to set.
       * @return This builder for chaining.
       */
      public Builder setReviewDetailsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        reviewDetails_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object dataTreatmentDescription_ = "";
      /**
       * <code>string data_treatment_description = 10;</code>
       * @return The dataTreatmentDescription.
       */
      public java.lang.String getDataTreatmentDescription() {
        java.lang.Object ref = dataTreatmentDescription_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dataTreatmentDescription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string data_treatment_description = 10;</code>
       * @return The bytes for dataTreatmentDescription.
       */
      public com.google.protobuf.ByteString
          getDataTreatmentDescriptionBytes() {
        java.lang.Object ref = dataTreatmentDescription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dataTreatmentDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string data_treatment_description = 10;</code>
       * @param value The dataTreatmentDescription to set.
       * @return This builder for chaining.
       */
      public Builder setDataTreatmentDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dataTreatmentDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string data_treatment_description = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataTreatmentDescription() {
        
        dataTreatmentDescription_ = getDefaultInstance().getDataTreatmentDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string data_treatment_description = 10;</code>
       * @param value The bytes for dataTreatmentDescription to set.
       * @return This builder for chaining.
       */
      public Builder setDataTreatmentDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dataTreatmentDescription_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object inventoryMethodDescription_ = "";
      /**
       * <code>string inventory_method_description = 11;</code>
       * @return The inventoryMethodDescription.
       */
      public java.lang.String getInventoryMethodDescription() {
        java.lang.Object ref = inventoryMethodDescription_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          inventoryMethodDescription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string inventory_method_description = 11;</code>
       * @return The bytes for inventoryMethodDescription.
       */
      public com.google.protobuf.ByteString
          getInventoryMethodDescriptionBytes() {
        java.lang.Object ref = inventoryMethodDescription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          inventoryMethodDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string inventory_method_description = 11;</code>
       * @param value The inventoryMethodDescription to set.
       * @return This builder for chaining.
       */
      public Builder setInventoryMethodDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        inventoryMethodDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string inventory_method_description = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearInventoryMethodDescription() {
        
        inventoryMethodDescription_ = getDefaultInstance().getInventoryMethodDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string inventory_method_description = 11;</code>
       * @param value The bytes for inventoryMethodDescription to set.
       * @return This builder for chaining.
       */
      public Builder setInventoryMethodDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        inventoryMethodDescription_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object modelingConstantsDescription_ = "";
      /**
       * <code>string modeling_constants_description = 12;</code>
       * @return The modelingConstantsDescription.
       */
      public java.lang.String getModelingConstantsDescription() {
        java.lang.Object ref = modelingConstantsDescription_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          modelingConstantsDescription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string modeling_constants_description = 12;</code>
       * @return The bytes for modelingConstantsDescription.
       */
      public com.google.protobuf.ByteString
          getModelingConstantsDescriptionBytes() {
        java.lang.Object ref = modelingConstantsDescription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modelingConstantsDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string modeling_constants_description = 12;</code>
       * @param value The modelingConstantsDescription to set.
       * @return This builder for chaining.
       */
      public Builder setModelingConstantsDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        modelingConstantsDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string modeling_constants_description = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearModelingConstantsDescription() {
        
        modelingConstantsDescription_ = getDefaultInstance().getModelingConstantsDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string modeling_constants_description = 12;</code>
       * @param value The bytes for modelingConstantsDescription to set.
       * @return This builder for chaining.
       */
      public Builder setModelingConstantsDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        modelingConstantsDescription_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref reviewer_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> reviewerBuilder_;
      /**
       * <code>.protolca.Ref reviewer = 13;</code>
       * @return Whether the reviewer field is set.
       */
      public boolean hasReviewer() {
        return reviewerBuilder_ != null || reviewer_ != null;
      }
      /**
       * <code>.protolca.Ref reviewer = 13;</code>
       * @return The reviewer.
       */
      public org.openlca.proto.Proto.Ref getReviewer() {
        if (reviewerBuilder_ == null) {
          return reviewer_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : reviewer_;
        } else {
          return reviewerBuilder_.getMessage();
        }
      }
      /**
       * <code>.protolca.Ref reviewer = 13;</code>
       */
      public Builder setReviewer(org.openlca.proto.Proto.Ref value) {
        if (reviewerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          reviewer_ = value;
          onChanged();
        } else {
          reviewerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref reviewer = 13;</code>
       */
      public Builder setReviewer(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (reviewerBuilder_ == null) {
          reviewer_ = builderForValue.build();
          onChanged();
        } else {
          reviewerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protolca.Ref reviewer = 13;</code>
       */
      public Builder mergeReviewer(org.openlca.proto.Proto.Ref value) {
        if (reviewerBuilder_ == null) {
          if (reviewer_ != null) {
            reviewer_ =
              org.openlca.proto.Proto.Ref.newBuilder(reviewer_).mergeFrom(value).buildPartial();
          } else {
            reviewer_ = value;
          }
          onChanged();
        } else {
          reviewerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref reviewer = 13;</code>
       */
      public Builder clearReviewer() {
        if (reviewerBuilder_ == null) {
          reviewer_ = null;
          onChanged();
        } else {
          reviewer_ = null;
          reviewerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protolca.Ref reviewer = 13;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getReviewerBuilder() {
        
        onChanged();
        return getReviewerFieldBuilder().getBuilder();
      }
      /**
       * <code>.protolca.Ref reviewer = 13;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getReviewerOrBuilder() {
        if (reviewerBuilder_ != null) {
          return reviewerBuilder_.getMessageOrBuilder();
        } else {
          return reviewer_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : reviewer_;
        }
      }
      /**
       * <code>.protolca.Ref reviewer = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getReviewerFieldBuilder() {
        if (reviewerBuilder_ == null) {
          reviewerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getReviewer(),
                  getParentForChildren(),
                  isClean());
          reviewer_ = null;
        }
        return reviewerBuilder_;
      }

      private java.lang.Object samplingDescription_ = "";
      /**
       * <code>string sampling_description = 14;</code>
       * @return The samplingDescription.
       */
      public java.lang.String getSamplingDescription() {
        java.lang.Object ref = samplingDescription_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          samplingDescription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string sampling_description = 14;</code>
       * @return The bytes for samplingDescription.
       */
      public com.google.protobuf.ByteString
          getSamplingDescriptionBytes() {
        java.lang.Object ref = samplingDescription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          samplingDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sampling_description = 14;</code>
       * @param value The samplingDescription to set.
       * @return This builder for chaining.
       */
      public Builder setSamplingDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        samplingDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string sampling_description = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearSamplingDescription() {
        
        samplingDescription_ = getDefaultInstance().getSamplingDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string sampling_description = 14;</code>
       * @param value The bytes for samplingDescription to set.
       * @return This builder for chaining.
       */
      public Builder setSamplingDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        samplingDescription_ = value;
        onChanged();
        return this;
      }

      private java.util.List<org.openlca.proto.Proto.Ref> sources_ =
        java.util.Collections.emptyList();
      private void ensureSourcesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          sources_ = new java.util.ArrayList<org.openlca.proto.Proto.Ref>(sources_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> sourcesBuilder_;

      /**
       * <code>repeated .protolca.Ref sources = 15;</code>
       */
      public java.util.List<org.openlca.proto.Proto.Ref> getSourcesList() {
        if (sourcesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sources_);
        } else {
          return sourcesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protolca.Ref sources = 15;</code>
       */
      public int getSourcesCount() {
        if (sourcesBuilder_ == null) {
          return sources_.size();
        } else {
          return sourcesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protolca.Ref sources = 15;</code>
       */
      public org.openlca.proto.Proto.Ref getSources(int index) {
        if (sourcesBuilder_ == null) {
          return sources_.get(index);
        } else {
          return sourcesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protolca.Ref sources = 15;</code>
       */
      public Builder setSources(
          int index, org.openlca.proto.Proto.Ref value) {
        if (sourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSourcesIsMutable();
          sources_.set(index, value);
          onChanged();
        } else {
          sourcesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.Ref sources = 15;</code>
       */
      public Builder setSources(
          int index, org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (sourcesBuilder_ == null) {
          ensureSourcesIsMutable();
          sources_.set(index, builderForValue.build());
          onChanged();
        } else {
          sourcesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.Ref sources = 15;</code>
       */
      public Builder addSources(org.openlca.proto.Proto.Ref value) {
        if (sourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSourcesIsMutable();
          sources_.add(value);
          onChanged();
        } else {
          sourcesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.Ref sources = 15;</code>
       */
      public Builder addSources(
          int index, org.openlca.proto.Proto.Ref value) {
        if (sourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSourcesIsMutable();
          sources_.add(index, value);
          onChanged();
        } else {
          sourcesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.Ref sources = 15;</code>
       */
      public Builder addSources(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (sourcesBuilder_ == null) {
          ensureSourcesIsMutable();
          sources_.add(builderForValue.build());
          onChanged();
        } else {
          sourcesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.Ref sources = 15;</code>
       */
      public Builder addSources(
          int index, org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (sourcesBuilder_ == null) {
          ensureSourcesIsMutable();
          sources_.add(index, builderForValue.build());
          onChanged();
        } else {
          sourcesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.Ref sources = 15;</code>
       */
      public Builder addAllSources(
          java.lang.Iterable<? extends org.openlca.proto.Proto.Ref> values) {
        if (sourcesBuilder_ == null) {
          ensureSourcesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sources_);
          onChanged();
        } else {
          sourcesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.Ref sources = 15;</code>
       */
      public Builder clearSources() {
        if (sourcesBuilder_ == null) {
          sources_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          sourcesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protolca.Ref sources = 15;</code>
       */
      public Builder removeSources(int index) {
        if (sourcesBuilder_ == null) {
          ensureSourcesIsMutable();
          sources_.remove(index);
          onChanged();
        } else {
          sourcesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.Ref sources = 15;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getSourcesBuilder(
          int index) {
        return getSourcesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protolca.Ref sources = 15;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getSourcesOrBuilder(
          int index) {
        if (sourcesBuilder_ == null) {
          return sources_.get(index);  } else {
          return sourcesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protolca.Ref sources = 15;</code>
       */
      public java.util.List<? extends org.openlca.proto.Proto.RefOrBuilder> 
           getSourcesOrBuilderList() {
        if (sourcesBuilder_ != null) {
          return sourcesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sources_);
        }
      }
      /**
       * <code>repeated .protolca.Ref sources = 15;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder addSourcesBuilder() {
        return getSourcesFieldBuilder().addBuilder(
            org.openlca.proto.Proto.Ref.getDefaultInstance());
      }
      /**
       * <code>repeated .protolca.Ref sources = 15;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder addSourcesBuilder(
          int index) {
        return getSourcesFieldBuilder().addBuilder(
            index, org.openlca.proto.Proto.Ref.getDefaultInstance());
      }
      /**
       * <code>repeated .protolca.Ref sources = 15;</code>
       */
      public java.util.List<org.openlca.proto.Proto.Ref.Builder> 
           getSourcesBuilderList() {
        return getSourcesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getSourcesFieldBuilder() {
        if (sourcesBuilder_ == null) {
          sourcesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  sources_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          sources_ = null;
        }
        return sourcesBuilder_;
      }

      private java.lang.Object restrictionsDescription_ = "";
      /**
       * <code>string restrictions_description = 16;</code>
       * @return The restrictionsDescription.
       */
      public java.lang.String getRestrictionsDescription() {
        java.lang.Object ref = restrictionsDescription_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          restrictionsDescription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string restrictions_description = 16;</code>
       * @return The bytes for restrictionsDescription.
       */
      public com.google.protobuf.ByteString
          getRestrictionsDescriptionBytes() {
        java.lang.Object ref = restrictionsDescription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          restrictionsDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string restrictions_description = 16;</code>
       * @param value The restrictionsDescription to set.
       * @return This builder for chaining.
       */
      public Builder setRestrictionsDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        restrictionsDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string restrictions_description = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearRestrictionsDescription() {
        
        restrictionsDescription_ = getDefaultInstance().getRestrictionsDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string restrictions_description = 16;</code>
       * @param value The bytes for restrictionsDescription to set.
       * @return This builder for chaining.
       */
      public Builder setRestrictionsDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        restrictionsDescription_ = value;
        onChanged();
        return this;
      }

      private boolean copyright_ ;
      /**
       * <code>bool copyright = 17;</code>
       * @return The copyright.
       */
      @java.lang.Override
      public boolean getCopyright() {
        return copyright_;
      }
      /**
       * <code>bool copyright = 17;</code>
       * @param value The copyright to set.
       * @return This builder for chaining.
       */
      public Builder setCopyright(boolean value) {
        
        copyright_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool copyright = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearCopyright() {
        
        copyright_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object creationDate_ = "";
      /**
       * <code>string creation_date = 18;</code>
       * @return The creationDate.
       */
      public java.lang.String getCreationDate() {
        java.lang.Object ref = creationDate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          creationDate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string creation_date = 18;</code>
       * @return The bytes for creationDate.
       */
      public com.google.protobuf.ByteString
          getCreationDateBytes() {
        java.lang.Object ref = creationDate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          creationDate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string creation_date = 18;</code>
       * @param value The creationDate to set.
       * @return This builder for chaining.
       */
      public Builder setCreationDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        creationDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string creation_date = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearCreationDate() {
        
        creationDate_ = getDefaultInstance().getCreationDate();
        onChanged();
        return this;
      }
      /**
       * <code>string creation_date = 18;</code>
       * @param value The bytes for creationDate to set.
       * @return This builder for chaining.
       */
      public Builder setCreationDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        creationDate_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref dataDocumentor_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> dataDocumentorBuilder_;
      /**
       * <code>.protolca.Ref data_documentor = 19;</code>
       * @return Whether the dataDocumentor field is set.
       */
      public boolean hasDataDocumentor() {
        return dataDocumentorBuilder_ != null || dataDocumentor_ != null;
      }
      /**
       * <code>.protolca.Ref data_documentor = 19;</code>
       * @return The dataDocumentor.
       */
      public org.openlca.proto.Proto.Ref getDataDocumentor() {
        if (dataDocumentorBuilder_ == null) {
          return dataDocumentor_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : dataDocumentor_;
        } else {
          return dataDocumentorBuilder_.getMessage();
        }
      }
      /**
       * <code>.protolca.Ref data_documentor = 19;</code>
       */
      public Builder setDataDocumentor(org.openlca.proto.Proto.Ref value) {
        if (dataDocumentorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataDocumentor_ = value;
          onChanged();
        } else {
          dataDocumentorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref data_documentor = 19;</code>
       */
      public Builder setDataDocumentor(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (dataDocumentorBuilder_ == null) {
          dataDocumentor_ = builderForValue.build();
          onChanged();
        } else {
          dataDocumentorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protolca.Ref data_documentor = 19;</code>
       */
      public Builder mergeDataDocumentor(org.openlca.proto.Proto.Ref value) {
        if (dataDocumentorBuilder_ == null) {
          if (dataDocumentor_ != null) {
            dataDocumentor_ =
              org.openlca.proto.Proto.Ref.newBuilder(dataDocumentor_).mergeFrom(value).buildPartial();
          } else {
            dataDocumentor_ = value;
          }
          onChanged();
        } else {
          dataDocumentorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref data_documentor = 19;</code>
       */
      public Builder clearDataDocumentor() {
        if (dataDocumentorBuilder_ == null) {
          dataDocumentor_ = null;
          onChanged();
        } else {
          dataDocumentor_ = null;
          dataDocumentorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protolca.Ref data_documentor = 19;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getDataDocumentorBuilder() {
        
        onChanged();
        return getDataDocumentorFieldBuilder().getBuilder();
      }
      /**
       * <code>.protolca.Ref data_documentor = 19;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getDataDocumentorOrBuilder() {
        if (dataDocumentorBuilder_ != null) {
          return dataDocumentorBuilder_.getMessageOrBuilder();
        } else {
          return dataDocumentor_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : dataDocumentor_;
        }
      }
      /**
       * <code>.protolca.Ref data_documentor = 19;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getDataDocumentorFieldBuilder() {
        if (dataDocumentorBuilder_ == null) {
          dataDocumentorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getDataDocumentor(),
                  getParentForChildren(),
                  isClean());
          dataDocumentor_ = null;
        }
        return dataDocumentorBuilder_;
      }

      private org.openlca.proto.Proto.Ref dataGenerator_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> dataGeneratorBuilder_;
      /**
       * <code>.protolca.Ref data_generator = 20;</code>
       * @return Whether the dataGenerator field is set.
       */
      public boolean hasDataGenerator() {
        return dataGeneratorBuilder_ != null || dataGenerator_ != null;
      }
      /**
       * <code>.protolca.Ref data_generator = 20;</code>
       * @return The dataGenerator.
       */
      public org.openlca.proto.Proto.Ref getDataGenerator() {
        if (dataGeneratorBuilder_ == null) {
          return dataGenerator_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : dataGenerator_;
        } else {
          return dataGeneratorBuilder_.getMessage();
        }
      }
      /**
       * <code>.protolca.Ref data_generator = 20;</code>
       */
      public Builder setDataGenerator(org.openlca.proto.Proto.Ref value) {
        if (dataGeneratorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataGenerator_ = value;
          onChanged();
        } else {
          dataGeneratorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref data_generator = 20;</code>
       */
      public Builder setDataGenerator(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (dataGeneratorBuilder_ == null) {
          dataGenerator_ = builderForValue.build();
          onChanged();
        } else {
          dataGeneratorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protolca.Ref data_generator = 20;</code>
       */
      public Builder mergeDataGenerator(org.openlca.proto.Proto.Ref value) {
        if (dataGeneratorBuilder_ == null) {
          if (dataGenerator_ != null) {
            dataGenerator_ =
              org.openlca.proto.Proto.Ref.newBuilder(dataGenerator_).mergeFrom(value).buildPartial();
          } else {
            dataGenerator_ = value;
          }
          onChanged();
        } else {
          dataGeneratorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref data_generator = 20;</code>
       */
      public Builder clearDataGenerator() {
        if (dataGeneratorBuilder_ == null) {
          dataGenerator_ = null;
          onChanged();
        } else {
          dataGenerator_ = null;
          dataGeneratorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protolca.Ref data_generator = 20;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getDataGeneratorBuilder() {
        
        onChanged();
        return getDataGeneratorFieldBuilder().getBuilder();
      }
      /**
       * <code>.protolca.Ref data_generator = 20;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getDataGeneratorOrBuilder() {
        if (dataGeneratorBuilder_ != null) {
          return dataGeneratorBuilder_.getMessageOrBuilder();
        } else {
          return dataGenerator_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : dataGenerator_;
        }
      }
      /**
       * <code>.protolca.Ref data_generator = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getDataGeneratorFieldBuilder() {
        if (dataGeneratorBuilder_ == null) {
          dataGeneratorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getDataGenerator(),
                  getParentForChildren(),
                  isClean());
          dataGenerator_ = null;
        }
        return dataGeneratorBuilder_;
      }

      private org.openlca.proto.Proto.Ref dataSetOwner_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> dataSetOwnerBuilder_;
      /**
       * <code>.protolca.Ref data_set_owner = 21;</code>
       * @return Whether the dataSetOwner field is set.
       */
      public boolean hasDataSetOwner() {
        return dataSetOwnerBuilder_ != null || dataSetOwner_ != null;
      }
      /**
       * <code>.protolca.Ref data_set_owner = 21;</code>
       * @return The dataSetOwner.
       */
      public org.openlca.proto.Proto.Ref getDataSetOwner() {
        if (dataSetOwnerBuilder_ == null) {
          return dataSetOwner_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : dataSetOwner_;
        } else {
          return dataSetOwnerBuilder_.getMessage();
        }
      }
      /**
       * <code>.protolca.Ref data_set_owner = 21;</code>
       */
      public Builder setDataSetOwner(org.openlca.proto.Proto.Ref value) {
        if (dataSetOwnerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataSetOwner_ = value;
          onChanged();
        } else {
          dataSetOwnerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref data_set_owner = 21;</code>
       */
      public Builder setDataSetOwner(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (dataSetOwnerBuilder_ == null) {
          dataSetOwner_ = builderForValue.build();
          onChanged();
        } else {
          dataSetOwnerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protolca.Ref data_set_owner = 21;</code>
       */
      public Builder mergeDataSetOwner(org.openlca.proto.Proto.Ref value) {
        if (dataSetOwnerBuilder_ == null) {
          if (dataSetOwner_ != null) {
            dataSetOwner_ =
              org.openlca.proto.Proto.Ref.newBuilder(dataSetOwner_).mergeFrom(value).buildPartial();
          } else {
            dataSetOwner_ = value;
          }
          onChanged();
        } else {
          dataSetOwnerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref data_set_owner = 21;</code>
       */
      public Builder clearDataSetOwner() {
        if (dataSetOwnerBuilder_ == null) {
          dataSetOwner_ = null;
          onChanged();
        } else {
          dataSetOwner_ = null;
          dataSetOwnerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protolca.Ref data_set_owner = 21;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getDataSetOwnerBuilder() {
        
        onChanged();
        return getDataSetOwnerFieldBuilder().getBuilder();
      }
      /**
       * <code>.protolca.Ref data_set_owner = 21;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getDataSetOwnerOrBuilder() {
        if (dataSetOwnerBuilder_ != null) {
          return dataSetOwnerBuilder_.getMessageOrBuilder();
        } else {
          return dataSetOwner_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : dataSetOwner_;
        }
      }
      /**
       * <code>.protolca.Ref data_set_owner = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getDataSetOwnerFieldBuilder() {
        if (dataSetOwnerBuilder_ == null) {
          dataSetOwnerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getDataSetOwner(),
                  getParentForChildren(),
                  isClean());
          dataSetOwner_ = null;
        }
        return dataSetOwnerBuilder_;
      }

      private java.lang.Object intendedApplication_ = "";
      /**
       * <code>string intended_application = 22;</code>
       * @return The intendedApplication.
       */
      public java.lang.String getIntendedApplication() {
        java.lang.Object ref = intendedApplication_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          intendedApplication_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string intended_application = 22;</code>
       * @return The bytes for intendedApplication.
       */
      public com.google.protobuf.ByteString
          getIntendedApplicationBytes() {
        java.lang.Object ref = intendedApplication_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          intendedApplication_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string intended_application = 22;</code>
       * @param value The intendedApplication to set.
       * @return This builder for chaining.
       */
      public Builder setIntendedApplication(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        intendedApplication_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string intended_application = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearIntendedApplication() {
        
        intendedApplication_ = getDefaultInstance().getIntendedApplication();
        onChanged();
        return this;
      }
      /**
       * <code>string intended_application = 22;</code>
       * @param value The bytes for intendedApplication to set.
       * @return This builder for chaining.
       */
      public Builder setIntendedApplicationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        intendedApplication_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object projectDescription_ = "";
      /**
       * <code>string project_description = 23;</code>
       * @return The projectDescription.
       */
      public java.lang.String getProjectDescription() {
        java.lang.Object ref = projectDescription_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          projectDescription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string project_description = 23;</code>
       * @return The bytes for projectDescription.
       */
      public com.google.protobuf.ByteString
          getProjectDescriptionBytes() {
        java.lang.Object ref = projectDescription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          projectDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string project_description = 23;</code>
       * @param value The projectDescription to set.
       * @return This builder for chaining.
       */
      public Builder setProjectDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        projectDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string project_description = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearProjectDescription() {
        
        projectDescription_ = getDefaultInstance().getProjectDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string project_description = 23;</code>
       * @param value The bytes for projectDescription to set.
       * @return This builder for chaining.
       */
      public Builder setProjectDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        projectDescription_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref publication_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> publicationBuilder_;
      /**
       * <code>.protolca.Ref publication = 24;</code>
       * @return Whether the publication field is set.
       */
      public boolean hasPublication() {
        return publicationBuilder_ != null || publication_ != null;
      }
      /**
       * <code>.protolca.Ref publication = 24;</code>
       * @return The publication.
       */
      public org.openlca.proto.Proto.Ref getPublication() {
        if (publicationBuilder_ == null) {
          return publication_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : publication_;
        } else {
          return publicationBuilder_.getMessage();
        }
      }
      /**
       * <code>.protolca.Ref publication = 24;</code>
       */
      public Builder setPublication(org.openlca.proto.Proto.Ref value) {
        if (publicationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          publication_ = value;
          onChanged();
        } else {
          publicationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref publication = 24;</code>
       */
      public Builder setPublication(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (publicationBuilder_ == null) {
          publication_ = builderForValue.build();
          onChanged();
        } else {
          publicationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protolca.Ref publication = 24;</code>
       */
      public Builder mergePublication(org.openlca.proto.Proto.Ref value) {
        if (publicationBuilder_ == null) {
          if (publication_ != null) {
            publication_ =
              org.openlca.proto.Proto.Ref.newBuilder(publication_).mergeFrom(value).buildPartial();
          } else {
            publication_ = value;
          }
          onChanged();
        } else {
          publicationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref publication = 24;</code>
       */
      public Builder clearPublication() {
        if (publicationBuilder_ == null) {
          publication_ = null;
          onChanged();
        } else {
          publication_ = null;
          publicationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protolca.Ref publication = 24;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getPublicationBuilder() {
        
        onChanged();
        return getPublicationFieldBuilder().getBuilder();
      }
      /**
       * <code>.protolca.Ref publication = 24;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getPublicationOrBuilder() {
        if (publicationBuilder_ != null) {
          return publicationBuilder_.getMessageOrBuilder();
        } else {
          return publication_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : publication_;
        }
      }
      /**
       * <code>.protolca.Ref publication = 24;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getPublicationFieldBuilder() {
        if (publicationBuilder_ == null) {
          publicationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getPublication(),
                  getParentForChildren(),
                  isClean());
          publication_ = null;
        }
        return publicationBuilder_;
      }

      private java.lang.Object geographyDescription_ = "";
      /**
       * <code>string geography_description = 25;</code>
       * @return The geographyDescription.
       */
      public java.lang.String getGeographyDescription() {
        java.lang.Object ref = geographyDescription_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          geographyDescription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string geography_description = 25;</code>
       * @return The bytes for geographyDescription.
       */
      public com.google.protobuf.ByteString
          getGeographyDescriptionBytes() {
        java.lang.Object ref = geographyDescription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          geographyDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string geography_description = 25;</code>
       * @param value The geographyDescription to set.
       * @return This builder for chaining.
       */
      public Builder setGeographyDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        geographyDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string geography_description = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearGeographyDescription() {
        
        geographyDescription_ = getDefaultInstance().getGeographyDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string geography_description = 25;</code>
       * @param value The bytes for geographyDescription to set.
       * @return This builder for chaining.
       */
      public Builder setGeographyDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        geographyDescription_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.ProcessDocumentation)
    }

    // @@protoc_insertion_point(class_scope:protolca.ProcessDocumentation)
    private static final org.openlca.proto.Proto.ProcessDocumentation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.ProcessDocumentation();
    }

    public static org.openlca.proto.Proto.ProcessDocumentation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProcessDocumentation>
        PARSER = new com.google.protobuf.AbstractParser<ProcessDocumentation>() {
      @java.lang.Override
      public ProcessDocumentation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProcessDocumentation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProcessDocumentation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProcessDocumentation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.ProcessDocumentation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProcessLinkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.ProcessLink)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The descriptor of the process that provides a product or a waste
     * treatment.
     * </pre>
     *
     * <code>.protolca.Ref provider = 2;</code>
     * @return Whether the provider field is set.
     */
    boolean hasProvider();
    /**
     * <pre>
     * The descriptor of the process that provides a product or a waste
     * treatment.
     * </pre>
     *
     * <code>.protolca.Ref provider = 2;</code>
     * @return The provider.
     */
    org.openlca.proto.Proto.Ref getProvider();
    /**
     * <pre>
     * The descriptor of the process that provides a product or a waste
     * treatment.
     * </pre>
     *
     * <code>.protolca.Ref provider = 2;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getProviderOrBuilder();

    /**
     * <pre>
     * The descriptor of the flow that is exchanged between the two processes.
     * </pre>
     *
     * <code>.protolca.Ref flow = 3;</code>
     * @return Whether the flow field is set.
     */
    boolean hasFlow();
    /**
     * <pre>
     * The descriptor of the flow that is exchanged between the two processes.
     * </pre>
     *
     * <code>.protolca.Ref flow = 3;</code>
     * @return The flow.
     */
    org.openlca.proto.Proto.Ref getFlow();
    /**
     * <pre>
     * The descriptor of the flow that is exchanged between the two processes.
     * </pre>
     *
     * <code>.protolca.Ref flow = 3;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getFlowOrBuilder();

    /**
     * <pre>
     * The descriptor of the process that is linked to the provider.
     * </pre>
     *
     * <code>.protolca.Ref process = 4;</code>
     * @return Whether the process field is set.
     */
    boolean hasProcess();
    /**
     * <pre>
     * The descriptor of the process that is linked to the provider.
     * </pre>
     *
     * <code>.protolca.Ref process = 4;</code>
     * @return The process.
     */
    org.openlca.proto.Proto.Ref getProcess();
    /**
     * <pre>
     * The descriptor of the process that is linked to the provider.
     * </pre>
     *
     * <code>.protolca.Ref process = 4;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getProcessOrBuilder();

    /**
     * <pre>
     * The exchange of the linked process (this is useful if the linked process
     * has multiple exchanges with the same flow that are linked to different
     * provides, e.g. in an electricity mix).
     * </pre>
     *
     * <code>.protolca.Exchange exchange = 5;</code>
     * @return Whether the exchange field is set.
     */
    boolean hasExchange();
    /**
     * <pre>
     * The exchange of the linked process (this is useful if the linked process
     * has multiple exchanges with the same flow that are linked to different
     * provides, e.g. in an electricity mix).
     * </pre>
     *
     * <code>.protolca.Exchange exchange = 5;</code>
     * @return The exchange.
     */
    org.openlca.proto.Proto.Exchange getExchange();
    /**
     * <pre>
     * The exchange of the linked process (this is useful if the linked process
     * has multiple exchanges with the same flow that are linked to different
     * provides, e.g. in an electricity mix).
     * </pre>
     *
     * <code>.protolca.Exchange exchange = 5;</code>
     */
    org.openlca.proto.Proto.ExchangeOrBuilder getExchangeOrBuilder();
  }
  /**
   * <pre>
   * A process link is a connection between two processes in a product system.
   * </pre>
   *
   * Protobuf type {@code protolca.ProcessLink}
   */
  public static final class ProcessLink extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.ProcessLink)
      ProcessLinkOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProcessLink.newBuilder() to construct.
    private ProcessLink(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProcessLink() {
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProcessLink();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ProcessLink(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (provider_ != null) {
                subBuilder = provider_.toBuilder();
              }
              provider_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(provider_);
                provider_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (flow_ != null) {
                subBuilder = flow_.toBuilder();
              }
              flow_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(flow_);
                flow_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (process_ != null) {
                subBuilder = process_.toBuilder();
              }
              process_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(process_);
                process_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              org.openlca.proto.Proto.Exchange.Builder subBuilder = null;
              if (exchange_ != null) {
                subBuilder = exchange_.toBuilder();
              }
              exchange_ = input.readMessage(org.openlca.proto.Proto.Exchange.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(exchange_);
                exchange_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_ProcessLink_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_ProcessLink_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.ProcessLink.class, org.openlca.proto.Proto.ProcessLink.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROVIDER_FIELD_NUMBER = 2;
    private org.openlca.proto.Proto.Ref provider_;
    /**
     * <pre>
     * The descriptor of the process that provides a product or a waste
     * treatment.
     * </pre>
     *
     * <code>.protolca.Ref provider = 2;</code>
     * @return Whether the provider field is set.
     */
    @java.lang.Override
    public boolean hasProvider() {
      return provider_ != null;
    }
    /**
     * <pre>
     * The descriptor of the process that provides a product or a waste
     * treatment.
     * </pre>
     *
     * <code>.protolca.Ref provider = 2;</code>
     * @return The provider.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getProvider() {
      return provider_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : provider_;
    }
    /**
     * <pre>
     * The descriptor of the process that provides a product or a waste
     * treatment.
     * </pre>
     *
     * <code>.protolca.Ref provider = 2;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getProviderOrBuilder() {
      return getProvider();
    }

    public static final int FLOW_FIELD_NUMBER = 3;
    private org.openlca.proto.Proto.Ref flow_;
    /**
     * <pre>
     * The descriptor of the flow that is exchanged between the two processes.
     * </pre>
     *
     * <code>.protolca.Ref flow = 3;</code>
     * @return Whether the flow field is set.
     */
    @java.lang.Override
    public boolean hasFlow() {
      return flow_ != null;
    }
    /**
     * <pre>
     * The descriptor of the flow that is exchanged between the two processes.
     * </pre>
     *
     * <code>.protolca.Ref flow = 3;</code>
     * @return The flow.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getFlow() {
      return flow_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : flow_;
    }
    /**
     * <pre>
     * The descriptor of the flow that is exchanged between the two processes.
     * </pre>
     *
     * <code>.protolca.Ref flow = 3;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getFlowOrBuilder() {
      return getFlow();
    }

    public static final int PROCESS_FIELD_NUMBER = 4;
    private org.openlca.proto.Proto.Ref process_;
    /**
     * <pre>
     * The descriptor of the process that is linked to the provider.
     * </pre>
     *
     * <code>.protolca.Ref process = 4;</code>
     * @return Whether the process field is set.
     */
    @java.lang.Override
    public boolean hasProcess() {
      return process_ != null;
    }
    /**
     * <pre>
     * The descriptor of the process that is linked to the provider.
     * </pre>
     *
     * <code>.protolca.Ref process = 4;</code>
     * @return The process.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getProcess() {
      return process_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : process_;
    }
    /**
     * <pre>
     * The descriptor of the process that is linked to the provider.
     * </pre>
     *
     * <code>.protolca.Ref process = 4;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getProcessOrBuilder() {
      return getProcess();
    }

    public static final int EXCHANGE_FIELD_NUMBER = 5;
    private org.openlca.proto.Proto.Exchange exchange_;
    /**
     * <pre>
     * The exchange of the linked process (this is useful if the linked process
     * has multiple exchanges with the same flow that are linked to different
     * provides, e.g. in an electricity mix).
     * </pre>
     *
     * <code>.protolca.Exchange exchange = 5;</code>
     * @return Whether the exchange field is set.
     */
    @java.lang.Override
    public boolean hasExchange() {
      return exchange_ != null;
    }
    /**
     * <pre>
     * The exchange of the linked process (this is useful if the linked process
     * has multiple exchanges with the same flow that are linked to different
     * provides, e.g. in an electricity mix).
     * </pre>
     *
     * <code>.protolca.Exchange exchange = 5;</code>
     * @return The exchange.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Exchange getExchange() {
      return exchange_ == null ? org.openlca.proto.Proto.Exchange.getDefaultInstance() : exchange_;
    }
    /**
     * <pre>
     * The exchange of the linked process (this is useful if the linked process
     * has multiple exchanges with the same flow that are linked to different
     * provides, e.g. in an electricity mix).
     * </pre>
     *
     * <code>.protolca.Exchange exchange = 5;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ExchangeOrBuilder getExchangeOrBuilder() {
      return getExchange();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (provider_ != null) {
        output.writeMessage(2, getProvider());
      }
      if (flow_ != null) {
        output.writeMessage(3, getFlow());
      }
      if (process_ != null) {
        output.writeMessage(4, getProcess());
      }
      if (exchange_ != null) {
        output.writeMessage(5, getExchange());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (provider_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getProvider());
      }
      if (flow_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFlow());
      }
      if (process_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getProcess());
      }
      if (exchange_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getExchange());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.ProcessLink)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.ProcessLink other = (org.openlca.proto.Proto.ProcessLink) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (hasProvider() != other.hasProvider()) return false;
      if (hasProvider()) {
        if (!getProvider()
            .equals(other.getProvider())) return false;
      }
      if (hasFlow() != other.hasFlow()) return false;
      if (hasFlow()) {
        if (!getFlow()
            .equals(other.getFlow())) return false;
      }
      if (hasProcess() != other.hasProcess()) return false;
      if (hasProcess()) {
        if (!getProcess()
            .equals(other.getProcess())) return false;
      }
      if (hasExchange() != other.hasExchange()) return false;
      if (hasExchange()) {
        if (!getExchange()
            .equals(other.getExchange())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      if (hasProvider()) {
        hash = (37 * hash) + PROVIDER_FIELD_NUMBER;
        hash = (53 * hash) + getProvider().hashCode();
      }
      if (hasFlow()) {
        hash = (37 * hash) + FLOW_FIELD_NUMBER;
        hash = (53 * hash) + getFlow().hashCode();
      }
      if (hasProcess()) {
        hash = (37 * hash) + PROCESS_FIELD_NUMBER;
        hash = (53 * hash) + getProcess().hashCode();
      }
      if (hasExchange()) {
        hash = (37 * hash) + EXCHANGE_FIELD_NUMBER;
        hash = (53 * hash) + getExchange().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.ProcessLink parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ProcessLink parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProcessLink parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ProcessLink parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProcessLink parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ProcessLink parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProcessLink parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ProcessLink parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProcessLink parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ProcessLink parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProcessLink parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ProcessLink parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.ProcessLink prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A process link is a connection between two processes in a product system.
     * </pre>
     *
     * Protobuf type {@code protolca.ProcessLink}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.ProcessLink)
        org.openlca.proto.Proto.ProcessLinkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_ProcessLink_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_ProcessLink_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.ProcessLink.class, org.openlca.proto.Proto.ProcessLink.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.ProcessLink.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        if (providerBuilder_ == null) {
          provider_ = null;
        } else {
          provider_ = null;
          providerBuilder_ = null;
        }
        if (flowBuilder_ == null) {
          flow_ = null;
        } else {
          flow_ = null;
          flowBuilder_ = null;
        }
        if (processBuilder_ == null) {
          process_ = null;
        } else {
          process_ = null;
          processBuilder_ = null;
        }
        if (exchangeBuilder_ == null) {
          exchange_ = null;
        } else {
          exchange_ = null;
          exchangeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_ProcessLink_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ProcessLink getDefaultInstanceForType() {
        return org.openlca.proto.Proto.ProcessLink.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ProcessLink build() {
        org.openlca.proto.Proto.ProcessLink result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ProcessLink buildPartial() {
        org.openlca.proto.Proto.ProcessLink result = new org.openlca.proto.Proto.ProcessLink(this);
        result.type_ = type_;
        if (providerBuilder_ == null) {
          result.provider_ = provider_;
        } else {
          result.provider_ = providerBuilder_.build();
        }
        if (flowBuilder_ == null) {
          result.flow_ = flow_;
        } else {
          result.flow_ = flowBuilder_.build();
        }
        if (processBuilder_ == null) {
          result.process_ = process_;
        } else {
          result.process_ = processBuilder_.build();
        }
        if (exchangeBuilder_ == null) {
          result.exchange_ = exchange_;
        } else {
          result.exchange_ = exchangeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.ProcessLink) {
          return mergeFrom((org.openlca.proto.Proto.ProcessLink)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.ProcessLink other) {
        if (other == org.openlca.proto.Proto.ProcessLink.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.hasProvider()) {
          mergeProvider(other.getProvider());
        }
        if (other.hasFlow()) {
          mergeFlow(other.getFlow());
        }
        if (other.hasProcess()) {
          mergeProcess(other.getProcess());
        }
        if (other.hasExchange()) {
          mergeExchange(other.getExchange());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.ProcessLink parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.ProcessLink) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref provider_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> providerBuilder_;
      /**
       * <pre>
       * The descriptor of the process that provides a product or a waste
       * treatment.
       * </pre>
       *
       * <code>.protolca.Ref provider = 2;</code>
       * @return Whether the provider field is set.
       */
      public boolean hasProvider() {
        return providerBuilder_ != null || provider_ != null;
      }
      /**
       * <pre>
       * The descriptor of the process that provides a product or a waste
       * treatment.
       * </pre>
       *
       * <code>.protolca.Ref provider = 2;</code>
       * @return The provider.
       */
      public org.openlca.proto.Proto.Ref getProvider() {
        if (providerBuilder_ == null) {
          return provider_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : provider_;
        } else {
          return providerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The descriptor of the process that provides a product or a waste
       * treatment.
       * </pre>
       *
       * <code>.protolca.Ref provider = 2;</code>
       */
      public Builder setProvider(org.openlca.proto.Proto.Ref value) {
        if (providerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          provider_ = value;
          onChanged();
        } else {
          providerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The descriptor of the process that provides a product or a waste
       * treatment.
       * </pre>
       *
       * <code>.protolca.Ref provider = 2;</code>
       */
      public Builder setProvider(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (providerBuilder_ == null) {
          provider_ = builderForValue.build();
          onChanged();
        } else {
          providerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The descriptor of the process that provides a product or a waste
       * treatment.
       * </pre>
       *
       * <code>.protolca.Ref provider = 2;</code>
       */
      public Builder mergeProvider(org.openlca.proto.Proto.Ref value) {
        if (providerBuilder_ == null) {
          if (provider_ != null) {
            provider_ =
              org.openlca.proto.Proto.Ref.newBuilder(provider_).mergeFrom(value).buildPartial();
          } else {
            provider_ = value;
          }
          onChanged();
        } else {
          providerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The descriptor of the process that provides a product or a waste
       * treatment.
       * </pre>
       *
       * <code>.protolca.Ref provider = 2;</code>
       */
      public Builder clearProvider() {
        if (providerBuilder_ == null) {
          provider_ = null;
          onChanged();
        } else {
          provider_ = null;
          providerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The descriptor of the process that provides a product or a waste
       * treatment.
       * </pre>
       *
       * <code>.protolca.Ref provider = 2;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getProviderBuilder() {
        
        onChanged();
        return getProviderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The descriptor of the process that provides a product or a waste
       * treatment.
       * </pre>
       *
       * <code>.protolca.Ref provider = 2;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getProviderOrBuilder() {
        if (providerBuilder_ != null) {
          return providerBuilder_.getMessageOrBuilder();
        } else {
          return provider_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : provider_;
        }
      }
      /**
       * <pre>
       * The descriptor of the process that provides a product or a waste
       * treatment.
       * </pre>
       *
       * <code>.protolca.Ref provider = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getProviderFieldBuilder() {
        if (providerBuilder_ == null) {
          providerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getProvider(),
                  getParentForChildren(),
                  isClean());
          provider_ = null;
        }
        return providerBuilder_;
      }

      private org.openlca.proto.Proto.Ref flow_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> flowBuilder_;
      /**
       * <pre>
       * The descriptor of the flow that is exchanged between the two processes.
       * </pre>
       *
       * <code>.protolca.Ref flow = 3;</code>
       * @return Whether the flow field is set.
       */
      public boolean hasFlow() {
        return flowBuilder_ != null || flow_ != null;
      }
      /**
       * <pre>
       * The descriptor of the flow that is exchanged between the two processes.
       * </pre>
       *
       * <code>.protolca.Ref flow = 3;</code>
       * @return The flow.
       */
      public org.openlca.proto.Proto.Ref getFlow() {
        if (flowBuilder_ == null) {
          return flow_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : flow_;
        } else {
          return flowBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The descriptor of the flow that is exchanged between the two processes.
       * </pre>
       *
       * <code>.protolca.Ref flow = 3;</code>
       */
      public Builder setFlow(org.openlca.proto.Proto.Ref value) {
        if (flowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          flow_ = value;
          onChanged();
        } else {
          flowBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The descriptor of the flow that is exchanged between the two processes.
       * </pre>
       *
       * <code>.protolca.Ref flow = 3;</code>
       */
      public Builder setFlow(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (flowBuilder_ == null) {
          flow_ = builderForValue.build();
          onChanged();
        } else {
          flowBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The descriptor of the flow that is exchanged between the two processes.
       * </pre>
       *
       * <code>.protolca.Ref flow = 3;</code>
       */
      public Builder mergeFlow(org.openlca.proto.Proto.Ref value) {
        if (flowBuilder_ == null) {
          if (flow_ != null) {
            flow_ =
              org.openlca.proto.Proto.Ref.newBuilder(flow_).mergeFrom(value).buildPartial();
          } else {
            flow_ = value;
          }
          onChanged();
        } else {
          flowBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The descriptor of the flow that is exchanged between the two processes.
       * </pre>
       *
       * <code>.protolca.Ref flow = 3;</code>
       */
      public Builder clearFlow() {
        if (flowBuilder_ == null) {
          flow_ = null;
          onChanged();
        } else {
          flow_ = null;
          flowBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The descriptor of the flow that is exchanged between the two processes.
       * </pre>
       *
       * <code>.protolca.Ref flow = 3;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getFlowBuilder() {
        
        onChanged();
        return getFlowFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The descriptor of the flow that is exchanged between the two processes.
       * </pre>
       *
       * <code>.protolca.Ref flow = 3;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getFlowOrBuilder() {
        if (flowBuilder_ != null) {
          return flowBuilder_.getMessageOrBuilder();
        } else {
          return flow_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : flow_;
        }
      }
      /**
       * <pre>
       * The descriptor of the flow that is exchanged between the two processes.
       * </pre>
       *
       * <code>.protolca.Ref flow = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getFlowFieldBuilder() {
        if (flowBuilder_ == null) {
          flowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getFlow(),
                  getParentForChildren(),
                  isClean());
          flow_ = null;
        }
        return flowBuilder_;
      }

      private org.openlca.proto.Proto.Ref process_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> processBuilder_;
      /**
       * <pre>
       * The descriptor of the process that is linked to the provider.
       * </pre>
       *
       * <code>.protolca.Ref process = 4;</code>
       * @return Whether the process field is set.
       */
      public boolean hasProcess() {
        return processBuilder_ != null || process_ != null;
      }
      /**
       * <pre>
       * The descriptor of the process that is linked to the provider.
       * </pre>
       *
       * <code>.protolca.Ref process = 4;</code>
       * @return The process.
       */
      public org.openlca.proto.Proto.Ref getProcess() {
        if (processBuilder_ == null) {
          return process_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : process_;
        } else {
          return processBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The descriptor of the process that is linked to the provider.
       * </pre>
       *
       * <code>.protolca.Ref process = 4;</code>
       */
      public Builder setProcess(org.openlca.proto.Proto.Ref value) {
        if (processBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          process_ = value;
          onChanged();
        } else {
          processBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The descriptor of the process that is linked to the provider.
       * </pre>
       *
       * <code>.protolca.Ref process = 4;</code>
       */
      public Builder setProcess(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (processBuilder_ == null) {
          process_ = builderForValue.build();
          onChanged();
        } else {
          processBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The descriptor of the process that is linked to the provider.
       * </pre>
       *
       * <code>.protolca.Ref process = 4;</code>
       */
      public Builder mergeProcess(org.openlca.proto.Proto.Ref value) {
        if (processBuilder_ == null) {
          if (process_ != null) {
            process_ =
              org.openlca.proto.Proto.Ref.newBuilder(process_).mergeFrom(value).buildPartial();
          } else {
            process_ = value;
          }
          onChanged();
        } else {
          processBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The descriptor of the process that is linked to the provider.
       * </pre>
       *
       * <code>.protolca.Ref process = 4;</code>
       */
      public Builder clearProcess() {
        if (processBuilder_ == null) {
          process_ = null;
          onChanged();
        } else {
          process_ = null;
          processBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The descriptor of the process that is linked to the provider.
       * </pre>
       *
       * <code>.protolca.Ref process = 4;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getProcessBuilder() {
        
        onChanged();
        return getProcessFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The descriptor of the process that is linked to the provider.
       * </pre>
       *
       * <code>.protolca.Ref process = 4;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getProcessOrBuilder() {
        if (processBuilder_ != null) {
          return processBuilder_.getMessageOrBuilder();
        } else {
          return process_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : process_;
        }
      }
      /**
       * <pre>
       * The descriptor of the process that is linked to the provider.
       * </pre>
       *
       * <code>.protolca.Ref process = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getProcessFieldBuilder() {
        if (processBuilder_ == null) {
          processBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getProcess(),
                  getParentForChildren(),
                  isClean());
          process_ = null;
        }
        return processBuilder_;
      }

      private org.openlca.proto.Proto.Exchange exchange_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Exchange, org.openlca.proto.Proto.Exchange.Builder, org.openlca.proto.Proto.ExchangeOrBuilder> exchangeBuilder_;
      /**
       * <pre>
       * The exchange of the linked process (this is useful if the linked process
       * has multiple exchanges with the same flow that are linked to different
       * provides, e.g. in an electricity mix).
       * </pre>
       *
       * <code>.protolca.Exchange exchange = 5;</code>
       * @return Whether the exchange field is set.
       */
      public boolean hasExchange() {
        return exchangeBuilder_ != null || exchange_ != null;
      }
      /**
       * <pre>
       * The exchange of the linked process (this is useful if the linked process
       * has multiple exchanges with the same flow that are linked to different
       * provides, e.g. in an electricity mix).
       * </pre>
       *
       * <code>.protolca.Exchange exchange = 5;</code>
       * @return The exchange.
       */
      public org.openlca.proto.Proto.Exchange getExchange() {
        if (exchangeBuilder_ == null) {
          return exchange_ == null ? org.openlca.proto.Proto.Exchange.getDefaultInstance() : exchange_;
        } else {
          return exchangeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The exchange of the linked process (this is useful if the linked process
       * has multiple exchanges with the same flow that are linked to different
       * provides, e.g. in an electricity mix).
       * </pre>
       *
       * <code>.protolca.Exchange exchange = 5;</code>
       */
      public Builder setExchange(org.openlca.proto.Proto.Exchange value) {
        if (exchangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          exchange_ = value;
          onChanged();
        } else {
          exchangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The exchange of the linked process (this is useful if the linked process
       * has multiple exchanges with the same flow that are linked to different
       * provides, e.g. in an electricity mix).
       * </pre>
       *
       * <code>.protolca.Exchange exchange = 5;</code>
       */
      public Builder setExchange(
          org.openlca.proto.Proto.Exchange.Builder builderForValue) {
        if (exchangeBuilder_ == null) {
          exchange_ = builderForValue.build();
          onChanged();
        } else {
          exchangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The exchange of the linked process (this is useful if the linked process
       * has multiple exchanges with the same flow that are linked to different
       * provides, e.g. in an electricity mix).
       * </pre>
       *
       * <code>.protolca.Exchange exchange = 5;</code>
       */
      public Builder mergeExchange(org.openlca.proto.Proto.Exchange value) {
        if (exchangeBuilder_ == null) {
          if (exchange_ != null) {
            exchange_ =
              org.openlca.proto.Proto.Exchange.newBuilder(exchange_).mergeFrom(value).buildPartial();
          } else {
            exchange_ = value;
          }
          onChanged();
        } else {
          exchangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The exchange of the linked process (this is useful if the linked process
       * has multiple exchanges with the same flow that are linked to different
       * provides, e.g. in an electricity mix).
       * </pre>
       *
       * <code>.protolca.Exchange exchange = 5;</code>
       */
      public Builder clearExchange() {
        if (exchangeBuilder_ == null) {
          exchange_ = null;
          onChanged();
        } else {
          exchange_ = null;
          exchangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The exchange of the linked process (this is useful if the linked process
       * has multiple exchanges with the same flow that are linked to different
       * provides, e.g. in an electricity mix).
       * </pre>
       *
       * <code>.protolca.Exchange exchange = 5;</code>
       */
      public org.openlca.proto.Proto.Exchange.Builder getExchangeBuilder() {
        
        onChanged();
        return getExchangeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The exchange of the linked process (this is useful if the linked process
       * has multiple exchanges with the same flow that are linked to different
       * provides, e.g. in an electricity mix).
       * </pre>
       *
       * <code>.protolca.Exchange exchange = 5;</code>
       */
      public org.openlca.proto.Proto.ExchangeOrBuilder getExchangeOrBuilder() {
        if (exchangeBuilder_ != null) {
          return exchangeBuilder_.getMessageOrBuilder();
        } else {
          return exchange_ == null ?
              org.openlca.proto.Proto.Exchange.getDefaultInstance() : exchange_;
        }
      }
      /**
       * <pre>
       * The exchange of the linked process (this is useful if the linked process
       * has multiple exchanges with the same flow that are linked to different
       * provides, e.g. in an electricity mix).
       * </pre>
       *
       * <code>.protolca.Exchange exchange = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Exchange, org.openlca.proto.Proto.Exchange.Builder, org.openlca.proto.Proto.ExchangeOrBuilder> 
          getExchangeFieldBuilder() {
        if (exchangeBuilder_ == null) {
          exchangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Exchange, org.openlca.proto.Proto.Exchange.Builder, org.openlca.proto.Proto.ExchangeOrBuilder>(
                  getExchange(),
                  getParentForChildren(),
                  isClean());
          exchange_ = null;
        }
        return exchangeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.ProcessLink)
    }

    // @@protoc_insertion_point(class_scope:protolca.ProcessLink)
    private static final org.openlca.proto.Proto.ProcessLink DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.ProcessLink();
    }

    public static org.openlca.proto.Proto.ProcessLink getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProcessLink>
        PARSER = new com.google.protobuf.AbstractParser<ProcessLink>() {
      @java.lang.Override
      public ProcessLink parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProcessLink(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProcessLink> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProcessLink> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.ProcessLink getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProcessRefOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.ProcessRef)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The location name or code of the process.
     * </pre>
     *
     * <code>string location = 1;</code>
     * @return The location.
     */
    java.lang.String getLocation();
    /**
     * <pre>
     * The location name or code of the process.
     * </pre>
     *
     * <code>string location = 1;</code>
     * @return The bytes for location.
     */
    com.google.protobuf.ByteString
        getLocationBytes();

    /**
     * <pre>
     * The type of the process.
     * </pre>
     *
     * <code>.protolca.ProcessType process_type = 2;</code>
     * @return The enum numeric value on the wire for processType.
     */
    int getProcessTypeValue();
    /**
     * <pre>
     * The type of the process.
     * </pre>
     *
     * <code>.protolca.ProcessType process_type = 2;</code>
     * @return The processType.
     */
    org.openlca.proto.Proto.ProcessType getProcessType();
  }
  /**
   * <pre>
   * A reference to a [Process] data set.
   * </pre>
   *
   * Protobuf type {@code protolca.ProcessRef}
   */
  public static final class ProcessRef extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.ProcessRef)
      ProcessRefOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProcessRef.newBuilder() to construct.
    private ProcessRef(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProcessRef() {
      location_ = "";
      processType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProcessRef();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ProcessRef(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              location_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              processType_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_ProcessRef_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_ProcessRef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.ProcessRef.class, org.openlca.proto.Proto.ProcessRef.Builder.class);
    }

    public static final int LOCATION_FIELD_NUMBER = 1;
    private volatile java.lang.Object location_;
    /**
     * <pre>
     * The location name or code of the process.
     * </pre>
     *
     * <code>string location = 1;</code>
     * @return The location.
     */
    @java.lang.Override
    public java.lang.String getLocation() {
      java.lang.Object ref = location_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        location_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The location name or code of the process.
     * </pre>
     *
     * <code>string location = 1;</code>
     * @return The bytes for location.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLocationBytes() {
      java.lang.Object ref = location_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        location_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROCESS_TYPE_FIELD_NUMBER = 2;
    private int processType_;
    /**
     * <pre>
     * The type of the process.
     * </pre>
     *
     * <code>.protolca.ProcessType process_type = 2;</code>
     * @return The enum numeric value on the wire for processType.
     */
    @java.lang.Override public int getProcessTypeValue() {
      return processType_;
    }
    /**
     * <pre>
     * The type of the process.
     * </pre>
     *
     * <code>.protolca.ProcessType process_type = 2;</code>
     * @return The processType.
     */
    @java.lang.Override public org.openlca.proto.Proto.ProcessType getProcessType() {
      @SuppressWarnings("deprecation")
      org.openlca.proto.Proto.ProcessType result = org.openlca.proto.Proto.ProcessType.valueOf(processType_);
      return result == null ? org.openlca.proto.Proto.ProcessType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getLocationBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, location_);
      }
      if (processType_ != org.openlca.proto.Proto.ProcessType.UNDEFINED_PROCESS_TYPE.getNumber()) {
        output.writeEnum(2, processType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getLocationBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, location_);
      }
      if (processType_ != org.openlca.proto.Proto.ProcessType.UNDEFINED_PROCESS_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, processType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.ProcessRef)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.ProcessRef other = (org.openlca.proto.Proto.ProcessRef) obj;

      if (!getLocation()
          .equals(other.getLocation())) return false;
      if (processType_ != other.processType_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getLocation().hashCode();
      hash = (37 * hash) + PROCESS_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + processType_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.ProcessRef parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ProcessRef parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProcessRef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ProcessRef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProcessRef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ProcessRef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProcessRef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ProcessRef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProcessRef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ProcessRef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProcessRef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ProcessRef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.ProcessRef prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A reference to a [Process] data set.
     * </pre>
     *
     * Protobuf type {@code protolca.ProcessRef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.ProcessRef)
        org.openlca.proto.Proto.ProcessRefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_ProcessRef_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_ProcessRef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.ProcessRef.class, org.openlca.proto.Proto.ProcessRef.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.ProcessRef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        location_ = "";

        processType_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_ProcessRef_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ProcessRef getDefaultInstanceForType() {
        return org.openlca.proto.Proto.ProcessRef.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ProcessRef build() {
        org.openlca.proto.Proto.ProcessRef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ProcessRef buildPartial() {
        org.openlca.proto.Proto.ProcessRef result = new org.openlca.proto.Proto.ProcessRef(this);
        result.location_ = location_;
        result.processType_ = processType_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.ProcessRef) {
          return mergeFrom((org.openlca.proto.Proto.ProcessRef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.ProcessRef other) {
        if (other == org.openlca.proto.Proto.ProcessRef.getDefaultInstance()) return this;
        if (!other.getLocation().isEmpty()) {
          location_ = other.location_;
          onChanged();
        }
        if (other.processType_ != 0) {
          setProcessTypeValue(other.getProcessTypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.ProcessRef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.ProcessRef) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object location_ = "";
      /**
       * <pre>
       * The location name or code of the process.
       * </pre>
       *
       * <code>string location = 1;</code>
       * @return The location.
       */
      public java.lang.String getLocation() {
        java.lang.Object ref = location_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          location_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The location name or code of the process.
       * </pre>
       *
       * <code>string location = 1;</code>
       * @return The bytes for location.
       */
      public com.google.protobuf.ByteString
          getLocationBytes() {
        java.lang.Object ref = location_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          location_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The location name or code of the process.
       * </pre>
       *
       * <code>string location = 1;</code>
       * @param value The location to set.
       * @return This builder for chaining.
       */
      public Builder setLocation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        location_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The location name or code of the process.
       * </pre>
       *
       * <code>string location = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLocation() {
        
        location_ = getDefaultInstance().getLocation();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The location name or code of the process.
       * </pre>
       *
       * <code>string location = 1;</code>
       * @param value The bytes for location to set.
       * @return This builder for chaining.
       */
      public Builder setLocationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        location_ = value;
        onChanged();
        return this;
      }

      private int processType_ = 0;
      /**
       * <pre>
       * The type of the process.
       * </pre>
       *
       * <code>.protolca.ProcessType process_type = 2;</code>
       * @return The enum numeric value on the wire for processType.
       */
      @java.lang.Override public int getProcessTypeValue() {
        return processType_;
      }
      /**
       * <pre>
       * The type of the process.
       * </pre>
       *
       * <code>.protolca.ProcessType process_type = 2;</code>
       * @param value The enum numeric value on the wire for processType to set.
       * @return This builder for chaining.
       */
      public Builder setProcessTypeValue(int value) {
        
        processType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of the process.
       * </pre>
       *
       * <code>.protolca.ProcessType process_type = 2;</code>
       * @return The processType.
       */
      @java.lang.Override
      public org.openlca.proto.Proto.ProcessType getProcessType() {
        @SuppressWarnings("deprecation")
        org.openlca.proto.Proto.ProcessType result = org.openlca.proto.Proto.ProcessType.valueOf(processType_);
        return result == null ? org.openlca.proto.Proto.ProcessType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The type of the process.
       * </pre>
       *
       * <code>.protolca.ProcessType process_type = 2;</code>
       * @param value The processType to set.
       * @return This builder for chaining.
       */
      public Builder setProcessType(org.openlca.proto.Proto.ProcessType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        processType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of the process.
       * </pre>
       *
       * <code>.protolca.ProcessType process_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearProcessType() {
        
        processType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.ProcessRef)
    }

    // @@protoc_insertion_point(class_scope:protolca.ProcessRef)
    private static final org.openlca.proto.Proto.ProcessRef DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.ProcessRef();
    }

    public static org.openlca.proto.Proto.ProcessRef getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProcessRef>
        PARSER = new com.google.protobuf.AbstractParser<ProcessRef>() {
      @java.lang.Override
      public ProcessRef parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProcessRef(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProcessRef> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProcessRef> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.ProcessRef getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProductSystemOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.ProductSystem)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    boolean hasCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    org.openlca.proto.Proto.Ref getCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder();

    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    java.util.List<java.lang.String>
        getTagsList();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    int getTagsCount();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    java.lang.String getTags(int index);
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);

    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    java.lang.String getLibrary();
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    com.google.protobuf.ByteString
        getLibraryBytes();

    /**
     * <pre>
     * The descriptors of all processes that are contained in the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessRef processes = 10;</code>
     */
    java.util.List<org.openlca.proto.Proto.ProcessRef> 
        getProcessesList();
    /**
     * <pre>
     * The descriptors of all processes that are contained in the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessRef processes = 10;</code>
     */
    org.openlca.proto.Proto.ProcessRef getProcesses(int index);
    /**
     * <pre>
     * The descriptors of all processes that are contained in the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessRef processes = 10;</code>
     */
    int getProcessesCount();
    /**
     * <pre>
     * The descriptors of all processes that are contained in the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessRef processes = 10;</code>
     */
    java.util.List<? extends org.openlca.proto.Proto.ProcessRefOrBuilder> 
        getProcessesOrBuilderList();
    /**
     * <pre>
     * The descriptors of all processes that are contained in the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessRef processes = 10;</code>
     */
    org.openlca.proto.Proto.ProcessRefOrBuilder getProcessesOrBuilder(
        int index);

    /**
     * <pre>
     * The descriptor of the process that provides the flow of the functional
     * unit of the product system.
     * </pre>
     *
     * <code>.protolca.ProcessRef reference_process = 11;</code>
     * @return Whether the referenceProcess field is set.
     */
    boolean hasReferenceProcess();
    /**
     * <pre>
     * The descriptor of the process that provides the flow of the functional
     * unit of the product system.
     * </pre>
     *
     * <code>.protolca.ProcessRef reference_process = 11;</code>
     * @return The referenceProcess.
     */
    org.openlca.proto.Proto.ProcessRef getReferenceProcess();
    /**
     * <pre>
     * The descriptor of the process that provides the flow of the functional
     * unit of the product system.
     * </pre>
     *
     * <code>.protolca.ProcessRef reference_process = 11;</code>
     */
    org.openlca.proto.Proto.ProcessRefOrBuilder getReferenceProcessOrBuilder();

    /**
     * <pre>
     * The exchange of the reference processes (typically the product output)
     * that provides the flow of the functional unit of the product system.
     * </pre>
     *
     * <code>.protolca.Exchange reference_exchange = 12;</code>
     * @return Whether the referenceExchange field is set.
     */
    boolean hasReferenceExchange();
    /**
     * <pre>
     * The exchange of the reference processes (typically the product output)
     * that provides the flow of the functional unit of the product system.
     * </pre>
     *
     * <code>.protolca.Exchange reference_exchange = 12;</code>
     * @return The referenceExchange.
     */
    org.openlca.proto.Proto.Exchange getReferenceExchange();
    /**
     * <pre>
     * The exchange of the reference processes (typically the product output)
     * that provides the flow of the functional unit of the product system.
     * </pre>
     *
     * <code>.protolca.Exchange reference_exchange = 12;</code>
     */
    org.openlca.proto.Proto.ExchangeOrBuilder getReferenceExchangeOrBuilder();

    /**
     * <pre>
     * The flow amount of the functional unit of the product system.
     * </pre>
     *
     * <code>double target_amount = 13;</code>
     * @return The targetAmount.
     */
    double getTargetAmount();

    /**
     * <pre>
     * The unit in which the flow amount of the functional unit is given.
     * </pre>
     *
     * <code>.protolca.Ref target_unit = 14;</code>
     * @return Whether the targetUnit field is set.
     */
    boolean hasTargetUnit();
    /**
     * <pre>
     * The unit in which the flow amount of the functional unit is given.
     * </pre>
     *
     * <code>.protolca.Ref target_unit = 14;</code>
     * @return The targetUnit.
     */
    org.openlca.proto.Proto.Ref getTargetUnit();
    /**
     * <pre>
     * The unit in which the flow amount of the functional unit is given.
     * </pre>
     *
     * <code>.protolca.Ref target_unit = 14;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getTargetUnitOrBuilder();

    /**
     * <pre>
     * The flow property in which the flow amount of the functional unit is
     * given.
     * </pre>
     *
     * <code>.protolca.Ref target_flow_property = 15;</code>
     * @return Whether the targetFlowProperty field is set.
     */
    boolean hasTargetFlowProperty();
    /**
     * <pre>
     * The flow property in which the flow amount of the functional unit is
     * given.
     * </pre>
     *
     * <code>.protolca.Ref target_flow_property = 15;</code>
     * @return The targetFlowProperty.
     */
    org.openlca.proto.Proto.Ref getTargetFlowProperty();
    /**
     * <pre>
     * The flow property in which the flow amount of the functional unit is
     * given.
     * </pre>
     *
     * <code>.protolca.Ref target_flow_property = 15;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getTargetFlowPropertyOrBuilder();

    /**
     * <pre>
     * The process links of the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessLink process_links = 16;</code>
     */
    java.util.List<org.openlca.proto.Proto.ProcessLink> 
        getProcessLinksList();
    /**
     * <pre>
     * The process links of the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessLink process_links = 16;</code>
     */
    org.openlca.proto.Proto.ProcessLink getProcessLinks(int index);
    /**
     * <pre>
     * The process links of the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessLink process_links = 16;</code>
     */
    int getProcessLinksCount();
    /**
     * <pre>
     * The process links of the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessLink process_links = 16;</code>
     */
    java.util.List<? extends org.openlca.proto.Proto.ProcessLinkOrBuilder> 
        getProcessLinksOrBuilderList();
    /**
     * <pre>
     * The process links of the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessLink process_links = 16;</code>
     */
    org.openlca.proto.Proto.ProcessLinkOrBuilder getProcessLinksOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A product system describes the supply chain of a product (the functional
   * unit) ...
   * </pre>
   *
   * Protobuf type {@code protolca.ProductSystem}
   */
  public static final class ProductSystem extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.ProductSystem)
      ProductSystemOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProductSystem.newBuilder() to construct.
    private ProductSystem(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProductSystem() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      library_ = "";
      processes_ = java.util.Collections.emptyList();
      processLinks_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProductSystem();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ProductSystem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (category_ != null) {
                subBuilder = category_.toBuilder();
              }
              category_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(category_);
                category_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tags_.add(s);
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              library_ = s;
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                processes_ = new java.util.ArrayList<org.openlca.proto.Proto.ProcessRef>();
                mutable_bitField0_ |= 0x00000002;
              }
              processes_.add(
                  input.readMessage(org.openlca.proto.Proto.ProcessRef.parser(), extensionRegistry));
              break;
            }
            case 90: {
              org.openlca.proto.Proto.ProcessRef.Builder subBuilder = null;
              if (referenceProcess_ != null) {
                subBuilder = referenceProcess_.toBuilder();
              }
              referenceProcess_ = input.readMessage(org.openlca.proto.Proto.ProcessRef.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(referenceProcess_);
                referenceProcess_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              org.openlca.proto.Proto.Exchange.Builder subBuilder = null;
              if (referenceExchange_ != null) {
                subBuilder = referenceExchange_.toBuilder();
              }
              referenceExchange_ = input.readMessage(org.openlca.proto.Proto.Exchange.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(referenceExchange_);
                referenceExchange_ = subBuilder.buildPartial();
              }

              break;
            }
            case 105: {

              targetAmount_ = input.readDouble();
              break;
            }
            case 114: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (targetUnit_ != null) {
                subBuilder = targetUnit_.toBuilder();
              }
              targetUnit_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(targetUnit_);
                targetUnit_ = subBuilder.buildPartial();
              }

              break;
            }
            case 122: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (targetFlowProperty_ != null) {
                subBuilder = targetFlowProperty_.toBuilder();
              }
              targetFlowProperty_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(targetFlowProperty_);
                targetFlowProperty_ = subBuilder.buildPartial();
              }

              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                processLinks_ = new java.util.ArrayList<org.openlca.proto.Proto.ProcessLink>();
                mutable_bitField0_ |= 0x00000004;
              }
              processLinks_.add(
                  input.readMessage(org.openlca.proto.Proto.ProcessLink.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          processes_ = java.util.Collections.unmodifiableList(processes_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          processLinks_ = java.util.Collections.unmodifiableList(processLinks_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_ProductSystem_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_ProductSystem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.ProductSystem.class, org.openlca.proto.Proto.ProductSystem.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.Ref category_;
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    @java.lang.Override
    public boolean hasCategory() {
      return category_ != null;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getCategory() {
      return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
      return getCategory();
    }

    public static final int TAGS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    public static final int LIBRARY_FIELD_NUMBER = 9;
    private volatile java.lang.Object library_;
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    @java.lang.Override
    public java.lang.String getLibrary() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        library_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLibraryBytes() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        library_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROCESSES_FIELD_NUMBER = 10;
    private java.util.List<org.openlca.proto.Proto.ProcessRef> processes_;
    /**
     * <pre>
     * The descriptors of all processes that are contained in the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessRef processes = 10;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.proto.Proto.ProcessRef> getProcessesList() {
      return processes_;
    }
    /**
     * <pre>
     * The descriptors of all processes that are contained in the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessRef processes = 10;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.proto.Proto.ProcessRefOrBuilder> 
        getProcessesOrBuilderList() {
      return processes_;
    }
    /**
     * <pre>
     * The descriptors of all processes that are contained in the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessRef processes = 10;</code>
     */
    @java.lang.Override
    public int getProcessesCount() {
      return processes_.size();
    }
    /**
     * <pre>
     * The descriptors of all processes that are contained in the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessRef processes = 10;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ProcessRef getProcesses(int index) {
      return processes_.get(index);
    }
    /**
     * <pre>
     * The descriptors of all processes that are contained in the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessRef processes = 10;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ProcessRefOrBuilder getProcessesOrBuilder(
        int index) {
      return processes_.get(index);
    }

    public static final int REFERENCE_PROCESS_FIELD_NUMBER = 11;
    private org.openlca.proto.Proto.ProcessRef referenceProcess_;
    /**
     * <pre>
     * The descriptor of the process that provides the flow of the functional
     * unit of the product system.
     * </pre>
     *
     * <code>.protolca.ProcessRef reference_process = 11;</code>
     * @return Whether the referenceProcess field is set.
     */
    @java.lang.Override
    public boolean hasReferenceProcess() {
      return referenceProcess_ != null;
    }
    /**
     * <pre>
     * The descriptor of the process that provides the flow of the functional
     * unit of the product system.
     * </pre>
     *
     * <code>.protolca.ProcessRef reference_process = 11;</code>
     * @return The referenceProcess.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ProcessRef getReferenceProcess() {
      return referenceProcess_ == null ? org.openlca.proto.Proto.ProcessRef.getDefaultInstance() : referenceProcess_;
    }
    /**
     * <pre>
     * The descriptor of the process that provides the flow of the functional
     * unit of the product system.
     * </pre>
     *
     * <code>.protolca.ProcessRef reference_process = 11;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ProcessRefOrBuilder getReferenceProcessOrBuilder() {
      return getReferenceProcess();
    }

    public static final int REFERENCE_EXCHANGE_FIELD_NUMBER = 12;
    private org.openlca.proto.Proto.Exchange referenceExchange_;
    /**
     * <pre>
     * The exchange of the reference processes (typically the product output)
     * that provides the flow of the functional unit of the product system.
     * </pre>
     *
     * <code>.protolca.Exchange reference_exchange = 12;</code>
     * @return Whether the referenceExchange field is set.
     */
    @java.lang.Override
    public boolean hasReferenceExchange() {
      return referenceExchange_ != null;
    }
    /**
     * <pre>
     * The exchange of the reference processes (typically the product output)
     * that provides the flow of the functional unit of the product system.
     * </pre>
     *
     * <code>.protolca.Exchange reference_exchange = 12;</code>
     * @return The referenceExchange.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Exchange getReferenceExchange() {
      return referenceExchange_ == null ? org.openlca.proto.Proto.Exchange.getDefaultInstance() : referenceExchange_;
    }
    /**
     * <pre>
     * The exchange of the reference processes (typically the product output)
     * that provides the flow of the functional unit of the product system.
     * </pre>
     *
     * <code>.protolca.Exchange reference_exchange = 12;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ExchangeOrBuilder getReferenceExchangeOrBuilder() {
      return getReferenceExchange();
    }

    public static final int TARGET_AMOUNT_FIELD_NUMBER = 13;
    private double targetAmount_;
    /**
     * <pre>
     * The flow amount of the functional unit of the product system.
     * </pre>
     *
     * <code>double target_amount = 13;</code>
     * @return The targetAmount.
     */
    @java.lang.Override
    public double getTargetAmount() {
      return targetAmount_;
    }

    public static final int TARGET_UNIT_FIELD_NUMBER = 14;
    private org.openlca.proto.Proto.Ref targetUnit_;
    /**
     * <pre>
     * The unit in which the flow amount of the functional unit is given.
     * </pre>
     *
     * <code>.protolca.Ref target_unit = 14;</code>
     * @return Whether the targetUnit field is set.
     */
    @java.lang.Override
    public boolean hasTargetUnit() {
      return targetUnit_ != null;
    }
    /**
     * <pre>
     * The unit in which the flow amount of the functional unit is given.
     * </pre>
     *
     * <code>.protolca.Ref target_unit = 14;</code>
     * @return The targetUnit.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getTargetUnit() {
      return targetUnit_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : targetUnit_;
    }
    /**
     * <pre>
     * The unit in which the flow amount of the functional unit is given.
     * </pre>
     *
     * <code>.protolca.Ref target_unit = 14;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getTargetUnitOrBuilder() {
      return getTargetUnit();
    }

    public static final int TARGET_FLOW_PROPERTY_FIELD_NUMBER = 15;
    private org.openlca.proto.Proto.Ref targetFlowProperty_;
    /**
     * <pre>
     * The flow property in which the flow amount of the functional unit is
     * given.
     * </pre>
     *
     * <code>.protolca.Ref target_flow_property = 15;</code>
     * @return Whether the targetFlowProperty field is set.
     */
    @java.lang.Override
    public boolean hasTargetFlowProperty() {
      return targetFlowProperty_ != null;
    }
    /**
     * <pre>
     * The flow property in which the flow amount of the functional unit is
     * given.
     * </pre>
     *
     * <code>.protolca.Ref target_flow_property = 15;</code>
     * @return The targetFlowProperty.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getTargetFlowProperty() {
      return targetFlowProperty_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : targetFlowProperty_;
    }
    /**
     * <pre>
     * The flow property in which the flow amount of the functional unit is
     * given.
     * </pre>
     *
     * <code>.protolca.Ref target_flow_property = 15;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getTargetFlowPropertyOrBuilder() {
      return getTargetFlowProperty();
    }

    public static final int PROCESS_LINKS_FIELD_NUMBER = 16;
    private java.util.List<org.openlca.proto.Proto.ProcessLink> processLinks_;
    /**
     * <pre>
     * The process links of the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessLink process_links = 16;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.proto.Proto.ProcessLink> getProcessLinksList() {
      return processLinks_;
    }
    /**
     * <pre>
     * The process links of the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessLink process_links = 16;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.proto.Proto.ProcessLinkOrBuilder> 
        getProcessLinksOrBuilderList() {
      return processLinks_;
    }
    /**
     * <pre>
     * The process links of the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessLink process_links = 16;</code>
     */
    @java.lang.Override
    public int getProcessLinksCount() {
      return processLinks_.size();
    }
    /**
     * <pre>
     * The process links of the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessLink process_links = 16;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ProcessLink getProcessLinks(int index) {
      return processLinks_.get(index);
    }
    /**
     * <pre>
     * The process links of the product system.
     * </pre>
     *
     * <code>repeated .protolca.ProcessLink process_links = 16;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ProcessLinkOrBuilder getProcessLinksOrBuilder(
        int index) {
      return processLinks_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (category_ != null) {
        output.writeMessage(7, getCategory());
      }
      for (int i = 0; i < tags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, tags_.getRaw(i));
      }
      if (!getLibraryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, library_);
      }
      for (int i = 0; i < processes_.size(); i++) {
        output.writeMessage(10, processes_.get(i));
      }
      if (referenceProcess_ != null) {
        output.writeMessage(11, getReferenceProcess());
      }
      if (referenceExchange_ != null) {
        output.writeMessage(12, getReferenceExchange());
      }
      if (targetAmount_ != 0D) {
        output.writeDouble(13, targetAmount_);
      }
      if (targetUnit_ != null) {
        output.writeMessage(14, getTargetUnit());
      }
      if (targetFlowProperty_ != null) {
        output.writeMessage(15, getTargetFlowProperty());
      }
      for (int i = 0; i < processLinks_.size(); i++) {
        output.writeMessage(16, processLinks_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (category_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCategory());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += computeStringSizeNoTag(tags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      if (!getLibraryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, library_);
      }
      for (int i = 0; i < processes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, processes_.get(i));
      }
      if (referenceProcess_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getReferenceProcess());
      }
      if (referenceExchange_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getReferenceExchange());
      }
      if (targetAmount_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, targetAmount_);
      }
      if (targetUnit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getTargetUnit());
      }
      if (targetFlowProperty_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getTargetFlowProperty());
      }
      for (int i = 0; i < processLinks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, processLinks_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.ProductSystem)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.ProductSystem other = (org.openlca.proto.Proto.ProductSystem) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (hasCategory() != other.hasCategory()) return false;
      if (hasCategory()) {
        if (!getCategory()
            .equals(other.getCategory())) return false;
      }
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (!getLibrary()
          .equals(other.getLibrary())) return false;
      if (!getProcessesList()
          .equals(other.getProcessesList())) return false;
      if (hasReferenceProcess() != other.hasReferenceProcess()) return false;
      if (hasReferenceProcess()) {
        if (!getReferenceProcess()
            .equals(other.getReferenceProcess())) return false;
      }
      if (hasReferenceExchange() != other.hasReferenceExchange()) return false;
      if (hasReferenceExchange()) {
        if (!getReferenceExchange()
            .equals(other.getReferenceExchange())) return false;
      }
      if (java.lang.Double.doubleToLongBits(getTargetAmount())
          != java.lang.Double.doubleToLongBits(
              other.getTargetAmount())) return false;
      if (hasTargetUnit() != other.hasTargetUnit()) return false;
      if (hasTargetUnit()) {
        if (!getTargetUnit()
            .equals(other.getTargetUnit())) return false;
      }
      if (hasTargetFlowProperty() != other.hasTargetFlowProperty()) return false;
      if (hasTargetFlowProperty()) {
        if (!getTargetFlowProperty()
            .equals(other.getTargetFlowProperty())) return false;
      }
      if (!getProcessLinksList()
          .equals(other.getProcessLinksList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (hasCategory()) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategory().hashCode();
      }
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibrary().hashCode();
      if (getProcessesCount() > 0) {
        hash = (37 * hash) + PROCESSES_FIELD_NUMBER;
        hash = (53 * hash) + getProcessesList().hashCode();
      }
      if (hasReferenceProcess()) {
        hash = (37 * hash) + REFERENCE_PROCESS_FIELD_NUMBER;
        hash = (53 * hash) + getReferenceProcess().hashCode();
      }
      if (hasReferenceExchange()) {
        hash = (37 * hash) + REFERENCE_EXCHANGE_FIELD_NUMBER;
        hash = (53 * hash) + getReferenceExchange().hashCode();
      }
      hash = (37 * hash) + TARGET_AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTargetAmount()));
      if (hasTargetUnit()) {
        hash = (37 * hash) + TARGET_UNIT_FIELD_NUMBER;
        hash = (53 * hash) + getTargetUnit().hashCode();
      }
      if (hasTargetFlowProperty()) {
        hash = (37 * hash) + TARGET_FLOW_PROPERTY_FIELD_NUMBER;
        hash = (53 * hash) + getTargetFlowProperty().hashCode();
      }
      if (getProcessLinksCount() > 0) {
        hash = (37 * hash) + PROCESS_LINKS_FIELD_NUMBER;
        hash = (53 * hash) + getProcessLinksList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.ProductSystem parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ProductSystem parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProductSystem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ProductSystem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProductSystem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.ProductSystem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProductSystem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ProductSystem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProductSystem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ProductSystem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.ProductSystem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.ProductSystem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.ProductSystem prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A product system describes the supply chain of a product (the functional
     * unit) ...
     * </pre>
     *
     * Protobuf type {@code protolca.ProductSystem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.ProductSystem)
        org.openlca.proto.Proto.ProductSystemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_ProductSystem_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_ProductSystem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.ProductSystem.class, org.openlca.proto.Proto.ProductSystem.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.ProductSystem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getProcessesFieldBuilder();
          getProcessLinksFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        if (categoryBuilder_ == null) {
          category_ = null;
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        library_ = "";

        if (processesBuilder_ == null) {
          processes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          processesBuilder_.clear();
        }
        if (referenceProcessBuilder_ == null) {
          referenceProcess_ = null;
        } else {
          referenceProcess_ = null;
          referenceProcessBuilder_ = null;
        }
        if (referenceExchangeBuilder_ == null) {
          referenceExchange_ = null;
        } else {
          referenceExchange_ = null;
          referenceExchangeBuilder_ = null;
        }
        targetAmount_ = 0D;

        if (targetUnitBuilder_ == null) {
          targetUnit_ = null;
        } else {
          targetUnit_ = null;
          targetUnitBuilder_ = null;
        }
        if (targetFlowPropertyBuilder_ == null) {
          targetFlowProperty_ = null;
        } else {
          targetFlowProperty_ = null;
          targetFlowPropertyBuilder_ = null;
        }
        if (processLinksBuilder_ == null) {
          processLinks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          processLinksBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_ProductSystem_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ProductSystem getDefaultInstanceForType() {
        return org.openlca.proto.Proto.ProductSystem.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ProductSystem build() {
        org.openlca.proto.Proto.ProductSystem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.ProductSystem buildPartial() {
        org.openlca.proto.Proto.ProductSystem result = new org.openlca.proto.Proto.ProductSystem(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (categoryBuilder_ == null) {
          result.category_ = category_;
        } else {
          result.category_ = categoryBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tags_ = tags_;
        result.library_ = library_;
        if (processesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            processes_ = java.util.Collections.unmodifiableList(processes_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.processes_ = processes_;
        } else {
          result.processes_ = processesBuilder_.build();
        }
        if (referenceProcessBuilder_ == null) {
          result.referenceProcess_ = referenceProcess_;
        } else {
          result.referenceProcess_ = referenceProcessBuilder_.build();
        }
        if (referenceExchangeBuilder_ == null) {
          result.referenceExchange_ = referenceExchange_;
        } else {
          result.referenceExchange_ = referenceExchangeBuilder_.build();
        }
        result.targetAmount_ = targetAmount_;
        if (targetUnitBuilder_ == null) {
          result.targetUnit_ = targetUnit_;
        } else {
          result.targetUnit_ = targetUnitBuilder_.build();
        }
        if (targetFlowPropertyBuilder_ == null) {
          result.targetFlowProperty_ = targetFlowProperty_;
        } else {
          result.targetFlowProperty_ = targetFlowPropertyBuilder_.build();
        }
        if (processLinksBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            processLinks_ = java.util.Collections.unmodifiableList(processLinks_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.processLinks_ = processLinks_;
        } else {
          result.processLinks_ = processLinksBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.ProductSystem) {
          return mergeFrom((org.openlca.proto.Proto.ProductSystem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.ProductSystem other) {
        if (other == org.openlca.proto.Proto.ProductSystem.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.hasCategory()) {
          mergeCategory(other.getCategory());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        if (!other.getLibrary().isEmpty()) {
          library_ = other.library_;
          onChanged();
        }
        if (processesBuilder_ == null) {
          if (!other.processes_.isEmpty()) {
            if (processes_.isEmpty()) {
              processes_ = other.processes_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureProcessesIsMutable();
              processes_.addAll(other.processes_);
            }
            onChanged();
          }
        } else {
          if (!other.processes_.isEmpty()) {
            if (processesBuilder_.isEmpty()) {
              processesBuilder_.dispose();
              processesBuilder_ = null;
              processes_ = other.processes_;
              bitField0_ = (bitField0_ & ~0x00000002);
              processesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getProcessesFieldBuilder() : null;
            } else {
              processesBuilder_.addAllMessages(other.processes_);
            }
          }
        }
        if (other.hasReferenceProcess()) {
          mergeReferenceProcess(other.getReferenceProcess());
        }
        if (other.hasReferenceExchange()) {
          mergeReferenceExchange(other.getReferenceExchange());
        }
        if (other.getTargetAmount() != 0D) {
          setTargetAmount(other.getTargetAmount());
        }
        if (other.hasTargetUnit()) {
          mergeTargetUnit(other.getTargetUnit());
        }
        if (other.hasTargetFlowProperty()) {
          mergeTargetFlowProperty(other.getTargetFlowProperty());
        }
        if (processLinksBuilder_ == null) {
          if (!other.processLinks_.isEmpty()) {
            if (processLinks_.isEmpty()) {
              processLinks_ = other.processLinks_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureProcessLinksIsMutable();
              processLinks_.addAll(other.processLinks_);
            }
            onChanged();
          }
        } else {
          if (!other.processLinks_.isEmpty()) {
            if (processLinksBuilder_.isEmpty()) {
              processLinksBuilder_.dispose();
              processLinksBuilder_ = null;
              processLinks_ = other.processLinks_;
              bitField0_ = (bitField0_ & ~0x00000004);
              processLinksBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getProcessLinksFieldBuilder() : null;
            } else {
              processLinksBuilder_.addAllMessages(other.processLinks_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.ProductSystem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.ProductSystem) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref category_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> categoryBuilder_;
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return Whether the category field is set.
       */
      public boolean hasCategory() {
        return categoryBuilder_ != null || category_ != null;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return The category.
       */
      public org.openlca.proto.Proto.Ref getCategory() {
        if (categoryBuilder_ == null) {
          return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        } else {
          return categoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          category_ = value;
          onChanged();
        } else {
          categoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          category_ = builderForValue.build();
          onChanged();
        } else {
          categoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder mergeCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (category_ != null) {
            category_ =
              org.openlca.proto.Proto.Ref.newBuilder(category_).mergeFrom(value).buildPartial();
          } else {
            category_ = value;
          }
          onChanged();
        } else {
          categoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder clearCategory() {
        if (categoryBuilder_ == null) {
          category_ = null;
          onChanged();
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getCategoryBuilder() {
        
        onChanged();
        return getCategoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
        if (categoryBuilder_ != null) {
          return categoryBuilder_.getMessageOrBuilder();
        } else {
          return category_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getCategoryFieldBuilder() {
        if (categoryBuilder_ == null) {
          categoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getCategory(),
                  getParentForChildren(),
                  isClean());
          category_ = null;
        }
        return categoryBuilder_;
      }

      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return A list containing the tags.
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return The count of tags.
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the element to return.
       * @return The tags at the given index.
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tags at the given index.
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index to set the value at.
       * @param value The tags to set.
       * @return This builder for chaining.
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The tags to add.
       * @return This builder for chaining.
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param values The tags to add.
       * @return This builder for chaining.
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The bytes of the tags to add.
       * @return This builder for chaining.
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object library_ = "";
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The library.
       */
      public java.lang.String getLibrary() {
        java.lang.Object ref = library_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          library_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The bytes for library.
       */
      public com.google.protobuf.ByteString
          getLibraryBytes() {
        java.lang.Object ref = library_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          library_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The library to set.
       * @return This builder for chaining.
       */
      public Builder setLibrary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        library_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLibrary() {
        
        library_ = getDefaultInstance().getLibrary();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The bytes for library to set.
       * @return This builder for chaining.
       */
      public Builder setLibraryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        library_ = value;
        onChanged();
        return this;
      }

      private java.util.List<org.openlca.proto.Proto.ProcessRef> processes_ =
        java.util.Collections.emptyList();
      private void ensureProcessesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          processes_ = new java.util.ArrayList<org.openlca.proto.Proto.ProcessRef>(processes_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.ProcessRef, org.openlca.proto.Proto.ProcessRef.Builder, org.openlca.proto.Proto.ProcessRefOrBuilder> processesBuilder_;

      /**
       * <pre>
       * The descriptors of all processes that are contained in the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessRef processes = 10;</code>
       */
      public java.util.List<org.openlca.proto.Proto.ProcessRef> getProcessesList() {
        if (processesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(processes_);
        } else {
          return processesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The descriptors of all processes that are contained in the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessRef processes = 10;</code>
       */
      public int getProcessesCount() {
        if (processesBuilder_ == null) {
          return processes_.size();
        } else {
          return processesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The descriptors of all processes that are contained in the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessRef processes = 10;</code>
       */
      public org.openlca.proto.Proto.ProcessRef getProcesses(int index) {
        if (processesBuilder_ == null) {
          return processes_.get(index);
        } else {
          return processesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The descriptors of all processes that are contained in the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessRef processes = 10;</code>
       */
      public Builder setProcesses(
          int index, org.openlca.proto.Proto.ProcessRef value) {
        if (processesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProcessesIsMutable();
          processes_.set(index, value);
          onChanged();
        } else {
          processesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The descriptors of all processes that are contained in the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessRef processes = 10;</code>
       */
      public Builder setProcesses(
          int index, org.openlca.proto.Proto.ProcessRef.Builder builderForValue) {
        if (processesBuilder_ == null) {
          ensureProcessesIsMutable();
          processes_.set(index, builderForValue.build());
          onChanged();
        } else {
          processesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The descriptors of all processes that are contained in the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessRef processes = 10;</code>
       */
      public Builder addProcesses(org.openlca.proto.Proto.ProcessRef value) {
        if (processesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProcessesIsMutable();
          processes_.add(value);
          onChanged();
        } else {
          processesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The descriptors of all processes that are contained in the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessRef processes = 10;</code>
       */
      public Builder addProcesses(
          int index, org.openlca.proto.Proto.ProcessRef value) {
        if (processesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProcessesIsMutable();
          processes_.add(index, value);
          onChanged();
        } else {
          processesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The descriptors of all processes that are contained in the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessRef processes = 10;</code>
       */
      public Builder addProcesses(
          org.openlca.proto.Proto.ProcessRef.Builder builderForValue) {
        if (processesBuilder_ == null) {
          ensureProcessesIsMutable();
          processes_.add(builderForValue.build());
          onChanged();
        } else {
          processesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The descriptors of all processes that are contained in the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessRef processes = 10;</code>
       */
      public Builder addProcesses(
          int index, org.openlca.proto.Proto.ProcessRef.Builder builderForValue) {
        if (processesBuilder_ == null) {
          ensureProcessesIsMutable();
          processes_.add(index, builderForValue.build());
          onChanged();
        } else {
          processesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The descriptors of all processes that are contained in the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessRef processes = 10;</code>
       */
      public Builder addAllProcesses(
          java.lang.Iterable<? extends org.openlca.proto.Proto.ProcessRef> values) {
        if (processesBuilder_ == null) {
          ensureProcessesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, processes_);
          onChanged();
        } else {
          processesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The descriptors of all processes that are contained in the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessRef processes = 10;</code>
       */
      public Builder clearProcesses() {
        if (processesBuilder_ == null) {
          processes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          processesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The descriptors of all processes that are contained in the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessRef processes = 10;</code>
       */
      public Builder removeProcesses(int index) {
        if (processesBuilder_ == null) {
          ensureProcessesIsMutable();
          processes_.remove(index);
          onChanged();
        } else {
          processesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The descriptors of all processes that are contained in the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessRef processes = 10;</code>
       */
      public org.openlca.proto.Proto.ProcessRef.Builder getProcessesBuilder(
          int index) {
        return getProcessesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The descriptors of all processes that are contained in the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessRef processes = 10;</code>
       */
      public org.openlca.proto.Proto.ProcessRefOrBuilder getProcessesOrBuilder(
          int index) {
        if (processesBuilder_ == null) {
          return processes_.get(index);  } else {
          return processesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The descriptors of all processes that are contained in the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessRef processes = 10;</code>
       */
      public java.util.List<? extends org.openlca.proto.Proto.ProcessRefOrBuilder> 
           getProcessesOrBuilderList() {
        if (processesBuilder_ != null) {
          return processesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(processes_);
        }
      }
      /**
       * <pre>
       * The descriptors of all processes that are contained in the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessRef processes = 10;</code>
       */
      public org.openlca.proto.Proto.ProcessRef.Builder addProcessesBuilder() {
        return getProcessesFieldBuilder().addBuilder(
            org.openlca.proto.Proto.ProcessRef.getDefaultInstance());
      }
      /**
       * <pre>
       * The descriptors of all processes that are contained in the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessRef processes = 10;</code>
       */
      public org.openlca.proto.Proto.ProcessRef.Builder addProcessesBuilder(
          int index) {
        return getProcessesFieldBuilder().addBuilder(
            index, org.openlca.proto.Proto.ProcessRef.getDefaultInstance());
      }
      /**
       * <pre>
       * The descriptors of all processes that are contained in the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessRef processes = 10;</code>
       */
      public java.util.List<org.openlca.proto.Proto.ProcessRef.Builder> 
           getProcessesBuilderList() {
        return getProcessesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.ProcessRef, org.openlca.proto.Proto.ProcessRef.Builder, org.openlca.proto.Proto.ProcessRefOrBuilder> 
          getProcessesFieldBuilder() {
        if (processesBuilder_ == null) {
          processesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.proto.Proto.ProcessRef, org.openlca.proto.Proto.ProcessRef.Builder, org.openlca.proto.Proto.ProcessRefOrBuilder>(
                  processes_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          processes_ = null;
        }
        return processesBuilder_;
      }

      private org.openlca.proto.Proto.ProcessRef referenceProcess_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.ProcessRef, org.openlca.proto.Proto.ProcessRef.Builder, org.openlca.proto.Proto.ProcessRefOrBuilder> referenceProcessBuilder_;
      /**
       * <pre>
       * The descriptor of the process that provides the flow of the functional
       * unit of the product system.
       * </pre>
       *
       * <code>.protolca.ProcessRef reference_process = 11;</code>
       * @return Whether the referenceProcess field is set.
       */
      public boolean hasReferenceProcess() {
        return referenceProcessBuilder_ != null || referenceProcess_ != null;
      }
      /**
       * <pre>
       * The descriptor of the process that provides the flow of the functional
       * unit of the product system.
       * </pre>
       *
       * <code>.protolca.ProcessRef reference_process = 11;</code>
       * @return The referenceProcess.
       */
      public org.openlca.proto.Proto.ProcessRef getReferenceProcess() {
        if (referenceProcessBuilder_ == null) {
          return referenceProcess_ == null ? org.openlca.proto.Proto.ProcessRef.getDefaultInstance() : referenceProcess_;
        } else {
          return referenceProcessBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The descriptor of the process that provides the flow of the functional
       * unit of the product system.
       * </pre>
       *
       * <code>.protolca.ProcessRef reference_process = 11;</code>
       */
      public Builder setReferenceProcess(org.openlca.proto.Proto.ProcessRef value) {
        if (referenceProcessBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          referenceProcess_ = value;
          onChanged();
        } else {
          referenceProcessBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The descriptor of the process that provides the flow of the functional
       * unit of the product system.
       * </pre>
       *
       * <code>.protolca.ProcessRef reference_process = 11;</code>
       */
      public Builder setReferenceProcess(
          org.openlca.proto.Proto.ProcessRef.Builder builderForValue) {
        if (referenceProcessBuilder_ == null) {
          referenceProcess_ = builderForValue.build();
          onChanged();
        } else {
          referenceProcessBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The descriptor of the process that provides the flow of the functional
       * unit of the product system.
       * </pre>
       *
       * <code>.protolca.ProcessRef reference_process = 11;</code>
       */
      public Builder mergeReferenceProcess(org.openlca.proto.Proto.ProcessRef value) {
        if (referenceProcessBuilder_ == null) {
          if (referenceProcess_ != null) {
            referenceProcess_ =
              org.openlca.proto.Proto.ProcessRef.newBuilder(referenceProcess_).mergeFrom(value).buildPartial();
          } else {
            referenceProcess_ = value;
          }
          onChanged();
        } else {
          referenceProcessBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The descriptor of the process that provides the flow of the functional
       * unit of the product system.
       * </pre>
       *
       * <code>.protolca.ProcessRef reference_process = 11;</code>
       */
      public Builder clearReferenceProcess() {
        if (referenceProcessBuilder_ == null) {
          referenceProcess_ = null;
          onChanged();
        } else {
          referenceProcess_ = null;
          referenceProcessBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The descriptor of the process that provides the flow of the functional
       * unit of the product system.
       * </pre>
       *
       * <code>.protolca.ProcessRef reference_process = 11;</code>
       */
      public org.openlca.proto.Proto.ProcessRef.Builder getReferenceProcessBuilder() {
        
        onChanged();
        return getReferenceProcessFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The descriptor of the process that provides the flow of the functional
       * unit of the product system.
       * </pre>
       *
       * <code>.protolca.ProcessRef reference_process = 11;</code>
       */
      public org.openlca.proto.Proto.ProcessRefOrBuilder getReferenceProcessOrBuilder() {
        if (referenceProcessBuilder_ != null) {
          return referenceProcessBuilder_.getMessageOrBuilder();
        } else {
          return referenceProcess_ == null ?
              org.openlca.proto.Proto.ProcessRef.getDefaultInstance() : referenceProcess_;
        }
      }
      /**
       * <pre>
       * The descriptor of the process that provides the flow of the functional
       * unit of the product system.
       * </pre>
       *
       * <code>.protolca.ProcessRef reference_process = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.ProcessRef, org.openlca.proto.Proto.ProcessRef.Builder, org.openlca.proto.Proto.ProcessRefOrBuilder> 
          getReferenceProcessFieldBuilder() {
        if (referenceProcessBuilder_ == null) {
          referenceProcessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.ProcessRef, org.openlca.proto.Proto.ProcessRef.Builder, org.openlca.proto.Proto.ProcessRefOrBuilder>(
                  getReferenceProcess(),
                  getParentForChildren(),
                  isClean());
          referenceProcess_ = null;
        }
        return referenceProcessBuilder_;
      }

      private org.openlca.proto.Proto.Exchange referenceExchange_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Exchange, org.openlca.proto.Proto.Exchange.Builder, org.openlca.proto.Proto.ExchangeOrBuilder> referenceExchangeBuilder_;
      /**
       * <pre>
       * The exchange of the reference processes (typically the product output)
       * that provides the flow of the functional unit of the product system.
       * </pre>
       *
       * <code>.protolca.Exchange reference_exchange = 12;</code>
       * @return Whether the referenceExchange field is set.
       */
      public boolean hasReferenceExchange() {
        return referenceExchangeBuilder_ != null || referenceExchange_ != null;
      }
      /**
       * <pre>
       * The exchange of the reference processes (typically the product output)
       * that provides the flow of the functional unit of the product system.
       * </pre>
       *
       * <code>.protolca.Exchange reference_exchange = 12;</code>
       * @return The referenceExchange.
       */
      public org.openlca.proto.Proto.Exchange getReferenceExchange() {
        if (referenceExchangeBuilder_ == null) {
          return referenceExchange_ == null ? org.openlca.proto.Proto.Exchange.getDefaultInstance() : referenceExchange_;
        } else {
          return referenceExchangeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The exchange of the reference processes (typically the product output)
       * that provides the flow of the functional unit of the product system.
       * </pre>
       *
       * <code>.protolca.Exchange reference_exchange = 12;</code>
       */
      public Builder setReferenceExchange(org.openlca.proto.Proto.Exchange value) {
        if (referenceExchangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          referenceExchange_ = value;
          onChanged();
        } else {
          referenceExchangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The exchange of the reference processes (typically the product output)
       * that provides the flow of the functional unit of the product system.
       * </pre>
       *
       * <code>.protolca.Exchange reference_exchange = 12;</code>
       */
      public Builder setReferenceExchange(
          org.openlca.proto.Proto.Exchange.Builder builderForValue) {
        if (referenceExchangeBuilder_ == null) {
          referenceExchange_ = builderForValue.build();
          onChanged();
        } else {
          referenceExchangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The exchange of the reference processes (typically the product output)
       * that provides the flow of the functional unit of the product system.
       * </pre>
       *
       * <code>.protolca.Exchange reference_exchange = 12;</code>
       */
      public Builder mergeReferenceExchange(org.openlca.proto.Proto.Exchange value) {
        if (referenceExchangeBuilder_ == null) {
          if (referenceExchange_ != null) {
            referenceExchange_ =
              org.openlca.proto.Proto.Exchange.newBuilder(referenceExchange_).mergeFrom(value).buildPartial();
          } else {
            referenceExchange_ = value;
          }
          onChanged();
        } else {
          referenceExchangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The exchange of the reference processes (typically the product output)
       * that provides the flow of the functional unit of the product system.
       * </pre>
       *
       * <code>.protolca.Exchange reference_exchange = 12;</code>
       */
      public Builder clearReferenceExchange() {
        if (referenceExchangeBuilder_ == null) {
          referenceExchange_ = null;
          onChanged();
        } else {
          referenceExchange_ = null;
          referenceExchangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The exchange of the reference processes (typically the product output)
       * that provides the flow of the functional unit of the product system.
       * </pre>
       *
       * <code>.protolca.Exchange reference_exchange = 12;</code>
       */
      public org.openlca.proto.Proto.Exchange.Builder getReferenceExchangeBuilder() {
        
        onChanged();
        return getReferenceExchangeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The exchange of the reference processes (typically the product output)
       * that provides the flow of the functional unit of the product system.
       * </pre>
       *
       * <code>.protolca.Exchange reference_exchange = 12;</code>
       */
      public org.openlca.proto.Proto.ExchangeOrBuilder getReferenceExchangeOrBuilder() {
        if (referenceExchangeBuilder_ != null) {
          return referenceExchangeBuilder_.getMessageOrBuilder();
        } else {
          return referenceExchange_ == null ?
              org.openlca.proto.Proto.Exchange.getDefaultInstance() : referenceExchange_;
        }
      }
      /**
       * <pre>
       * The exchange of the reference processes (typically the product output)
       * that provides the flow of the functional unit of the product system.
       * </pre>
       *
       * <code>.protolca.Exchange reference_exchange = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Exchange, org.openlca.proto.Proto.Exchange.Builder, org.openlca.proto.Proto.ExchangeOrBuilder> 
          getReferenceExchangeFieldBuilder() {
        if (referenceExchangeBuilder_ == null) {
          referenceExchangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Exchange, org.openlca.proto.Proto.Exchange.Builder, org.openlca.proto.Proto.ExchangeOrBuilder>(
                  getReferenceExchange(),
                  getParentForChildren(),
                  isClean());
          referenceExchange_ = null;
        }
        return referenceExchangeBuilder_;
      }

      private double targetAmount_ ;
      /**
       * <pre>
       * The flow amount of the functional unit of the product system.
       * </pre>
       *
       * <code>double target_amount = 13;</code>
       * @return The targetAmount.
       */
      @java.lang.Override
      public double getTargetAmount() {
        return targetAmount_;
      }
      /**
       * <pre>
       * The flow amount of the functional unit of the product system.
       * </pre>
       *
       * <code>double target_amount = 13;</code>
       * @param value The targetAmount to set.
       * @return This builder for chaining.
       */
      public Builder setTargetAmount(double value) {
        
        targetAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The flow amount of the functional unit of the product system.
       * </pre>
       *
       * <code>double target_amount = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetAmount() {
        
        targetAmount_ = 0D;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref targetUnit_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> targetUnitBuilder_;
      /**
       * <pre>
       * The unit in which the flow amount of the functional unit is given.
       * </pre>
       *
       * <code>.protolca.Ref target_unit = 14;</code>
       * @return Whether the targetUnit field is set.
       */
      public boolean hasTargetUnit() {
        return targetUnitBuilder_ != null || targetUnit_ != null;
      }
      /**
       * <pre>
       * The unit in which the flow amount of the functional unit is given.
       * </pre>
       *
       * <code>.protolca.Ref target_unit = 14;</code>
       * @return The targetUnit.
       */
      public org.openlca.proto.Proto.Ref getTargetUnit() {
        if (targetUnitBuilder_ == null) {
          return targetUnit_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : targetUnit_;
        } else {
          return targetUnitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The unit in which the flow amount of the functional unit is given.
       * </pre>
       *
       * <code>.protolca.Ref target_unit = 14;</code>
       */
      public Builder setTargetUnit(org.openlca.proto.Proto.Ref value) {
        if (targetUnitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          targetUnit_ = value;
          onChanged();
        } else {
          targetUnitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The unit in which the flow amount of the functional unit is given.
       * </pre>
       *
       * <code>.protolca.Ref target_unit = 14;</code>
       */
      public Builder setTargetUnit(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (targetUnitBuilder_ == null) {
          targetUnit_ = builderForValue.build();
          onChanged();
        } else {
          targetUnitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The unit in which the flow amount of the functional unit is given.
       * </pre>
       *
       * <code>.protolca.Ref target_unit = 14;</code>
       */
      public Builder mergeTargetUnit(org.openlca.proto.Proto.Ref value) {
        if (targetUnitBuilder_ == null) {
          if (targetUnit_ != null) {
            targetUnit_ =
              org.openlca.proto.Proto.Ref.newBuilder(targetUnit_).mergeFrom(value).buildPartial();
          } else {
            targetUnit_ = value;
          }
          onChanged();
        } else {
          targetUnitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The unit in which the flow amount of the functional unit is given.
       * </pre>
       *
       * <code>.protolca.Ref target_unit = 14;</code>
       */
      public Builder clearTargetUnit() {
        if (targetUnitBuilder_ == null) {
          targetUnit_ = null;
          onChanged();
        } else {
          targetUnit_ = null;
          targetUnitBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The unit in which the flow amount of the functional unit is given.
       * </pre>
       *
       * <code>.protolca.Ref target_unit = 14;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getTargetUnitBuilder() {
        
        onChanged();
        return getTargetUnitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The unit in which the flow amount of the functional unit is given.
       * </pre>
       *
       * <code>.protolca.Ref target_unit = 14;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getTargetUnitOrBuilder() {
        if (targetUnitBuilder_ != null) {
          return targetUnitBuilder_.getMessageOrBuilder();
        } else {
          return targetUnit_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : targetUnit_;
        }
      }
      /**
       * <pre>
       * The unit in which the flow amount of the functional unit is given.
       * </pre>
       *
       * <code>.protolca.Ref target_unit = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getTargetUnitFieldBuilder() {
        if (targetUnitBuilder_ == null) {
          targetUnitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getTargetUnit(),
                  getParentForChildren(),
                  isClean());
          targetUnit_ = null;
        }
        return targetUnitBuilder_;
      }

      private org.openlca.proto.Proto.Ref targetFlowProperty_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> targetFlowPropertyBuilder_;
      /**
       * <pre>
       * The flow property in which the flow amount of the functional unit is
       * given.
       * </pre>
       *
       * <code>.protolca.Ref target_flow_property = 15;</code>
       * @return Whether the targetFlowProperty field is set.
       */
      public boolean hasTargetFlowProperty() {
        return targetFlowPropertyBuilder_ != null || targetFlowProperty_ != null;
      }
      /**
       * <pre>
       * The flow property in which the flow amount of the functional unit is
       * given.
       * </pre>
       *
       * <code>.protolca.Ref target_flow_property = 15;</code>
       * @return The targetFlowProperty.
       */
      public org.openlca.proto.Proto.Ref getTargetFlowProperty() {
        if (targetFlowPropertyBuilder_ == null) {
          return targetFlowProperty_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : targetFlowProperty_;
        } else {
          return targetFlowPropertyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The flow property in which the flow amount of the functional unit is
       * given.
       * </pre>
       *
       * <code>.protolca.Ref target_flow_property = 15;</code>
       */
      public Builder setTargetFlowProperty(org.openlca.proto.Proto.Ref value) {
        if (targetFlowPropertyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          targetFlowProperty_ = value;
          onChanged();
        } else {
          targetFlowPropertyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The flow property in which the flow amount of the functional unit is
       * given.
       * </pre>
       *
       * <code>.protolca.Ref target_flow_property = 15;</code>
       */
      public Builder setTargetFlowProperty(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (targetFlowPropertyBuilder_ == null) {
          targetFlowProperty_ = builderForValue.build();
          onChanged();
        } else {
          targetFlowPropertyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The flow property in which the flow amount of the functional unit is
       * given.
       * </pre>
       *
       * <code>.protolca.Ref target_flow_property = 15;</code>
       */
      public Builder mergeTargetFlowProperty(org.openlca.proto.Proto.Ref value) {
        if (targetFlowPropertyBuilder_ == null) {
          if (targetFlowProperty_ != null) {
            targetFlowProperty_ =
              org.openlca.proto.Proto.Ref.newBuilder(targetFlowProperty_).mergeFrom(value).buildPartial();
          } else {
            targetFlowProperty_ = value;
          }
          onChanged();
        } else {
          targetFlowPropertyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The flow property in which the flow amount of the functional unit is
       * given.
       * </pre>
       *
       * <code>.protolca.Ref target_flow_property = 15;</code>
       */
      public Builder clearTargetFlowProperty() {
        if (targetFlowPropertyBuilder_ == null) {
          targetFlowProperty_ = null;
          onChanged();
        } else {
          targetFlowProperty_ = null;
          targetFlowPropertyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The flow property in which the flow amount of the functional unit is
       * given.
       * </pre>
       *
       * <code>.protolca.Ref target_flow_property = 15;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getTargetFlowPropertyBuilder() {
        
        onChanged();
        return getTargetFlowPropertyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The flow property in which the flow amount of the functional unit is
       * given.
       * </pre>
       *
       * <code>.protolca.Ref target_flow_property = 15;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getTargetFlowPropertyOrBuilder() {
        if (targetFlowPropertyBuilder_ != null) {
          return targetFlowPropertyBuilder_.getMessageOrBuilder();
        } else {
          return targetFlowProperty_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : targetFlowProperty_;
        }
      }
      /**
       * <pre>
       * The flow property in which the flow amount of the functional unit is
       * given.
       * </pre>
       *
       * <code>.protolca.Ref target_flow_property = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getTargetFlowPropertyFieldBuilder() {
        if (targetFlowPropertyBuilder_ == null) {
          targetFlowPropertyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getTargetFlowProperty(),
                  getParentForChildren(),
                  isClean());
          targetFlowProperty_ = null;
        }
        return targetFlowPropertyBuilder_;
      }

      private java.util.List<org.openlca.proto.Proto.ProcessLink> processLinks_ =
        java.util.Collections.emptyList();
      private void ensureProcessLinksIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          processLinks_ = new java.util.ArrayList<org.openlca.proto.Proto.ProcessLink>(processLinks_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.ProcessLink, org.openlca.proto.Proto.ProcessLink.Builder, org.openlca.proto.Proto.ProcessLinkOrBuilder> processLinksBuilder_;

      /**
       * <pre>
       * The process links of the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessLink process_links = 16;</code>
       */
      public java.util.List<org.openlca.proto.Proto.ProcessLink> getProcessLinksList() {
        if (processLinksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(processLinks_);
        } else {
          return processLinksBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The process links of the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessLink process_links = 16;</code>
       */
      public int getProcessLinksCount() {
        if (processLinksBuilder_ == null) {
          return processLinks_.size();
        } else {
          return processLinksBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The process links of the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessLink process_links = 16;</code>
       */
      public org.openlca.proto.Proto.ProcessLink getProcessLinks(int index) {
        if (processLinksBuilder_ == null) {
          return processLinks_.get(index);
        } else {
          return processLinksBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The process links of the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessLink process_links = 16;</code>
       */
      public Builder setProcessLinks(
          int index, org.openlca.proto.Proto.ProcessLink value) {
        if (processLinksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProcessLinksIsMutable();
          processLinks_.set(index, value);
          onChanged();
        } else {
          processLinksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The process links of the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessLink process_links = 16;</code>
       */
      public Builder setProcessLinks(
          int index, org.openlca.proto.Proto.ProcessLink.Builder builderForValue) {
        if (processLinksBuilder_ == null) {
          ensureProcessLinksIsMutable();
          processLinks_.set(index, builderForValue.build());
          onChanged();
        } else {
          processLinksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The process links of the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessLink process_links = 16;</code>
       */
      public Builder addProcessLinks(org.openlca.proto.Proto.ProcessLink value) {
        if (processLinksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProcessLinksIsMutable();
          processLinks_.add(value);
          onChanged();
        } else {
          processLinksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The process links of the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessLink process_links = 16;</code>
       */
      public Builder addProcessLinks(
          int index, org.openlca.proto.Proto.ProcessLink value) {
        if (processLinksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProcessLinksIsMutable();
          processLinks_.add(index, value);
          onChanged();
        } else {
          processLinksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The process links of the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessLink process_links = 16;</code>
       */
      public Builder addProcessLinks(
          org.openlca.proto.Proto.ProcessLink.Builder builderForValue) {
        if (processLinksBuilder_ == null) {
          ensureProcessLinksIsMutable();
          processLinks_.add(builderForValue.build());
          onChanged();
        } else {
          processLinksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The process links of the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessLink process_links = 16;</code>
       */
      public Builder addProcessLinks(
          int index, org.openlca.proto.Proto.ProcessLink.Builder builderForValue) {
        if (processLinksBuilder_ == null) {
          ensureProcessLinksIsMutable();
          processLinks_.add(index, builderForValue.build());
          onChanged();
        } else {
          processLinksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The process links of the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessLink process_links = 16;</code>
       */
      public Builder addAllProcessLinks(
          java.lang.Iterable<? extends org.openlca.proto.Proto.ProcessLink> values) {
        if (processLinksBuilder_ == null) {
          ensureProcessLinksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, processLinks_);
          onChanged();
        } else {
          processLinksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The process links of the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessLink process_links = 16;</code>
       */
      public Builder clearProcessLinks() {
        if (processLinksBuilder_ == null) {
          processLinks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          processLinksBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The process links of the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessLink process_links = 16;</code>
       */
      public Builder removeProcessLinks(int index) {
        if (processLinksBuilder_ == null) {
          ensureProcessLinksIsMutable();
          processLinks_.remove(index);
          onChanged();
        } else {
          processLinksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The process links of the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessLink process_links = 16;</code>
       */
      public org.openlca.proto.Proto.ProcessLink.Builder getProcessLinksBuilder(
          int index) {
        return getProcessLinksFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The process links of the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessLink process_links = 16;</code>
       */
      public org.openlca.proto.Proto.ProcessLinkOrBuilder getProcessLinksOrBuilder(
          int index) {
        if (processLinksBuilder_ == null) {
          return processLinks_.get(index);  } else {
          return processLinksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The process links of the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessLink process_links = 16;</code>
       */
      public java.util.List<? extends org.openlca.proto.Proto.ProcessLinkOrBuilder> 
           getProcessLinksOrBuilderList() {
        if (processLinksBuilder_ != null) {
          return processLinksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(processLinks_);
        }
      }
      /**
       * <pre>
       * The process links of the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessLink process_links = 16;</code>
       */
      public org.openlca.proto.Proto.ProcessLink.Builder addProcessLinksBuilder() {
        return getProcessLinksFieldBuilder().addBuilder(
            org.openlca.proto.Proto.ProcessLink.getDefaultInstance());
      }
      /**
       * <pre>
       * The process links of the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessLink process_links = 16;</code>
       */
      public org.openlca.proto.Proto.ProcessLink.Builder addProcessLinksBuilder(
          int index) {
        return getProcessLinksFieldBuilder().addBuilder(
            index, org.openlca.proto.Proto.ProcessLink.getDefaultInstance());
      }
      /**
       * <pre>
       * The process links of the product system.
       * </pre>
       *
       * <code>repeated .protolca.ProcessLink process_links = 16;</code>
       */
      public java.util.List<org.openlca.proto.Proto.ProcessLink.Builder> 
           getProcessLinksBuilderList() {
        return getProcessLinksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.ProcessLink, org.openlca.proto.Proto.ProcessLink.Builder, org.openlca.proto.Proto.ProcessLinkOrBuilder> 
          getProcessLinksFieldBuilder() {
        if (processLinksBuilder_ == null) {
          processLinksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.proto.Proto.ProcessLink, org.openlca.proto.Proto.ProcessLink.Builder, org.openlca.proto.Proto.ProcessLinkOrBuilder>(
                  processLinks_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          processLinks_ = null;
        }
        return processLinksBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.ProductSystem)
    }

    // @@protoc_insertion_point(class_scope:protolca.ProductSystem)
    private static final org.openlca.proto.Proto.ProductSystem DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.ProductSystem();
    }

    public static org.openlca.proto.Proto.ProductSystem getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProductSystem>
        PARSER = new com.google.protobuf.AbstractParser<ProductSystem>() {
      @java.lang.Override
      public ProductSystem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProductSystem(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProductSystem> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProductSystem> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.ProductSystem getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProjectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.Project)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    boolean hasCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    org.openlca.proto.Proto.Ref getCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder();

    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    java.util.List<java.lang.String>
        getTagsList();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    int getTagsCount();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    java.lang.String getTags(int index);
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);

    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    java.lang.String getLibrary();
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    com.google.protobuf.ByteString
        getLibraryBytes();

    /**
     * <code>.protolca.Ref impact_method = 10;</code>
     * @return Whether the impactMethod field is set.
     */
    boolean hasImpactMethod();
    /**
     * <code>.protolca.Ref impact_method = 10;</code>
     * @return The impactMethod.
     */
    org.openlca.proto.Proto.Ref getImpactMethod();
    /**
     * <code>.protolca.Ref impact_method = 10;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getImpactMethodOrBuilder();

    /**
     * <code>.protolca.NwSet nw_set = 11;</code>
     * @return Whether the nwSet field is set.
     */
    boolean hasNwSet();
    /**
     * <code>.protolca.NwSet nw_set = 11;</code>
     * @return The nwSet.
     */
    org.openlca.proto.Proto.NwSet getNwSet();
    /**
     * <code>.protolca.NwSet nw_set = 11;</code>
     */
    org.openlca.proto.Proto.NwSetOrBuilder getNwSetOrBuilder();
  }
  /**
   * Protobuf type {@code protolca.Project}
   */
  public static final class Project extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.Project)
      ProjectOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Project.newBuilder() to construct.
    private Project(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Project() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      library_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Project();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Project(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (category_ != null) {
                subBuilder = category_.toBuilder();
              }
              category_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(category_);
                category_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tags_.add(s);
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              library_ = s;
              break;
            }
            case 82: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (impactMethod_ != null) {
                subBuilder = impactMethod_.toBuilder();
              }
              impactMethod_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(impactMethod_);
                impactMethod_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              org.openlca.proto.Proto.NwSet.Builder subBuilder = null;
              if (nwSet_ != null) {
                subBuilder = nwSet_.toBuilder();
              }
              nwSet_ = input.readMessage(org.openlca.proto.Proto.NwSet.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nwSet_);
                nwSet_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_Project_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_Project_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.Project.class, org.openlca.proto.Proto.Project.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.Ref category_;
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    @java.lang.Override
    public boolean hasCategory() {
      return category_ != null;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getCategory() {
      return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
      return getCategory();
    }

    public static final int TAGS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    public static final int LIBRARY_FIELD_NUMBER = 9;
    private volatile java.lang.Object library_;
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    @java.lang.Override
    public java.lang.String getLibrary() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        library_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLibraryBytes() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        library_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IMPACT_METHOD_FIELD_NUMBER = 10;
    private org.openlca.proto.Proto.Ref impactMethod_;
    /**
     * <code>.protolca.Ref impact_method = 10;</code>
     * @return Whether the impactMethod field is set.
     */
    @java.lang.Override
    public boolean hasImpactMethod() {
      return impactMethod_ != null;
    }
    /**
     * <code>.protolca.Ref impact_method = 10;</code>
     * @return The impactMethod.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getImpactMethod() {
      return impactMethod_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : impactMethod_;
    }
    /**
     * <code>.protolca.Ref impact_method = 10;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getImpactMethodOrBuilder() {
      return getImpactMethod();
    }

    public static final int NW_SET_FIELD_NUMBER = 11;
    private org.openlca.proto.Proto.NwSet nwSet_;
    /**
     * <code>.protolca.NwSet nw_set = 11;</code>
     * @return Whether the nwSet field is set.
     */
    @java.lang.Override
    public boolean hasNwSet() {
      return nwSet_ != null;
    }
    /**
     * <code>.protolca.NwSet nw_set = 11;</code>
     * @return The nwSet.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.NwSet getNwSet() {
      return nwSet_ == null ? org.openlca.proto.Proto.NwSet.getDefaultInstance() : nwSet_;
    }
    /**
     * <code>.protolca.NwSet nw_set = 11;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.NwSetOrBuilder getNwSetOrBuilder() {
      return getNwSet();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (category_ != null) {
        output.writeMessage(7, getCategory());
      }
      for (int i = 0; i < tags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, tags_.getRaw(i));
      }
      if (!getLibraryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, library_);
      }
      if (impactMethod_ != null) {
        output.writeMessage(10, getImpactMethod());
      }
      if (nwSet_ != null) {
        output.writeMessage(11, getNwSet());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (category_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCategory());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += computeStringSizeNoTag(tags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      if (!getLibraryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, library_);
      }
      if (impactMethod_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getImpactMethod());
      }
      if (nwSet_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getNwSet());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.Project)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.Project other = (org.openlca.proto.Proto.Project) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (hasCategory() != other.hasCategory()) return false;
      if (hasCategory()) {
        if (!getCategory()
            .equals(other.getCategory())) return false;
      }
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (!getLibrary()
          .equals(other.getLibrary())) return false;
      if (hasImpactMethod() != other.hasImpactMethod()) return false;
      if (hasImpactMethod()) {
        if (!getImpactMethod()
            .equals(other.getImpactMethod())) return false;
      }
      if (hasNwSet() != other.hasNwSet()) return false;
      if (hasNwSet()) {
        if (!getNwSet()
            .equals(other.getNwSet())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (hasCategory()) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategory().hashCode();
      }
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibrary().hashCode();
      if (hasImpactMethod()) {
        hash = (37 * hash) + IMPACT_METHOD_FIELD_NUMBER;
        hash = (53 * hash) + getImpactMethod().hashCode();
      }
      if (hasNwSet()) {
        hash = (37 * hash) + NW_SET_FIELD_NUMBER;
        hash = (53 * hash) + getNwSet().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.Project parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Project parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Project parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Project parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Project parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Project parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Project parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Project parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Project parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Project parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Project parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Project parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.Project prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protolca.Project}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.Project)
        org.openlca.proto.Proto.ProjectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_Project_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_Project_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.Project.class, org.openlca.proto.Proto.Project.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.Project.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        if (categoryBuilder_ == null) {
          category_ = null;
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        library_ = "";

        if (impactMethodBuilder_ == null) {
          impactMethod_ = null;
        } else {
          impactMethod_ = null;
          impactMethodBuilder_ = null;
        }
        if (nwSetBuilder_ == null) {
          nwSet_ = null;
        } else {
          nwSet_ = null;
          nwSetBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_Project_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Project getDefaultInstanceForType() {
        return org.openlca.proto.Proto.Project.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Project build() {
        org.openlca.proto.Proto.Project result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Project buildPartial() {
        org.openlca.proto.Proto.Project result = new org.openlca.proto.Proto.Project(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (categoryBuilder_ == null) {
          result.category_ = category_;
        } else {
          result.category_ = categoryBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tags_ = tags_;
        result.library_ = library_;
        if (impactMethodBuilder_ == null) {
          result.impactMethod_ = impactMethod_;
        } else {
          result.impactMethod_ = impactMethodBuilder_.build();
        }
        if (nwSetBuilder_ == null) {
          result.nwSet_ = nwSet_;
        } else {
          result.nwSet_ = nwSetBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.Project) {
          return mergeFrom((org.openlca.proto.Proto.Project)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.Project other) {
        if (other == org.openlca.proto.Proto.Project.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.hasCategory()) {
          mergeCategory(other.getCategory());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        if (!other.getLibrary().isEmpty()) {
          library_ = other.library_;
          onChanged();
        }
        if (other.hasImpactMethod()) {
          mergeImpactMethod(other.getImpactMethod());
        }
        if (other.hasNwSet()) {
          mergeNwSet(other.getNwSet());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.Project parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.Project) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref category_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> categoryBuilder_;
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return Whether the category field is set.
       */
      public boolean hasCategory() {
        return categoryBuilder_ != null || category_ != null;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return The category.
       */
      public org.openlca.proto.Proto.Ref getCategory() {
        if (categoryBuilder_ == null) {
          return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        } else {
          return categoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          category_ = value;
          onChanged();
        } else {
          categoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          category_ = builderForValue.build();
          onChanged();
        } else {
          categoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder mergeCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (category_ != null) {
            category_ =
              org.openlca.proto.Proto.Ref.newBuilder(category_).mergeFrom(value).buildPartial();
          } else {
            category_ = value;
          }
          onChanged();
        } else {
          categoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder clearCategory() {
        if (categoryBuilder_ == null) {
          category_ = null;
          onChanged();
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getCategoryBuilder() {
        
        onChanged();
        return getCategoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
        if (categoryBuilder_ != null) {
          return categoryBuilder_.getMessageOrBuilder();
        } else {
          return category_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getCategoryFieldBuilder() {
        if (categoryBuilder_ == null) {
          categoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getCategory(),
                  getParentForChildren(),
                  isClean());
          category_ = null;
        }
        return categoryBuilder_;
      }

      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return A list containing the tags.
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return The count of tags.
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the element to return.
       * @return The tags at the given index.
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tags at the given index.
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index to set the value at.
       * @param value The tags to set.
       * @return This builder for chaining.
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The tags to add.
       * @return This builder for chaining.
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param values The tags to add.
       * @return This builder for chaining.
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The bytes of the tags to add.
       * @return This builder for chaining.
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object library_ = "";
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The library.
       */
      public java.lang.String getLibrary() {
        java.lang.Object ref = library_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          library_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The bytes for library.
       */
      public com.google.protobuf.ByteString
          getLibraryBytes() {
        java.lang.Object ref = library_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          library_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The library to set.
       * @return This builder for chaining.
       */
      public Builder setLibrary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        library_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLibrary() {
        
        library_ = getDefaultInstance().getLibrary();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The bytes for library to set.
       * @return This builder for chaining.
       */
      public Builder setLibraryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        library_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref impactMethod_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> impactMethodBuilder_;
      /**
       * <code>.protolca.Ref impact_method = 10;</code>
       * @return Whether the impactMethod field is set.
       */
      public boolean hasImpactMethod() {
        return impactMethodBuilder_ != null || impactMethod_ != null;
      }
      /**
       * <code>.protolca.Ref impact_method = 10;</code>
       * @return The impactMethod.
       */
      public org.openlca.proto.Proto.Ref getImpactMethod() {
        if (impactMethodBuilder_ == null) {
          return impactMethod_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : impactMethod_;
        } else {
          return impactMethodBuilder_.getMessage();
        }
      }
      /**
       * <code>.protolca.Ref impact_method = 10;</code>
       */
      public Builder setImpactMethod(org.openlca.proto.Proto.Ref value) {
        if (impactMethodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          impactMethod_ = value;
          onChanged();
        } else {
          impactMethodBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref impact_method = 10;</code>
       */
      public Builder setImpactMethod(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (impactMethodBuilder_ == null) {
          impactMethod_ = builderForValue.build();
          onChanged();
        } else {
          impactMethodBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protolca.Ref impact_method = 10;</code>
       */
      public Builder mergeImpactMethod(org.openlca.proto.Proto.Ref value) {
        if (impactMethodBuilder_ == null) {
          if (impactMethod_ != null) {
            impactMethod_ =
              org.openlca.proto.Proto.Ref.newBuilder(impactMethod_).mergeFrom(value).buildPartial();
          } else {
            impactMethod_ = value;
          }
          onChanged();
        } else {
          impactMethodBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protolca.Ref impact_method = 10;</code>
       */
      public Builder clearImpactMethod() {
        if (impactMethodBuilder_ == null) {
          impactMethod_ = null;
          onChanged();
        } else {
          impactMethod_ = null;
          impactMethodBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protolca.Ref impact_method = 10;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getImpactMethodBuilder() {
        
        onChanged();
        return getImpactMethodFieldBuilder().getBuilder();
      }
      /**
       * <code>.protolca.Ref impact_method = 10;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getImpactMethodOrBuilder() {
        if (impactMethodBuilder_ != null) {
          return impactMethodBuilder_.getMessageOrBuilder();
        } else {
          return impactMethod_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : impactMethod_;
        }
      }
      /**
       * <code>.protolca.Ref impact_method = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getImpactMethodFieldBuilder() {
        if (impactMethodBuilder_ == null) {
          impactMethodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getImpactMethod(),
                  getParentForChildren(),
                  isClean());
          impactMethod_ = null;
        }
        return impactMethodBuilder_;
      }

      private org.openlca.proto.Proto.NwSet nwSet_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.NwSet, org.openlca.proto.Proto.NwSet.Builder, org.openlca.proto.Proto.NwSetOrBuilder> nwSetBuilder_;
      /**
       * <code>.protolca.NwSet nw_set = 11;</code>
       * @return Whether the nwSet field is set.
       */
      public boolean hasNwSet() {
        return nwSetBuilder_ != null || nwSet_ != null;
      }
      /**
       * <code>.protolca.NwSet nw_set = 11;</code>
       * @return The nwSet.
       */
      public org.openlca.proto.Proto.NwSet getNwSet() {
        if (nwSetBuilder_ == null) {
          return nwSet_ == null ? org.openlca.proto.Proto.NwSet.getDefaultInstance() : nwSet_;
        } else {
          return nwSetBuilder_.getMessage();
        }
      }
      /**
       * <code>.protolca.NwSet nw_set = 11;</code>
       */
      public Builder setNwSet(org.openlca.proto.Proto.NwSet value) {
        if (nwSetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nwSet_ = value;
          onChanged();
        } else {
          nwSetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protolca.NwSet nw_set = 11;</code>
       */
      public Builder setNwSet(
          org.openlca.proto.Proto.NwSet.Builder builderForValue) {
        if (nwSetBuilder_ == null) {
          nwSet_ = builderForValue.build();
          onChanged();
        } else {
          nwSetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protolca.NwSet nw_set = 11;</code>
       */
      public Builder mergeNwSet(org.openlca.proto.Proto.NwSet value) {
        if (nwSetBuilder_ == null) {
          if (nwSet_ != null) {
            nwSet_ =
              org.openlca.proto.Proto.NwSet.newBuilder(nwSet_).mergeFrom(value).buildPartial();
          } else {
            nwSet_ = value;
          }
          onChanged();
        } else {
          nwSetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protolca.NwSet nw_set = 11;</code>
       */
      public Builder clearNwSet() {
        if (nwSetBuilder_ == null) {
          nwSet_ = null;
          onChanged();
        } else {
          nwSet_ = null;
          nwSetBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protolca.NwSet nw_set = 11;</code>
       */
      public org.openlca.proto.Proto.NwSet.Builder getNwSetBuilder() {
        
        onChanged();
        return getNwSetFieldBuilder().getBuilder();
      }
      /**
       * <code>.protolca.NwSet nw_set = 11;</code>
       */
      public org.openlca.proto.Proto.NwSetOrBuilder getNwSetOrBuilder() {
        if (nwSetBuilder_ != null) {
          return nwSetBuilder_.getMessageOrBuilder();
        } else {
          return nwSet_ == null ?
              org.openlca.proto.Proto.NwSet.getDefaultInstance() : nwSet_;
        }
      }
      /**
       * <code>.protolca.NwSet nw_set = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.NwSet, org.openlca.proto.Proto.NwSet.Builder, org.openlca.proto.Proto.NwSetOrBuilder> 
          getNwSetFieldBuilder() {
        if (nwSetBuilder_ == null) {
          nwSetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.NwSet, org.openlca.proto.Proto.NwSet.Builder, org.openlca.proto.Proto.NwSetOrBuilder>(
                  getNwSet(),
                  getParentForChildren(),
                  isClean());
          nwSet_ = null;
        }
        return nwSetBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.Project)
    }

    // @@protoc_insertion_point(class_scope:protolca.Project)
    private static final org.openlca.proto.Proto.Project DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.Project();
    }

    public static org.openlca.proto.Proto.Project getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Project>
        PARSER = new com.google.protobuf.AbstractParser<Project>() {
      @java.lang.Override
      public Project parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Project(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Project> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Project> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.Project getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RefOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.Ref)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The full path of the category of the referenced entity from top to bottom,
     * e.g. `"Elementary flows", "Emissions to air", "unspecified"`.
     * </pre>
     *
     * <code>repeated string category_path = 7;</code>
     * @return A list containing the categoryPath.
     */
    java.util.List<java.lang.String>
        getCategoryPathList();
    /**
     * <pre>
     * The full path of the category of the referenced entity from top to bottom,
     * e.g. `"Elementary flows", "Emissions to air", "unspecified"`.
     * </pre>
     *
     * <code>repeated string category_path = 7;</code>
     * @return The count of categoryPath.
     */
    int getCategoryPathCount();
    /**
     * <pre>
     * The full path of the category of the referenced entity from top to bottom,
     * e.g. `"Elementary flows", "Emissions to air", "unspecified"`.
     * </pre>
     *
     * <code>repeated string category_path = 7;</code>
     * @param index The index of the element to return.
     * @return The categoryPath at the given index.
     */
    java.lang.String getCategoryPath(int index);
    /**
     * <pre>
     * The full path of the category of the referenced entity from top to bottom,
     * e.g. `"Elementary flows", "Emissions to air", "unspecified"`.
     * </pre>
     *
     * <code>repeated string category_path = 7;</code>
     * @param index The index of the value to return.
     * @return The bytes of the categoryPath at the given index.
     */
    com.google.protobuf.ByteString
        getCategoryPathBytes(int index);
  }
  /**
   * <pre>
   * A Ref is a reference to a [RootEntity]. When serializing an entity (e.g. a
   * [Process]) that references another standalone entity (e.g. a [Flow] in an
   * [Exchange]) we do not want to write the complete referenced entity into the
   * serialized JSON object but just a reference. However, the reference contains
   * some meta-data like name, category path etc. that are useful to display.
   * </pre>
   *
   * Protobuf type {@code protolca.Ref}
   */
  public static final class Ref extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.Ref)
      RefOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Ref.newBuilder() to construct.
    private Ref(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Ref() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      categoryPath_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Ref();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Ref(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                categoryPath_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              categoryPath_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          categoryPath_ = categoryPath_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_Ref_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_Ref_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.Ref.class, org.openlca.proto.Proto.Ref.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_PATH_FIELD_NUMBER = 7;
    private com.google.protobuf.LazyStringList categoryPath_;
    /**
     * <pre>
     * The full path of the category of the referenced entity from top to bottom,
     * e.g. `"Elementary flows", "Emissions to air", "unspecified"`.
     * </pre>
     *
     * <code>repeated string category_path = 7;</code>
     * @return A list containing the categoryPath.
     */
    public com.google.protobuf.ProtocolStringList
        getCategoryPathList() {
      return categoryPath_;
    }
    /**
     * <pre>
     * The full path of the category of the referenced entity from top to bottom,
     * e.g. `"Elementary flows", "Emissions to air", "unspecified"`.
     * </pre>
     *
     * <code>repeated string category_path = 7;</code>
     * @return The count of categoryPath.
     */
    public int getCategoryPathCount() {
      return categoryPath_.size();
    }
    /**
     * <pre>
     * The full path of the category of the referenced entity from top to bottom,
     * e.g. `"Elementary flows", "Emissions to air", "unspecified"`.
     * </pre>
     *
     * <code>repeated string category_path = 7;</code>
     * @param index The index of the element to return.
     * @return The categoryPath at the given index.
     */
    public java.lang.String getCategoryPath(int index) {
      return categoryPath_.get(index);
    }
    /**
     * <pre>
     * The full path of the category of the referenced entity from top to bottom,
     * e.g. `"Elementary flows", "Emissions to air", "unspecified"`.
     * </pre>
     *
     * <code>repeated string category_path = 7;</code>
     * @param index The index of the value to return.
     * @return The bytes of the categoryPath at the given index.
     */
    public com.google.protobuf.ByteString
        getCategoryPathBytes(int index) {
      return categoryPath_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      for (int i = 0; i < categoryPath_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, categoryPath_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < categoryPath_.size(); i++) {
          dataSize += computeStringSizeNoTag(categoryPath_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getCategoryPathList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.Ref)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.Ref other = (org.openlca.proto.Proto.Ref) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (!getCategoryPathList()
          .equals(other.getCategoryPathList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (getCategoryPathCount() > 0) {
        hash = (37 * hash) + CATEGORY_PATH_FIELD_NUMBER;
        hash = (53 * hash) + getCategoryPathList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.Ref parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Ref parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Ref parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Ref parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Ref parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Ref parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Ref parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Ref parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Ref parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Ref parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Ref parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Ref parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.Ref prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A Ref is a reference to a [RootEntity]. When serializing an entity (e.g. a
     * [Process]) that references another standalone entity (e.g. a [Flow] in an
     * [Exchange]) we do not want to write the complete referenced entity into the
     * serialized JSON object but just a reference. However, the reference contains
     * some meta-data like name, category path etc. that are useful to display.
     * </pre>
     *
     * Protobuf type {@code protolca.Ref}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.Ref)
        org.openlca.proto.Proto.RefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_Ref_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_Ref_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.Ref.class, org.openlca.proto.Proto.Ref.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.Ref.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        categoryPath_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_Ref_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Ref getDefaultInstanceForType() {
        return org.openlca.proto.Proto.Ref.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Ref build() {
        org.openlca.proto.Proto.Ref result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Ref buildPartial() {
        org.openlca.proto.Proto.Ref result = new org.openlca.proto.Proto.Ref(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (((bitField0_ & 0x00000001) != 0)) {
          categoryPath_ = categoryPath_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.categoryPath_ = categoryPath_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.Ref) {
          return mergeFrom((org.openlca.proto.Proto.Ref)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.Ref other) {
        if (other == org.openlca.proto.Proto.Ref.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (!other.categoryPath_.isEmpty()) {
          if (categoryPath_.isEmpty()) {
            categoryPath_ = other.categoryPath_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCategoryPathIsMutable();
            categoryPath_.addAll(other.categoryPath_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.Ref parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.Ref) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList categoryPath_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureCategoryPathIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          categoryPath_ = new com.google.protobuf.LazyStringArrayList(categoryPath_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * The full path of the category of the referenced entity from top to bottom,
       * e.g. `"Elementary flows", "Emissions to air", "unspecified"`.
       * </pre>
       *
       * <code>repeated string category_path = 7;</code>
       * @return A list containing the categoryPath.
       */
      public com.google.protobuf.ProtocolStringList
          getCategoryPathList() {
        return categoryPath_.getUnmodifiableView();
      }
      /**
       * <pre>
       * The full path of the category of the referenced entity from top to bottom,
       * e.g. `"Elementary flows", "Emissions to air", "unspecified"`.
       * </pre>
       *
       * <code>repeated string category_path = 7;</code>
       * @return The count of categoryPath.
       */
      public int getCategoryPathCount() {
        return categoryPath_.size();
      }
      /**
       * <pre>
       * The full path of the category of the referenced entity from top to bottom,
       * e.g. `"Elementary flows", "Emissions to air", "unspecified"`.
       * </pre>
       *
       * <code>repeated string category_path = 7;</code>
       * @param index The index of the element to return.
       * @return The categoryPath at the given index.
       */
      public java.lang.String getCategoryPath(int index) {
        return categoryPath_.get(index);
      }
      /**
       * <pre>
       * The full path of the category of the referenced entity from top to bottom,
       * e.g. `"Elementary flows", "Emissions to air", "unspecified"`.
       * </pre>
       *
       * <code>repeated string category_path = 7;</code>
       * @param index The index of the value to return.
       * @return The bytes of the categoryPath at the given index.
       */
      public com.google.protobuf.ByteString
          getCategoryPathBytes(int index) {
        return categoryPath_.getByteString(index);
      }
      /**
       * <pre>
       * The full path of the category of the referenced entity from top to bottom,
       * e.g. `"Elementary flows", "Emissions to air", "unspecified"`.
       * </pre>
       *
       * <code>repeated string category_path = 7;</code>
       * @param index The index to set the value at.
       * @param value The categoryPath to set.
       * @return This builder for chaining.
       */
      public Builder setCategoryPath(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCategoryPathIsMutable();
        categoryPath_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The full path of the category of the referenced entity from top to bottom,
       * e.g. `"Elementary flows", "Emissions to air", "unspecified"`.
       * </pre>
       *
       * <code>repeated string category_path = 7;</code>
       * @param value The categoryPath to add.
       * @return This builder for chaining.
       */
      public Builder addCategoryPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCategoryPathIsMutable();
        categoryPath_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The full path of the category of the referenced entity from top to bottom,
       * e.g. `"Elementary flows", "Emissions to air", "unspecified"`.
       * </pre>
       *
       * <code>repeated string category_path = 7;</code>
       * @param values The categoryPath to add.
       * @return This builder for chaining.
       */
      public Builder addAllCategoryPath(
          java.lang.Iterable<java.lang.String> values) {
        ensureCategoryPathIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, categoryPath_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The full path of the category of the referenced entity from top to bottom,
       * e.g. `"Elementary flows", "Emissions to air", "unspecified"`.
       * </pre>
       *
       * <code>repeated string category_path = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCategoryPath() {
        categoryPath_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The full path of the category of the referenced entity from top to bottom,
       * e.g. `"Elementary flows", "Emissions to air", "unspecified"`.
       * </pre>
       *
       * <code>repeated string category_path = 7;</code>
       * @param value The bytes of the categoryPath to add.
       * @return This builder for chaining.
       */
      public Builder addCategoryPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureCategoryPathIsMutable();
        categoryPath_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.Ref)
    }

    // @@protoc_insertion_point(class_scope:protolca.Ref)
    private static final org.openlca.proto.Proto.Ref DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.Ref();
    }

    public static org.openlca.proto.Proto.Ref getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Ref>
        PARSER = new com.google.protobuf.AbstractParser<Ref>() {
      @java.lang.Override
      public Ref parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Ref(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Ref> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Ref> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.Ref getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SimpleResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.SimpleResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <code>repeated .protolca.FlowResult flow_results = 2;</code>
     */
    java.util.List<org.openlca.proto.Proto.FlowResult> 
        getFlowResultsList();
    /**
     * <code>repeated .protolca.FlowResult flow_results = 2;</code>
     */
    org.openlca.proto.Proto.FlowResult getFlowResults(int index);
    /**
     * <code>repeated .protolca.FlowResult flow_results = 2;</code>
     */
    int getFlowResultsCount();
    /**
     * <code>repeated .protolca.FlowResult flow_results = 2;</code>
     */
    java.util.List<? extends org.openlca.proto.Proto.FlowResultOrBuilder> 
        getFlowResultsOrBuilderList();
    /**
     * <code>repeated .protolca.FlowResult flow_results = 2;</code>
     */
    org.openlca.proto.Proto.FlowResultOrBuilder getFlowResultsOrBuilder(
        int index);

    /**
     * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
     */
    java.util.List<org.openlca.proto.Proto.ImpactResult> 
        getImpactResultsList();
    /**
     * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
     */
    org.openlca.proto.Proto.ImpactResult getImpactResults(int index);
    /**
     * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
     */
    int getImpactResultsCount();
    /**
     * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
     */
    java.util.List<? extends org.openlca.proto.Proto.ImpactResultOrBuilder> 
        getImpactResultsOrBuilderList();
    /**
     * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
     */
    org.openlca.proto.Proto.ImpactResultOrBuilder getImpactResultsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protolca.SimpleResult}
   */
  public static final class SimpleResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.SimpleResult)
      SimpleResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SimpleResult.newBuilder() to construct.
    private SimpleResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SimpleResult() {
      type_ = "";
      flowResults_ = java.util.Collections.emptyList();
      impactResults_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SimpleResult();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SimpleResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                flowResults_ = new java.util.ArrayList<org.openlca.proto.Proto.FlowResult>();
                mutable_bitField0_ |= 0x00000001;
              }
              flowResults_.add(
                  input.readMessage(org.openlca.proto.Proto.FlowResult.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                impactResults_ = new java.util.ArrayList<org.openlca.proto.Proto.ImpactResult>();
                mutable_bitField0_ |= 0x00000002;
              }
              impactResults_.add(
                  input.readMessage(org.openlca.proto.Proto.ImpactResult.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          flowResults_ = java.util.Collections.unmodifiableList(flowResults_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          impactResults_ = java.util.Collections.unmodifiableList(impactResults_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_SimpleResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_SimpleResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.SimpleResult.class, org.openlca.proto.Proto.SimpleResult.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLOW_RESULTS_FIELD_NUMBER = 2;
    private java.util.List<org.openlca.proto.Proto.FlowResult> flowResults_;
    /**
     * <code>repeated .protolca.FlowResult flow_results = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.proto.Proto.FlowResult> getFlowResultsList() {
      return flowResults_;
    }
    /**
     * <code>repeated .protolca.FlowResult flow_results = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.proto.Proto.FlowResultOrBuilder> 
        getFlowResultsOrBuilderList() {
      return flowResults_;
    }
    /**
     * <code>repeated .protolca.FlowResult flow_results = 2;</code>
     */
    @java.lang.Override
    public int getFlowResultsCount() {
      return flowResults_.size();
    }
    /**
     * <code>repeated .protolca.FlowResult flow_results = 2;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.FlowResult getFlowResults(int index) {
      return flowResults_.get(index);
    }
    /**
     * <code>repeated .protolca.FlowResult flow_results = 2;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.FlowResultOrBuilder getFlowResultsOrBuilder(
        int index) {
      return flowResults_.get(index);
    }

    public static final int IMPACT_RESULTS_FIELD_NUMBER = 3;
    private java.util.List<org.openlca.proto.Proto.ImpactResult> impactResults_;
    /**
     * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.proto.Proto.ImpactResult> getImpactResultsList() {
      return impactResults_;
    }
    /**
     * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.proto.Proto.ImpactResultOrBuilder> 
        getImpactResultsOrBuilderList() {
      return impactResults_;
    }
    /**
     * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
     */
    @java.lang.Override
    public int getImpactResultsCount() {
      return impactResults_.size();
    }
    /**
     * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ImpactResult getImpactResults(int index) {
      return impactResults_.get(index);
    }
    /**
     * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.ImpactResultOrBuilder getImpactResultsOrBuilder(
        int index) {
      return impactResults_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      for (int i = 0; i < flowResults_.size(); i++) {
        output.writeMessage(2, flowResults_.get(i));
      }
      for (int i = 0; i < impactResults_.size(); i++) {
        output.writeMessage(3, impactResults_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      for (int i = 0; i < flowResults_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, flowResults_.get(i));
      }
      for (int i = 0; i < impactResults_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, impactResults_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.SimpleResult)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.SimpleResult other = (org.openlca.proto.Proto.SimpleResult) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getFlowResultsList()
          .equals(other.getFlowResultsList())) return false;
      if (!getImpactResultsList()
          .equals(other.getImpactResultsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      if (getFlowResultsCount() > 0) {
        hash = (37 * hash) + FLOW_RESULTS_FIELD_NUMBER;
        hash = (53 * hash) + getFlowResultsList().hashCode();
      }
      if (getImpactResultsCount() > 0) {
        hash = (37 * hash) + IMPACT_RESULTS_FIELD_NUMBER;
        hash = (53 * hash) + getImpactResultsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.SimpleResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.SimpleResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.SimpleResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.SimpleResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.SimpleResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.SimpleResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.SimpleResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.SimpleResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.SimpleResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.SimpleResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.SimpleResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.SimpleResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.SimpleResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protolca.SimpleResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.SimpleResult)
        org.openlca.proto.Proto.SimpleResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_SimpleResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_SimpleResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.SimpleResult.class, org.openlca.proto.Proto.SimpleResult.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.SimpleResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFlowResultsFieldBuilder();
          getImpactResultsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        if (flowResultsBuilder_ == null) {
          flowResults_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          flowResultsBuilder_.clear();
        }
        if (impactResultsBuilder_ == null) {
          impactResults_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          impactResultsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_SimpleResult_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.SimpleResult getDefaultInstanceForType() {
        return org.openlca.proto.Proto.SimpleResult.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.SimpleResult build() {
        org.openlca.proto.Proto.SimpleResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.SimpleResult buildPartial() {
        org.openlca.proto.Proto.SimpleResult result = new org.openlca.proto.Proto.SimpleResult(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        if (flowResultsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            flowResults_ = java.util.Collections.unmodifiableList(flowResults_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.flowResults_ = flowResults_;
        } else {
          result.flowResults_ = flowResultsBuilder_.build();
        }
        if (impactResultsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            impactResults_ = java.util.Collections.unmodifiableList(impactResults_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.impactResults_ = impactResults_;
        } else {
          result.impactResults_ = impactResultsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.SimpleResult) {
          return mergeFrom((org.openlca.proto.Proto.SimpleResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.SimpleResult other) {
        if (other == org.openlca.proto.Proto.SimpleResult.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (flowResultsBuilder_ == null) {
          if (!other.flowResults_.isEmpty()) {
            if (flowResults_.isEmpty()) {
              flowResults_ = other.flowResults_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFlowResultsIsMutable();
              flowResults_.addAll(other.flowResults_);
            }
            onChanged();
          }
        } else {
          if (!other.flowResults_.isEmpty()) {
            if (flowResultsBuilder_.isEmpty()) {
              flowResultsBuilder_.dispose();
              flowResultsBuilder_ = null;
              flowResults_ = other.flowResults_;
              bitField0_ = (bitField0_ & ~0x00000001);
              flowResultsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFlowResultsFieldBuilder() : null;
            } else {
              flowResultsBuilder_.addAllMessages(other.flowResults_);
            }
          }
        }
        if (impactResultsBuilder_ == null) {
          if (!other.impactResults_.isEmpty()) {
            if (impactResults_.isEmpty()) {
              impactResults_ = other.impactResults_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureImpactResultsIsMutable();
              impactResults_.addAll(other.impactResults_);
            }
            onChanged();
          }
        } else {
          if (!other.impactResults_.isEmpty()) {
            if (impactResultsBuilder_.isEmpty()) {
              impactResultsBuilder_.dispose();
              impactResultsBuilder_ = null;
              impactResults_ = other.impactResults_;
              bitField0_ = (bitField0_ & ~0x00000002);
              impactResultsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getImpactResultsFieldBuilder() : null;
            } else {
              impactResultsBuilder_.addAllMessages(other.impactResults_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.SimpleResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.SimpleResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.util.List<org.openlca.proto.Proto.FlowResult> flowResults_ =
        java.util.Collections.emptyList();
      private void ensureFlowResultsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          flowResults_ = new java.util.ArrayList<org.openlca.proto.Proto.FlowResult>(flowResults_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.FlowResult, org.openlca.proto.Proto.FlowResult.Builder, org.openlca.proto.Proto.FlowResultOrBuilder> flowResultsBuilder_;

      /**
       * <code>repeated .protolca.FlowResult flow_results = 2;</code>
       */
      public java.util.List<org.openlca.proto.Proto.FlowResult> getFlowResultsList() {
        if (flowResultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(flowResults_);
        } else {
          return flowResultsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protolca.FlowResult flow_results = 2;</code>
       */
      public int getFlowResultsCount() {
        if (flowResultsBuilder_ == null) {
          return flowResults_.size();
        } else {
          return flowResultsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protolca.FlowResult flow_results = 2;</code>
       */
      public org.openlca.proto.Proto.FlowResult getFlowResults(int index) {
        if (flowResultsBuilder_ == null) {
          return flowResults_.get(index);
        } else {
          return flowResultsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protolca.FlowResult flow_results = 2;</code>
       */
      public Builder setFlowResults(
          int index, org.openlca.proto.Proto.FlowResult value) {
        if (flowResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFlowResultsIsMutable();
          flowResults_.set(index, value);
          onChanged();
        } else {
          flowResultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.FlowResult flow_results = 2;</code>
       */
      public Builder setFlowResults(
          int index, org.openlca.proto.Proto.FlowResult.Builder builderForValue) {
        if (flowResultsBuilder_ == null) {
          ensureFlowResultsIsMutable();
          flowResults_.set(index, builderForValue.build());
          onChanged();
        } else {
          flowResultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.FlowResult flow_results = 2;</code>
       */
      public Builder addFlowResults(org.openlca.proto.Proto.FlowResult value) {
        if (flowResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFlowResultsIsMutable();
          flowResults_.add(value);
          onChanged();
        } else {
          flowResultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.FlowResult flow_results = 2;</code>
       */
      public Builder addFlowResults(
          int index, org.openlca.proto.Proto.FlowResult value) {
        if (flowResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFlowResultsIsMutable();
          flowResults_.add(index, value);
          onChanged();
        } else {
          flowResultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.FlowResult flow_results = 2;</code>
       */
      public Builder addFlowResults(
          org.openlca.proto.Proto.FlowResult.Builder builderForValue) {
        if (flowResultsBuilder_ == null) {
          ensureFlowResultsIsMutable();
          flowResults_.add(builderForValue.build());
          onChanged();
        } else {
          flowResultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.FlowResult flow_results = 2;</code>
       */
      public Builder addFlowResults(
          int index, org.openlca.proto.Proto.FlowResult.Builder builderForValue) {
        if (flowResultsBuilder_ == null) {
          ensureFlowResultsIsMutable();
          flowResults_.add(index, builderForValue.build());
          onChanged();
        } else {
          flowResultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.FlowResult flow_results = 2;</code>
       */
      public Builder addAllFlowResults(
          java.lang.Iterable<? extends org.openlca.proto.Proto.FlowResult> values) {
        if (flowResultsBuilder_ == null) {
          ensureFlowResultsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, flowResults_);
          onChanged();
        } else {
          flowResultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.FlowResult flow_results = 2;</code>
       */
      public Builder clearFlowResults() {
        if (flowResultsBuilder_ == null) {
          flowResults_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          flowResultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protolca.FlowResult flow_results = 2;</code>
       */
      public Builder removeFlowResults(int index) {
        if (flowResultsBuilder_ == null) {
          ensureFlowResultsIsMutable();
          flowResults_.remove(index);
          onChanged();
        } else {
          flowResultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.FlowResult flow_results = 2;</code>
       */
      public org.openlca.proto.Proto.FlowResult.Builder getFlowResultsBuilder(
          int index) {
        return getFlowResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protolca.FlowResult flow_results = 2;</code>
       */
      public org.openlca.proto.Proto.FlowResultOrBuilder getFlowResultsOrBuilder(
          int index) {
        if (flowResultsBuilder_ == null) {
          return flowResults_.get(index);  } else {
          return flowResultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protolca.FlowResult flow_results = 2;</code>
       */
      public java.util.List<? extends org.openlca.proto.Proto.FlowResultOrBuilder> 
           getFlowResultsOrBuilderList() {
        if (flowResultsBuilder_ != null) {
          return flowResultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(flowResults_);
        }
      }
      /**
       * <code>repeated .protolca.FlowResult flow_results = 2;</code>
       */
      public org.openlca.proto.Proto.FlowResult.Builder addFlowResultsBuilder() {
        return getFlowResultsFieldBuilder().addBuilder(
            org.openlca.proto.Proto.FlowResult.getDefaultInstance());
      }
      /**
       * <code>repeated .protolca.FlowResult flow_results = 2;</code>
       */
      public org.openlca.proto.Proto.FlowResult.Builder addFlowResultsBuilder(
          int index) {
        return getFlowResultsFieldBuilder().addBuilder(
            index, org.openlca.proto.Proto.FlowResult.getDefaultInstance());
      }
      /**
       * <code>repeated .protolca.FlowResult flow_results = 2;</code>
       */
      public java.util.List<org.openlca.proto.Proto.FlowResult.Builder> 
           getFlowResultsBuilderList() {
        return getFlowResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.FlowResult, org.openlca.proto.Proto.FlowResult.Builder, org.openlca.proto.Proto.FlowResultOrBuilder> 
          getFlowResultsFieldBuilder() {
        if (flowResultsBuilder_ == null) {
          flowResultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.proto.Proto.FlowResult, org.openlca.proto.Proto.FlowResult.Builder, org.openlca.proto.Proto.FlowResultOrBuilder>(
                  flowResults_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          flowResults_ = null;
        }
        return flowResultsBuilder_;
      }

      private java.util.List<org.openlca.proto.Proto.ImpactResult> impactResults_ =
        java.util.Collections.emptyList();
      private void ensureImpactResultsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          impactResults_ = new java.util.ArrayList<org.openlca.proto.Proto.ImpactResult>(impactResults_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.ImpactResult, org.openlca.proto.Proto.ImpactResult.Builder, org.openlca.proto.Proto.ImpactResultOrBuilder> impactResultsBuilder_;

      /**
       * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
       */
      public java.util.List<org.openlca.proto.Proto.ImpactResult> getImpactResultsList() {
        if (impactResultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(impactResults_);
        } else {
          return impactResultsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
       */
      public int getImpactResultsCount() {
        if (impactResultsBuilder_ == null) {
          return impactResults_.size();
        } else {
          return impactResultsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
       */
      public org.openlca.proto.Proto.ImpactResult getImpactResults(int index) {
        if (impactResultsBuilder_ == null) {
          return impactResults_.get(index);
        } else {
          return impactResultsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
       */
      public Builder setImpactResults(
          int index, org.openlca.proto.Proto.ImpactResult value) {
        if (impactResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImpactResultsIsMutable();
          impactResults_.set(index, value);
          onChanged();
        } else {
          impactResultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
       */
      public Builder setImpactResults(
          int index, org.openlca.proto.Proto.ImpactResult.Builder builderForValue) {
        if (impactResultsBuilder_ == null) {
          ensureImpactResultsIsMutable();
          impactResults_.set(index, builderForValue.build());
          onChanged();
        } else {
          impactResultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
       */
      public Builder addImpactResults(org.openlca.proto.Proto.ImpactResult value) {
        if (impactResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImpactResultsIsMutable();
          impactResults_.add(value);
          onChanged();
        } else {
          impactResultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
       */
      public Builder addImpactResults(
          int index, org.openlca.proto.Proto.ImpactResult value) {
        if (impactResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImpactResultsIsMutable();
          impactResults_.add(index, value);
          onChanged();
        } else {
          impactResultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
       */
      public Builder addImpactResults(
          org.openlca.proto.Proto.ImpactResult.Builder builderForValue) {
        if (impactResultsBuilder_ == null) {
          ensureImpactResultsIsMutable();
          impactResults_.add(builderForValue.build());
          onChanged();
        } else {
          impactResultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
       */
      public Builder addImpactResults(
          int index, org.openlca.proto.Proto.ImpactResult.Builder builderForValue) {
        if (impactResultsBuilder_ == null) {
          ensureImpactResultsIsMutable();
          impactResults_.add(index, builderForValue.build());
          onChanged();
        } else {
          impactResultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
       */
      public Builder addAllImpactResults(
          java.lang.Iterable<? extends org.openlca.proto.Proto.ImpactResult> values) {
        if (impactResultsBuilder_ == null) {
          ensureImpactResultsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, impactResults_);
          onChanged();
        } else {
          impactResultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
       */
      public Builder clearImpactResults() {
        if (impactResultsBuilder_ == null) {
          impactResults_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          impactResultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
       */
      public Builder removeImpactResults(int index) {
        if (impactResultsBuilder_ == null) {
          ensureImpactResultsIsMutable();
          impactResults_.remove(index);
          onChanged();
        } else {
          impactResultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
       */
      public org.openlca.proto.Proto.ImpactResult.Builder getImpactResultsBuilder(
          int index) {
        return getImpactResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
       */
      public org.openlca.proto.Proto.ImpactResultOrBuilder getImpactResultsOrBuilder(
          int index) {
        if (impactResultsBuilder_ == null) {
          return impactResults_.get(index);  } else {
          return impactResultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
       */
      public java.util.List<? extends org.openlca.proto.Proto.ImpactResultOrBuilder> 
           getImpactResultsOrBuilderList() {
        if (impactResultsBuilder_ != null) {
          return impactResultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(impactResults_);
        }
      }
      /**
       * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
       */
      public org.openlca.proto.Proto.ImpactResult.Builder addImpactResultsBuilder() {
        return getImpactResultsFieldBuilder().addBuilder(
            org.openlca.proto.Proto.ImpactResult.getDefaultInstance());
      }
      /**
       * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
       */
      public org.openlca.proto.Proto.ImpactResult.Builder addImpactResultsBuilder(
          int index) {
        return getImpactResultsFieldBuilder().addBuilder(
            index, org.openlca.proto.Proto.ImpactResult.getDefaultInstance());
      }
      /**
       * <code>repeated .protolca.ImpactResult impact_results = 3;</code>
       */
      public java.util.List<org.openlca.proto.Proto.ImpactResult.Builder> 
           getImpactResultsBuilderList() {
        return getImpactResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.ImpactResult, org.openlca.proto.Proto.ImpactResult.Builder, org.openlca.proto.Proto.ImpactResultOrBuilder> 
          getImpactResultsFieldBuilder() {
        if (impactResultsBuilder_ == null) {
          impactResultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.proto.Proto.ImpactResult, org.openlca.proto.Proto.ImpactResult.Builder, org.openlca.proto.Proto.ImpactResultOrBuilder>(
                  impactResults_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          impactResults_ = null;
        }
        return impactResultsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.SimpleResult)
    }

    // @@protoc_insertion_point(class_scope:protolca.SimpleResult)
    private static final org.openlca.proto.Proto.SimpleResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.SimpleResult();
    }

    public static org.openlca.proto.Proto.SimpleResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SimpleResult>
        PARSER = new com.google.protobuf.AbstractParser<SimpleResult>() {
      @java.lang.Override
      public SimpleResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SimpleResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SimpleResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SimpleResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.SimpleResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SocialIndicatorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.SocialIndicator)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    boolean hasCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    org.openlca.proto.Proto.Ref getCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder();

    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    java.util.List<java.lang.String>
        getTagsList();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    int getTagsCount();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    java.lang.String getTags(int index);
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);

    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    java.lang.String getLibrary();
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    com.google.protobuf.ByteString
        getLibraryBytes();

    /**
     * <pre>
     * The name of the activity variable of the indicator.
     * </pre>
     *
     * <code>string activity_variable = 10;</code>
     * @return The activityVariable.
     */
    java.lang.String getActivityVariable();
    /**
     * <pre>
     * The name of the activity variable of the indicator.
     * </pre>
     *
     * <code>string activity_variable = 10;</code>
     * @return The bytes for activityVariable.
     */
    com.google.protobuf.ByteString
        getActivityVariableBytes();

    /**
     * <pre>
     * The quantity of the activity variable.
     * </pre>
     *
     * <code>.protolca.Ref activity_quantity = 11;</code>
     * @return Whether the activityQuantity field is set.
     */
    boolean hasActivityQuantity();
    /**
     * <pre>
     * The quantity of the activity variable.
     * </pre>
     *
     * <code>.protolca.Ref activity_quantity = 11;</code>
     * @return The activityQuantity.
     */
    org.openlca.proto.Proto.Ref getActivityQuantity();
    /**
     * <pre>
     * The quantity of the activity variable.
     * </pre>
     *
     * <code>.protolca.Ref activity_quantity = 11;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getActivityQuantityOrBuilder();

    /**
     * <pre>
     * The unit of the activity variable.
     * </pre>
     *
     * <code>.protolca.Ref activity_unit = 12;</code>
     * @return Whether the activityUnit field is set.
     */
    boolean hasActivityUnit();
    /**
     * <pre>
     * The unit of the activity variable.
     * </pre>
     *
     * <code>.protolca.Ref activity_unit = 12;</code>
     * @return The activityUnit.
     */
    org.openlca.proto.Proto.Ref getActivityUnit();
    /**
     * <pre>
     * The unit of the activity variable.
     * </pre>
     *
     * <code>.protolca.Ref activity_unit = 12;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getActivityUnitOrBuilder();

    /**
     * <pre>
     * The unit in which the indicator is measured.
     * </pre>
     *
     * <code>string unit_of_measurement = 13;</code>
     * @return The unitOfMeasurement.
     */
    java.lang.String getUnitOfMeasurement();
    /**
     * <pre>
     * The unit in which the indicator is measured.
     * </pre>
     *
     * <code>string unit_of_measurement = 13;</code>
     * @return The bytes for unitOfMeasurement.
     */
    com.google.protobuf.ByteString
        getUnitOfMeasurementBytes();

    /**
     * <pre>
     * Documentation of the evaluation scheme of the indicator.
     * </pre>
     *
     * <code>string evaluation_scheme = 14;</code>
     * @return The evaluationScheme.
     */
    java.lang.String getEvaluationScheme();
    /**
     * <pre>
     * Documentation of the evaluation scheme of the indicator.
     * </pre>
     *
     * <code>string evaluation_scheme = 14;</code>
     * @return The bytes for evaluationScheme.
     */
    com.google.protobuf.ByteString
        getEvaluationSchemeBytes();
  }
  /**
   * Protobuf type {@code protolca.SocialIndicator}
   */
  public static final class SocialIndicator extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.SocialIndicator)
      SocialIndicatorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SocialIndicator.newBuilder() to construct.
    private SocialIndicator(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SocialIndicator() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      library_ = "";
      activityVariable_ = "";
      unitOfMeasurement_ = "";
      evaluationScheme_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SocialIndicator();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SocialIndicator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (category_ != null) {
                subBuilder = category_.toBuilder();
              }
              category_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(category_);
                category_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tags_.add(s);
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              library_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              activityVariable_ = s;
              break;
            }
            case 90: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (activityQuantity_ != null) {
                subBuilder = activityQuantity_.toBuilder();
              }
              activityQuantity_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(activityQuantity_);
                activityQuantity_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (activityUnit_ != null) {
                subBuilder = activityUnit_.toBuilder();
              }
              activityUnit_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(activityUnit_);
                activityUnit_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              java.lang.String s = input.readStringRequireUtf8();

              unitOfMeasurement_ = s;
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();

              evaluationScheme_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_SocialIndicator_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_SocialIndicator_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.SocialIndicator.class, org.openlca.proto.Proto.SocialIndicator.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.Ref category_;
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    @java.lang.Override
    public boolean hasCategory() {
      return category_ != null;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getCategory() {
      return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
      return getCategory();
    }

    public static final int TAGS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    public static final int LIBRARY_FIELD_NUMBER = 9;
    private volatile java.lang.Object library_;
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    @java.lang.Override
    public java.lang.String getLibrary() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        library_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLibraryBytes() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        library_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACTIVITY_VARIABLE_FIELD_NUMBER = 10;
    private volatile java.lang.Object activityVariable_;
    /**
     * <pre>
     * The name of the activity variable of the indicator.
     * </pre>
     *
     * <code>string activity_variable = 10;</code>
     * @return The activityVariable.
     */
    @java.lang.Override
    public java.lang.String getActivityVariable() {
      java.lang.Object ref = activityVariable_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        activityVariable_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the activity variable of the indicator.
     * </pre>
     *
     * <code>string activity_variable = 10;</code>
     * @return The bytes for activityVariable.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getActivityVariableBytes() {
      java.lang.Object ref = activityVariable_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        activityVariable_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACTIVITY_QUANTITY_FIELD_NUMBER = 11;
    private org.openlca.proto.Proto.Ref activityQuantity_;
    /**
     * <pre>
     * The quantity of the activity variable.
     * </pre>
     *
     * <code>.protolca.Ref activity_quantity = 11;</code>
     * @return Whether the activityQuantity field is set.
     */
    @java.lang.Override
    public boolean hasActivityQuantity() {
      return activityQuantity_ != null;
    }
    /**
     * <pre>
     * The quantity of the activity variable.
     * </pre>
     *
     * <code>.protolca.Ref activity_quantity = 11;</code>
     * @return The activityQuantity.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getActivityQuantity() {
      return activityQuantity_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : activityQuantity_;
    }
    /**
     * <pre>
     * The quantity of the activity variable.
     * </pre>
     *
     * <code>.protolca.Ref activity_quantity = 11;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getActivityQuantityOrBuilder() {
      return getActivityQuantity();
    }

    public static final int ACTIVITY_UNIT_FIELD_NUMBER = 12;
    private org.openlca.proto.Proto.Ref activityUnit_;
    /**
     * <pre>
     * The unit of the activity variable.
     * </pre>
     *
     * <code>.protolca.Ref activity_unit = 12;</code>
     * @return Whether the activityUnit field is set.
     */
    @java.lang.Override
    public boolean hasActivityUnit() {
      return activityUnit_ != null;
    }
    /**
     * <pre>
     * The unit of the activity variable.
     * </pre>
     *
     * <code>.protolca.Ref activity_unit = 12;</code>
     * @return The activityUnit.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getActivityUnit() {
      return activityUnit_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : activityUnit_;
    }
    /**
     * <pre>
     * The unit of the activity variable.
     * </pre>
     *
     * <code>.protolca.Ref activity_unit = 12;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getActivityUnitOrBuilder() {
      return getActivityUnit();
    }

    public static final int UNIT_OF_MEASUREMENT_FIELD_NUMBER = 13;
    private volatile java.lang.Object unitOfMeasurement_;
    /**
     * <pre>
     * The unit in which the indicator is measured.
     * </pre>
     *
     * <code>string unit_of_measurement = 13;</code>
     * @return The unitOfMeasurement.
     */
    @java.lang.Override
    public java.lang.String getUnitOfMeasurement() {
      java.lang.Object ref = unitOfMeasurement_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        unitOfMeasurement_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The unit in which the indicator is measured.
     * </pre>
     *
     * <code>string unit_of_measurement = 13;</code>
     * @return The bytes for unitOfMeasurement.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUnitOfMeasurementBytes() {
      java.lang.Object ref = unitOfMeasurement_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        unitOfMeasurement_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVALUATION_SCHEME_FIELD_NUMBER = 14;
    private volatile java.lang.Object evaluationScheme_;
    /**
     * <pre>
     * Documentation of the evaluation scheme of the indicator.
     * </pre>
     *
     * <code>string evaluation_scheme = 14;</code>
     * @return The evaluationScheme.
     */
    @java.lang.Override
    public java.lang.String getEvaluationScheme() {
      java.lang.Object ref = evaluationScheme_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        evaluationScheme_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Documentation of the evaluation scheme of the indicator.
     * </pre>
     *
     * <code>string evaluation_scheme = 14;</code>
     * @return The bytes for evaluationScheme.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEvaluationSchemeBytes() {
      java.lang.Object ref = evaluationScheme_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        evaluationScheme_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (category_ != null) {
        output.writeMessage(7, getCategory());
      }
      for (int i = 0; i < tags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, tags_.getRaw(i));
      }
      if (!getLibraryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, library_);
      }
      if (!getActivityVariableBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, activityVariable_);
      }
      if (activityQuantity_ != null) {
        output.writeMessage(11, getActivityQuantity());
      }
      if (activityUnit_ != null) {
        output.writeMessage(12, getActivityUnit());
      }
      if (!getUnitOfMeasurementBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, unitOfMeasurement_);
      }
      if (!getEvaluationSchemeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, evaluationScheme_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (category_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCategory());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += computeStringSizeNoTag(tags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      if (!getLibraryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, library_);
      }
      if (!getActivityVariableBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, activityVariable_);
      }
      if (activityQuantity_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getActivityQuantity());
      }
      if (activityUnit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getActivityUnit());
      }
      if (!getUnitOfMeasurementBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, unitOfMeasurement_);
      }
      if (!getEvaluationSchemeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, evaluationScheme_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.SocialIndicator)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.SocialIndicator other = (org.openlca.proto.Proto.SocialIndicator) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (hasCategory() != other.hasCategory()) return false;
      if (hasCategory()) {
        if (!getCategory()
            .equals(other.getCategory())) return false;
      }
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (!getLibrary()
          .equals(other.getLibrary())) return false;
      if (!getActivityVariable()
          .equals(other.getActivityVariable())) return false;
      if (hasActivityQuantity() != other.hasActivityQuantity()) return false;
      if (hasActivityQuantity()) {
        if (!getActivityQuantity()
            .equals(other.getActivityQuantity())) return false;
      }
      if (hasActivityUnit() != other.hasActivityUnit()) return false;
      if (hasActivityUnit()) {
        if (!getActivityUnit()
            .equals(other.getActivityUnit())) return false;
      }
      if (!getUnitOfMeasurement()
          .equals(other.getUnitOfMeasurement())) return false;
      if (!getEvaluationScheme()
          .equals(other.getEvaluationScheme())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (hasCategory()) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategory().hashCode();
      }
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibrary().hashCode();
      hash = (37 * hash) + ACTIVITY_VARIABLE_FIELD_NUMBER;
      hash = (53 * hash) + getActivityVariable().hashCode();
      if (hasActivityQuantity()) {
        hash = (37 * hash) + ACTIVITY_QUANTITY_FIELD_NUMBER;
        hash = (53 * hash) + getActivityQuantity().hashCode();
      }
      if (hasActivityUnit()) {
        hash = (37 * hash) + ACTIVITY_UNIT_FIELD_NUMBER;
        hash = (53 * hash) + getActivityUnit().hashCode();
      }
      hash = (37 * hash) + UNIT_OF_MEASUREMENT_FIELD_NUMBER;
      hash = (53 * hash) + getUnitOfMeasurement().hashCode();
      hash = (37 * hash) + EVALUATION_SCHEME_FIELD_NUMBER;
      hash = (53 * hash) + getEvaluationScheme().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.SocialIndicator parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.SocialIndicator parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.SocialIndicator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.SocialIndicator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.SocialIndicator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.SocialIndicator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.SocialIndicator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.SocialIndicator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.SocialIndicator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.SocialIndicator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.SocialIndicator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.SocialIndicator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.SocialIndicator prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protolca.SocialIndicator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.SocialIndicator)
        org.openlca.proto.Proto.SocialIndicatorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_SocialIndicator_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_SocialIndicator_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.SocialIndicator.class, org.openlca.proto.Proto.SocialIndicator.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.SocialIndicator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        if (categoryBuilder_ == null) {
          category_ = null;
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        library_ = "";

        activityVariable_ = "";

        if (activityQuantityBuilder_ == null) {
          activityQuantity_ = null;
        } else {
          activityQuantity_ = null;
          activityQuantityBuilder_ = null;
        }
        if (activityUnitBuilder_ == null) {
          activityUnit_ = null;
        } else {
          activityUnit_ = null;
          activityUnitBuilder_ = null;
        }
        unitOfMeasurement_ = "";

        evaluationScheme_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_SocialIndicator_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.SocialIndicator getDefaultInstanceForType() {
        return org.openlca.proto.Proto.SocialIndicator.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.SocialIndicator build() {
        org.openlca.proto.Proto.SocialIndicator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.SocialIndicator buildPartial() {
        org.openlca.proto.Proto.SocialIndicator result = new org.openlca.proto.Proto.SocialIndicator(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (categoryBuilder_ == null) {
          result.category_ = category_;
        } else {
          result.category_ = categoryBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tags_ = tags_;
        result.library_ = library_;
        result.activityVariable_ = activityVariable_;
        if (activityQuantityBuilder_ == null) {
          result.activityQuantity_ = activityQuantity_;
        } else {
          result.activityQuantity_ = activityQuantityBuilder_.build();
        }
        if (activityUnitBuilder_ == null) {
          result.activityUnit_ = activityUnit_;
        } else {
          result.activityUnit_ = activityUnitBuilder_.build();
        }
        result.unitOfMeasurement_ = unitOfMeasurement_;
        result.evaluationScheme_ = evaluationScheme_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.SocialIndicator) {
          return mergeFrom((org.openlca.proto.Proto.SocialIndicator)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.SocialIndicator other) {
        if (other == org.openlca.proto.Proto.SocialIndicator.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.hasCategory()) {
          mergeCategory(other.getCategory());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        if (!other.getLibrary().isEmpty()) {
          library_ = other.library_;
          onChanged();
        }
        if (!other.getActivityVariable().isEmpty()) {
          activityVariable_ = other.activityVariable_;
          onChanged();
        }
        if (other.hasActivityQuantity()) {
          mergeActivityQuantity(other.getActivityQuantity());
        }
        if (other.hasActivityUnit()) {
          mergeActivityUnit(other.getActivityUnit());
        }
        if (!other.getUnitOfMeasurement().isEmpty()) {
          unitOfMeasurement_ = other.unitOfMeasurement_;
          onChanged();
        }
        if (!other.getEvaluationScheme().isEmpty()) {
          evaluationScheme_ = other.evaluationScheme_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.SocialIndicator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.SocialIndicator) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref category_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> categoryBuilder_;
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return Whether the category field is set.
       */
      public boolean hasCategory() {
        return categoryBuilder_ != null || category_ != null;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return The category.
       */
      public org.openlca.proto.Proto.Ref getCategory() {
        if (categoryBuilder_ == null) {
          return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        } else {
          return categoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          category_ = value;
          onChanged();
        } else {
          categoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          category_ = builderForValue.build();
          onChanged();
        } else {
          categoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder mergeCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (category_ != null) {
            category_ =
              org.openlca.proto.Proto.Ref.newBuilder(category_).mergeFrom(value).buildPartial();
          } else {
            category_ = value;
          }
          onChanged();
        } else {
          categoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder clearCategory() {
        if (categoryBuilder_ == null) {
          category_ = null;
          onChanged();
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getCategoryBuilder() {
        
        onChanged();
        return getCategoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
        if (categoryBuilder_ != null) {
          return categoryBuilder_.getMessageOrBuilder();
        } else {
          return category_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getCategoryFieldBuilder() {
        if (categoryBuilder_ == null) {
          categoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getCategory(),
                  getParentForChildren(),
                  isClean());
          category_ = null;
        }
        return categoryBuilder_;
      }

      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return A list containing the tags.
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return The count of tags.
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the element to return.
       * @return The tags at the given index.
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tags at the given index.
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index to set the value at.
       * @param value The tags to set.
       * @return This builder for chaining.
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The tags to add.
       * @return This builder for chaining.
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param values The tags to add.
       * @return This builder for chaining.
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The bytes of the tags to add.
       * @return This builder for chaining.
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object library_ = "";
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The library.
       */
      public java.lang.String getLibrary() {
        java.lang.Object ref = library_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          library_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The bytes for library.
       */
      public com.google.protobuf.ByteString
          getLibraryBytes() {
        java.lang.Object ref = library_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          library_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The library to set.
       * @return This builder for chaining.
       */
      public Builder setLibrary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        library_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLibrary() {
        
        library_ = getDefaultInstance().getLibrary();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The bytes for library to set.
       * @return This builder for chaining.
       */
      public Builder setLibraryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        library_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object activityVariable_ = "";
      /**
       * <pre>
       * The name of the activity variable of the indicator.
       * </pre>
       *
       * <code>string activity_variable = 10;</code>
       * @return The activityVariable.
       */
      public java.lang.String getActivityVariable() {
        java.lang.Object ref = activityVariable_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          activityVariable_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the activity variable of the indicator.
       * </pre>
       *
       * <code>string activity_variable = 10;</code>
       * @return The bytes for activityVariable.
       */
      public com.google.protobuf.ByteString
          getActivityVariableBytes() {
        java.lang.Object ref = activityVariable_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          activityVariable_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the activity variable of the indicator.
       * </pre>
       *
       * <code>string activity_variable = 10;</code>
       * @param value The activityVariable to set.
       * @return This builder for chaining.
       */
      public Builder setActivityVariable(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        activityVariable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the activity variable of the indicator.
       * </pre>
       *
       * <code>string activity_variable = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearActivityVariable() {
        
        activityVariable_ = getDefaultInstance().getActivityVariable();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the activity variable of the indicator.
       * </pre>
       *
       * <code>string activity_variable = 10;</code>
       * @param value The bytes for activityVariable to set.
       * @return This builder for chaining.
       */
      public Builder setActivityVariableBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        activityVariable_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref activityQuantity_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> activityQuantityBuilder_;
      /**
       * <pre>
       * The quantity of the activity variable.
       * </pre>
       *
       * <code>.protolca.Ref activity_quantity = 11;</code>
       * @return Whether the activityQuantity field is set.
       */
      public boolean hasActivityQuantity() {
        return activityQuantityBuilder_ != null || activityQuantity_ != null;
      }
      /**
       * <pre>
       * The quantity of the activity variable.
       * </pre>
       *
       * <code>.protolca.Ref activity_quantity = 11;</code>
       * @return The activityQuantity.
       */
      public org.openlca.proto.Proto.Ref getActivityQuantity() {
        if (activityQuantityBuilder_ == null) {
          return activityQuantity_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : activityQuantity_;
        } else {
          return activityQuantityBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The quantity of the activity variable.
       * </pre>
       *
       * <code>.protolca.Ref activity_quantity = 11;</code>
       */
      public Builder setActivityQuantity(org.openlca.proto.Proto.Ref value) {
        if (activityQuantityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          activityQuantity_ = value;
          onChanged();
        } else {
          activityQuantityBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The quantity of the activity variable.
       * </pre>
       *
       * <code>.protolca.Ref activity_quantity = 11;</code>
       */
      public Builder setActivityQuantity(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (activityQuantityBuilder_ == null) {
          activityQuantity_ = builderForValue.build();
          onChanged();
        } else {
          activityQuantityBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The quantity of the activity variable.
       * </pre>
       *
       * <code>.protolca.Ref activity_quantity = 11;</code>
       */
      public Builder mergeActivityQuantity(org.openlca.proto.Proto.Ref value) {
        if (activityQuantityBuilder_ == null) {
          if (activityQuantity_ != null) {
            activityQuantity_ =
              org.openlca.proto.Proto.Ref.newBuilder(activityQuantity_).mergeFrom(value).buildPartial();
          } else {
            activityQuantity_ = value;
          }
          onChanged();
        } else {
          activityQuantityBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The quantity of the activity variable.
       * </pre>
       *
       * <code>.protolca.Ref activity_quantity = 11;</code>
       */
      public Builder clearActivityQuantity() {
        if (activityQuantityBuilder_ == null) {
          activityQuantity_ = null;
          onChanged();
        } else {
          activityQuantity_ = null;
          activityQuantityBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The quantity of the activity variable.
       * </pre>
       *
       * <code>.protolca.Ref activity_quantity = 11;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getActivityQuantityBuilder() {
        
        onChanged();
        return getActivityQuantityFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The quantity of the activity variable.
       * </pre>
       *
       * <code>.protolca.Ref activity_quantity = 11;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getActivityQuantityOrBuilder() {
        if (activityQuantityBuilder_ != null) {
          return activityQuantityBuilder_.getMessageOrBuilder();
        } else {
          return activityQuantity_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : activityQuantity_;
        }
      }
      /**
       * <pre>
       * The quantity of the activity variable.
       * </pre>
       *
       * <code>.protolca.Ref activity_quantity = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getActivityQuantityFieldBuilder() {
        if (activityQuantityBuilder_ == null) {
          activityQuantityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getActivityQuantity(),
                  getParentForChildren(),
                  isClean());
          activityQuantity_ = null;
        }
        return activityQuantityBuilder_;
      }

      private org.openlca.proto.Proto.Ref activityUnit_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> activityUnitBuilder_;
      /**
       * <pre>
       * The unit of the activity variable.
       * </pre>
       *
       * <code>.protolca.Ref activity_unit = 12;</code>
       * @return Whether the activityUnit field is set.
       */
      public boolean hasActivityUnit() {
        return activityUnitBuilder_ != null || activityUnit_ != null;
      }
      /**
       * <pre>
       * The unit of the activity variable.
       * </pre>
       *
       * <code>.protolca.Ref activity_unit = 12;</code>
       * @return The activityUnit.
       */
      public org.openlca.proto.Proto.Ref getActivityUnit() {
        if (activityUnitBuilder_ == null) {
          return activityUnit_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : activityUnit_;
        } else {
          return activityUnitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The unit of the activity variable.
       * </pre>
       *
       * <code>.protolca.Ref activity_unit = 12;</code>
       */
      public Builder setActivityUnit(org.openlca.proto.Proto.Ref value) {
        if (activityUnitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          activityUnit_ = value;
          onChanged();
        } else {
          activityUnitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The unit of the activity variable.
       * </pre>
       *
       * <code>.protolca.Ref activity_unit = 12;</code>
       */
      public Builder setActivityUnit(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (activityUnitBuilder_ == null) {
          activityUnit_ = builderForValue.build();
          onChanged();
        } else {
          activityUnitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The unit of the activity variable.
       * </pre>
       *
       * <code>.protolca.Ref activity_unit = 12;</code>
       */
      public Builder mergeActivityUnit(org.openlca.proto.Proto.Ref value) {
        if (activityUnitBuilder_ == null) {
          if (activityUnit_ != null) {
            activityUnit_ =
              org.openlca.proto.Proto.Ref.newBuilder(activityUnit_).mergeFrom(value).buildPartial();
          } else {
            activityUnit_ = value;
          }
          onChanged();
        } else {
          activityUnitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The unit of the activity variable.
       * </pre>
       *
       * <code>.protolca.Ref activity_unit = 12;</code>
       */
      public Builder clearActivityUnit() {
        if (activityUnitBuilder_ == null) {
          activityUnit_ = null;
          onChanged();
        } else {
          activityUnit_ = null;
          activityUnitBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The unit of the activity variable.
       * </pre>
       *
       * <code>.protolca.Ref activity_unit = 12;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getActivityUnitBuilder() {
        
        onChanged();
        return getActivityUnitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The unit of the activity variable.
       * </pre>
       *
       * <code>.protolca.Ref activity_unit = 12;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getActivityUnitOrBuilder() {
        if (activityUnitBuilder_ != null) {
          return activityUnitBuilder_.getMessageOrBuilder();
        } else {
          return activityUnit_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : activityUnit_;
        }
      }
      /**
       * <pre>
       * The unit of the activity variable.
       * </pre>
       *
       * <code>.protolca.Ref activity_unit = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getActivityUnitFieldBuilder() {
        if (activityUnitBuilder_ == null) {
          activityUnitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getActivityUnit(),
                  getParentForChildren(),
                  isClean());
          activityUnit_ = null;
        }
        return activityUnitBuilder_;
      }

      private java.lang.Object unitOfMeasurement_ = "";
      /**
       * <pre>
       * The unit in which the indicator is measured.
       * </pre>
       *
       * <code>string unit_of_measurement = 13;</code>
       * @return The unitOfMeasurement.
       */
      public java.lang.String getUnitOfMeasurement() {
        java.lang.Object ref = unitOfMeasurement_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          unitOfMeasurement_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The unit in which the indicator is measured.
       * </pre>
       *
       * <code>string unit_of_measurement = 13;</code>
       * @return The bytes for unitOfMeasurement.
       */
      public com.google.protobuf.ByteString
          getUnitOfMeasurementBytes() {
        java.lang.Object ref = unitOfMeasurement_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          unitOfMeasurement_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The unit in which the indicator is measured.
       * </pre>
       *
       * <code>string unit_of_measurement = 13;</code>
       * @param value The unitOfMeasurement to set.
       * @return This builder for chaining.
       */
      public Builder setUnitOfMeasurement(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        unitOfMeasurement_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The unit in which the indicator is measured.
       * </pre>
       *
       * <code>string unit_of_measurement = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearUnitOfMeasurement() {
        
        unitOfMeasurement_ = getDefaultInstance().getUnitOfMeasurement();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The unit in which the indicator is measured.
       * </pre>
       *
       * <code>string unit_of_measurement = 13;</code>
       * @param value The bytes for unitOfMeasurement to set.
       * @return This builder for chaining.
       */
      public Builder setUnitOfMeasurementBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        unitOfMeasurement_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object evaluationScheme_ = "";
      /**
       * <pre>
       * Documentation of the evaluation scheme of the indicator.
       * </pre>
       *
       * <code>string evaluation_scheme = 14;</code>
       * @return The evaluationScheme.
       */
      public java.lang.String getEvaluationScheme() {
        java.lang.Object ref = evaluationScheme_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          evaluationScheme_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Documentation of the evaluation scheme of the indicator.
       * </pre>
       *
       * <code>string evaluation_scheme = 14;</code>
       * @return The bytes for evaluationScheme.
       */
      public com.google.protobuf.ByteString
          getEvaluationSchemeBytes() {
        java.lang.Object ref = evaluationScheme_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          evaluationScheme_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Documentation of the evaluation scheme of the indicator.
       * </pre>
       *
       * <code>string evaluation_scheme = 14;</code>
       * @param value The evaluationScheme to set.
       * @return This builder for chaining.
       */
      public Builder setEvaluationScheme(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        evaluationScheme_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Documentation of the evaluation scheme of the indicator.
       * </pre>
       *
       * <code>string evaluation_scheme = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearEvaluationScheme() {
        
        evaluationScheme_ = getDefaultInstance().getEvaluationScheme();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Documentation of the evaluation scheme of the indicator.
       * </pre>
       *
       * <code>string evaluation_scheme = 14;</code>
       * @param value The bytes for evaluationScheme to set.
       * @return This builder for chaining.
       */
      public Builder setEvaluationSchemeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        evaluationScheme_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.SocialIndicator)
    }

    // @@protoc_insertion_point(class_scope:protolca.SocialIndicator)
    private static final org.openlca.proto.Proto.SocialIndicator DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.SocialIndicator();
    }

    public static org.openlca.proto.Proto.SocialIndicator getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SocialIndicator>
        PARSER = new com.google.protobuf.AbstractParser<SocialIndicator>() {
      @java.lang.Override
      public SocialIndicator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SocialIndicator(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SocialIndicator> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SocialIndicator> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.SocialIndicator getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SourceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.Source)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    boolean hasCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    org.openlca.proto.Proto.Ref getCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder();

    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    java.util.List<java.lang.String>
        getTagsList();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    int getTagsCount();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    java.lang.String getTags(int index);
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);

    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    java.lang.String getLibrary();
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    com.google.protobuf.ByteString
        getLibraryBytes();

    /**
     * <pre>
     * A URL that points to the source.
     * </pre>
     *
     * <code>string url = 10;</code>
     * @return The url.
     */
    java.lang.String getUrl();
    /**
     * <pre>
     * A URL that points to the source.
     * </pre>
     *
     * <code>string url = 10;</code>
     * @return The bytes for url.
     */
    com.google.protobuf.ByteString
        getUrlBytes();

    /**
     * <pre>
     * The full text reference of the source.
     * </pre>
     *
     * <code>string text_reference = 11;</code>
     * @return The textReference.
     */
    java.lang.String getTextReference();
    /**
     * <pre>
     * The full text reference of the source.
     * </pre>
     *
     * <code>string text_reference = 11;</code>
     * @return The bytes for textReference.
     */
    com.google.protobuf.ByteString
        getTextReferenceBytes();

    /**
     * <pre>
     * The publication year of the source.
     * </pre>
     *
     * <code>int32 year = 12;</code>
     * @return The year.
     */
    int getYear();

    /**
     * <pre>
     * A direct link (relative or absolute URL) to the source file.
     * </pre>
     *
     * <code>string external_file = 13;</code>
     * @return The externalFile.
     */
    java.lang.String getExternalFile();
    /**
     * <pre>
     * A direct link (relative or absolute URL) to the source file.
     * </pre>
     *
     * <code>string external_file = 13;</code>
     * @return The bytes for externalFile.
     */
    com.google.protobuf.ByteString
        getExternalFileBytes();
  }
  /**
   * <pre>
   * A source is a literature reference.
   * </pre>
   *
   * Protobuf type {@code protolca.Source}
   */
  public static final class Source extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.Source)
      SourceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Source.newBuilder() to construct.
    private Source(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Source() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      library_ = "";
      url_ = "";
      textReference_ = "";
      externalFile_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Source();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Source(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (category_ != null) {
                subBuilder = category_.toBuilder();
              }
              category_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(category_);
                category_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tags_.add(s);
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              library_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              url_ = s;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              textReference_ = s;
              break;
            }
            case 96: {

              year_ = input.readInt32();
              break;
            }
            case 106: {
              java.lang.String s = input.readStringRequireUtf8();

              externalFile_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_Source_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_Source_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.Source.class, org.openlca.proto.Proto.Source.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.Ref category_;
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    @java.lang.Override
    public boolean hasCategory() {
      return category_ != null;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getCategory() {
      return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
      return getCategory();
    }

    public static final int TAGS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    public static final int LIBRARY_FIELD_NUMBER = 9;
    private volatile java.lang.Object library_;
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    @java.lang.Override
    public java.lang.String getLibrary() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        library_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLibraryBytes() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        library_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int URL_FIELD_NUMBER = 10;
    private volatile java.lang.Object url_;
    /**
     * <pre>
     * A URL that points to the source.
     * </pre>
     *
     * <code>string url = 10;</code>
     * @return The url.
     */
    @java.lang.Override
    public java.lang.String getUrl() {
      java.lang.Object ref = url_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        url_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A URL that points to the source.
     * </pre>
     *
     * <code>string url = 10;</code>
     * @return The bytes for url.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUrlBytes() {
      java.lang.Object ref = url_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        url_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEXT_REFERENCE_FIELD_NUMBER = 11;
    private volatile java.lang.Object textReference_;
    /**
     * <pre>
     * The full text reference of the source.
     * </pre>
     *
     * <code>string text_reference = 11;</code>
     * @return The textReference.
     */
    @java.lang.Override
    public java.lang.String getTextReference() {
      java.lang.Object ref = textReference_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        textReference_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The full text reference of the source.
     * </pre>
     *
     * <code>string text_reference = 11;</code>
     * @return The bytes for textReference.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTextReferenceBytes() {
      java.lang.Object ref = textReference_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        textReference_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int YEAR_FIELD_NUMBER = 12;
    private int year_;
    /**
     * <pre>
     * The publication year of the source.
     * </pre>
     *
     * <code>int32 year = 12;</code>
     * @return The year.
     */
    @java.lang.Override
    public int getYear() {
      return year_;
    }

    public static final int EXTERNAL_FILE_FIELD_NUMBER = 13;
    private volatile java.lang.Object externalFile_;
    /**
     * <pre>
     * A direct link (relative or absolute URL) to the source file.
     * </pre>
     *
     * <code>string external_file = 13;</code>
     * @return The externalFile.
     */
    @java.lang.Override
    public java.lang.String getExternalFile() {
      java.lang.Object ref = externalFile_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        externalFile_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A direct link (relative or absolute URL) to the source file.
     * </pre>
     *
     * <code>string external_file = 13;</code>
     * @return The bytes for externalFile.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getExternalFileBytes() {
      java.lang.Object ref = externalFile_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        externalFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (category_ != null) {
        output.writeMessage(7, getCategory());
      }
      for (int i = 0; i < tags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, tags_.getRaw(i));
      }
      if (!getLibraryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, library_);
      }
      if (!getUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, url_);
      }
      if (!getTextReferenceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, textReference_);
      }
      if (year_ != 0) {
        output.writeInt32(12, year_);
      }
      if (!getExternalFileBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, externalFile_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (category_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCategory());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += computeStringSizeNoTag(tags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      if (!getLibraryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, library_);
      }
      if (!getUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, url_);
      }
      if (!getTextReferenceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, textReference_);
      }
      if (year_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, year_);
      }
      if (!getExternalFileBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, externalFile_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.Source)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.Source other = (org.openlca.proto.Proto.Source) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (hasCategory() != other.hasCategory()) return false;
      if (hasCategory()) {
        if (!getCategory()
            .equals(other.getCategory())) return false;
      }
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (!getLibrary()
          .equals(other.getLibrary())) return false;
      if (!getUrl()
          .equals(other.getUrl())) return false;
      if (!getTextReference()
          .equals(other.getTextReference())) return false;
      if (getYear()
          != other.getYear()) return false;
      if (!getExternalFile()
          .equals(other.getExternalFile())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (hasCategory()) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategory().hashCode();
      }
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibrary().hashCode();
      hash = (37 * hash) + URL_FIELD_NUMBER;
      hash = (53 * hash) + getUrl().hashCode();
      hash = (37 * hash) + TEXT_REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTextReference().hashCode();
      hash = (37 * hash) + YEAR_FIELD_NUMBER;
      hash = (53 * hash) + getYear();
      hash = (37 * hash) + EXTERNAL_FILE_FIELD_NUMBER;
      hash = (53 * hash) + getExternalFile().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.Source parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Source parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Source parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Source parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Source parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Source parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Source parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Source parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Source parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Source parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Source parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Source parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.Source prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A source is a literature reference.
     * </pre>
     *
     * Protobuf type {@code protolca.Source}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.Source)
        org.openlca.proto.Proto.SourceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_Source_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_Source_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.Source.class, org.openlca.proto.Proto.Source.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.Source.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        if (categoryBuilder_ == null) {
          category_ = null;
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        library_ = "";

        url_ = "";

        textReference_ = "";

        year_ = 0;

        externalFile_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_Source_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Source getDefaultInstanceForType() {
        return org.openlca.proto.Proto.Source.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Source build() {
        org.openlca.proto.Proto.Source result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Source buildPartial() {
        org.openlca.proto.Proto.Source result = new org.openlca.proto.Proto.Source(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (categoryBuilder_ == null) {
          result.category_ = category_;
        } else {
          result.category_ = categoryBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tags_ = tags_;
        result.library_ = library_;
        result.url_ = url_;
        result.textReference_ = textReference_;
        result.year_ = year_;
        result.externalFile_ = externalFile_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.Source) {
          return mergeFrom((org.openlca.proto.Proto.Source)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.Source other) {
        if (other == org.openlca.proto.Proto.Source.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.hasCategory()) {
          mergeCategory(other.getCategory());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        if (!other.getLibrary().isEmpty()) {
          library_ = other.library_;
          onChanged();
        }
        if (!other.getUrl().isEmpty()) {
          url_ = other.url_;
          onChanged();
        }
        if (!other.getTextReference().isEmpty()) {
          textReference_ = other.textReference_;
          onChanged();
        }
        if (other.getYear() != 0) {
          setYear(other.getYear());
        }
        if (!other.getExternalFile().isEmpty()) {
          externalFile_ = other.externalFile_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.Source parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.Source) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref category_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> categoryBuilder_;
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return Whether the category field is set.
       */
      public boolean hasCategory() {
        return categoryBuilder_ != null || category_ != null;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return The category.
       */
      public org.openlca.proto.Proto.Ref getCategory() {
        if (categoryBuilder_ == null) {
          return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        } else {
          return categoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          category_ = value;
          onChanged();
        } else {
          categoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          category_ = builderForValue.build();
          onChanged();
        } else {
          categoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder mergeCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (category_ != null) {
            category_ =
              org.openlca.proto.Proto.Ref.newBuilder(category_).mergeFrom(value).buildPartial();
          } else {
            category_ = value;
          }
          onChanged();
        } else {
          categoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder clearCategory() {
        if (categoryBuilder_ == null) {
          category_ = null;
          onChanged();
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getCategoryBuilder() {
        
        onChanged();
        return getCategoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
        if (categoryBuilder_ != null) {
          return categoryBuilder_.getMessageOrBuilder();
        } else {
          return category_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getCategoryFieldBuilder() {
        if (categoryBuilder_ == null) {
          categoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getCategory(),
                  getParentForChildren(),
                  isClean());
          category_ = null;
        }
        return categoryBuilder_;
      }

      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return A list containing the tags.
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return The count of tags.
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the element to return.
       * @return The tags at the given index.
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tags at the given index.
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index to set the value at.
       * @param value The tags to set.
       * @return This builder for chaining.
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The tags to add.
       * @return This builder for chaining.
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param values The tags to add.
       * @return This builder for chaining.
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The bytes of the tags to add.
       * @return This builder for chaining.
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object library_ = "";
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The library.
       */
      public java.lang.String getLibrary() {
        java.lang.Object ref = library_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          library_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The bytes for library.
       */
      public com.google.protobuf.ByteString
          getLibraryBytes() {
        java.lang.Object ref = library_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          library_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The library to set.
       * @return This builder for chaining.
       */
      public Builder setLibrary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        library_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLibrary() {
        
        library_ = getDefaultInstance().getLibrary();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The bytes for library to set.
       * @return This builder for chaining.
       */
      public Builder setLibraryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        library_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object url_ = "";
      /**
       * <pre>
       * A URL that points to the source.
       * </pre>
       *
       * <code>string url = 10;</code>
       * @return The url.
       */
      public java.lang.String getUrl() {
        java.lang.Object ref = url_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          url_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A URL that points to the source.
       * </pre>
       *
       * <code>string url = 10;</code>
       * @return The bytes for url.
       */
      public com.google.protobuf.ByteString
          getUrlBytes() {
        java.lang.Object ref = url_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          url_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A URL that points to the source.
       * </pre>
       *
       * <code>string url = 10;</code>
       * @param value The url to set.
       * @return This builder for chaining.
       */
      public Builder setUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        url_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A URL that points to the source.
       * </pre>
       *
       * <code>string url = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearUrl() {
        
        url_ = getDefaultInstance().getUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A URL that points to the source.
       * </pre>
       *
       * <code>string url = 10;</code>
       * @param value The bytes for url to set.
       * @return This builder for chaining.
       */
      public Builder setUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        url_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object textReference_ = "";
      /**
       * <pre>
       * The full text reference of the source.
       * </pre>
       *
       * <code>string text_reference = 11;</code>
       * @return The textReference.
       */
      public java.lang.String getTextReference() {
        java.lang.Object ref = textReference_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          textReference_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The full text reference of the source.
       * </pre>
       *
       * <code>string text_reference = 11;</code>
       * @return The bytes for textReference.
       */
      public com.google.protobuf.ByteString
          getTextReferenceBytes() {
        java.lang.Object ref = textReference_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          textReference_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The full text reference of the source.
       * </pre>
       *
       * <code>string text_reference = 11;</code>
       * @param value The textReference to set.
       * @return This builder for chaining.
       */
      public Builder setTextReference(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        textReference_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The full text reference of the source.
       * </pre>
       *
       * <code>string text_reference = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearTextReference() {
        
        textReference_ = getDefaultInstance().getTextReference();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The full text reference of the source.
       * </pre>
       *
       * <code>string text_reference = 11;</code>
       * @param value The bytes for textReference to set.
       * @return This builder for chaining.
       */
      public Builder setTextReferenceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        textReference_ = value;
        onChanged();
        return this;
      }

      private int year_ ;
      /**
       * <pre>
       * The publication year of the source.
       * </pre>
       *
       * <code>int32 year = 12;</code>
       * @return The year.
       */
      @java.lang.Override
      public int getYear() {
        return year_;
      }
      /**
       * <pre>
       * The publication year of the source.
       * </pre>
       *
       * <code>int32 year = 12;</code>
       * @param value The year to set.
       * @return This builder for chaining.
       */
      public Builder setYear(int value) {
        
        year_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The publication year of the source.
       * </pre>
       *
       * <code>int32 year = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearYear() {
        
        year_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object externalFile_ = "";
      /**
       * <pre>
       * A direct link (relative or absolute URL) to the source file.
       * </pre>
       *
       * <code>string external_file = 13;</code>
       * @return The externalFile.
       */
      public java.lang.String getExternalFile() {
        java.lang.Object ref = externalFile_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          externalFile_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A direct link (relative or absolute URL) to the source file.
       * </pre>
       *
       * <code>string external_file = 13;</code>
       * @return The bytes for externalFile.
       */
      public com.google.protobuf.ByteString
          getExternalFileBytes() {
        java.lang.Object ref = externalFile_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          externalFile_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A direct link (relative or absolute URL) to the source file.
       * </pre>
       *
       * <code>string external_file = 13;</code>
       * @param value The externalFile to set.
       * @return This builder for chaining.
       */
      public Builder setExternalFile(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        externalFile_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A direct link (relative or absolute URL) to the source file.
       * </pre>
       *
       * <code>string external_file = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearExternalFile() {
        
        externalFile_ = getDefaultInstance().getExternalFile();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A direct link (relative or absolute URL) to the source file.
       * </pre>
       *
       * <code>string external_file = 13;</code>
       * @param value The bytes for externalFile to set.
       * @return This builder for chaining.
       */
      public Builder setExternalFileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        externalFile_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.Source)
    }

    // @@protoc_insertion_point(class_scope:protolca.Source)
    private static final org.openlca.proto.Proto.Source DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.Source();
    }

    public static org.openlca.proto.Proto.Source getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Source>
        PARSER = new com.google.protobuf.AbstractParser<Source>() {
      @java.lang.Override
      public Source parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Source(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Source> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Source> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.Source getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UncertaintyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.Uncertainty)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The uncertainty distribution type
     * </pre>
     *
     * <code>.protolca.UncertaintyType distribution_type = 2;</code>
     * @return The enum numeric value on the wire for distributionType.
     */
    int getDistributionTypeValue();
    /**
     * <pre>
     * The uncertainty distribution type
     * </pre>
     *
     * <code>.protolca.UncertaintyType distribution_type = 2;</code>
     * @return The distributionType.
     */
    org.openlca.proto.Proto.UncertaintyType getDistributionType();

    /**
     * <pre>
     * The arithmetic mean (used for normal distributions).
     * </pre>
     *
     * <code>double mean = 3;</code>
     * @return The mean.
     */
    double getMean();

    /**
     * <pre>
     * A mathematical formula for the arithmetic mean.
     * </pre>
     *
     * <code>string mean_formula = 4;</code>
     * @return The meanFormula.
     */
    java.lang.String getMeanFormula();
    /**
     * <pre>
     * A mathematical formula for the arithmetic mean.
     * </pre>
     *
     * <code>string mean_formula = 4;</code>
     * @return The bytes for meanFormula.
     */
    com.google.protobuf.ByteString
        getMeanFormulaBytes();

    /**
     * <pre>
     * The geometric mean value (used for log-normal distributions).
     * </pre>
     *
     * <code>double geom_mean = 5;</code>
     * @return The geomMean.
     */
    double getGeomMean();

    /**
     * <pre>
     * A mathematical formula for the geometric mean.
     * </pre>
     *
     * <code>string geom_mean_formula = 6;</code>
     * @return The geomMeanFormula.
     */
    java.lang.String getGeomMeanFormula();
    /**
     * <pre>
     * A mathematical formula for the geometric mean.
     * </pre>
     *
     * <code>string geom_mean_formula = 6;</code>
     * @return The bytes for geomMeanFormula.
     */
    com.google.protobuf.ByteString
        getGeomMeanFormulaBytes();

    /**
     * <pre>
     * The minimum value (used for uniform and triangle distributions).
     * </pre>
     *
     * <code>double minimum = 7;</code>
     * @return The minimum.
     */
    double getMinimum();

    /**
     * <pre>
     * A mathematical formula for the minimum value.
     * </pre>
     *
     * <code>string minimum_formula = 8;</code>
     * @return The minimumFormula.
     */
    java.lang.String getMinimumFormula();
    /**
     * <pre>
     * A mathematical formula for the minimum value.
     * </pre>
     *
     * <code>string minimum_formula = 8;</code>
     * @return The bytes for minimumFormula.
     */
    com.google.protobuf.ByteString
        getMinimumFormulaBytes();

    /**
     * <pre>
     * The arithmetic standard deviation (used for normal distributions).
     * </pre>
     *
     * <code>double sd = 9;</code>
     * @return The sd.
     */
    double getSd();

    /**
     * <pre>
     * A mathematical formula for the arithmetic standard deviation.
     * </pre>
     *
     * <code>string sd_formula = 10;</code>
     * @return The sdFormula.
     */
    java.lang.String getSdFormula();
    /**
     * <pre>
     * A mathematical formula for the arithmetic standard deviation.
     * </pre>
     *
     * <code>string sd_formula = 10;</code>
     * @return The bytes for sdFormula.
     */
    com.google.protobuf.ByteString
        getSdFormulaBytes();

    /**
     * <pre>
     * The geometric standard deviation (used for log-normal distributions).
     * </pre>
     *
     * <code>double geom_sd = 11;</code>
     * @return The geomSd.
     */
    double getGeomSd();

    /**
     * <pre>
     * A mathematical formula for the geometric standard deviation.
     * </pre>
     *
     * <code>string geom_sd_formula = 12;</code>
     * @return The geomSdFormula.
     */
    java.lang.String getGeomSdFormula();
    /**
     * <pre>
     * A mathematical formula for the geometric standard deviation.
     * </pre>
     *
     * <code>string geom_sd_formula = 12;</code>
     * @return The bytes for geomSdFormula.
     */
    com.google.protobuf.ByteString
        getGeomSdFormulaBytes();

    /**
     * <pre>
     * The most likely value (used for triangle distributions).
     * </pre>
     *
     * <code>double mode = 13;</code>
     * @return The mode.
     */
    double getMode();

    /**
     * <pre>
     * A mathematical formula for the most likely value.
     * </pre>
     *
     * <code>string mode_formula = 14;</code>
     * @return The modeFormula.
     */
    java.lang.String getModeFormula();
    /**
     * <pre>
     * A mathematical formula for the most likely value.
     * </pre>
     *
     * <code>string mode_formula = 14;</code>
     * @return The bytes for modeFormula.
     */
    com.google.protobuf.ByteString
        getModeFormulaBytes();

    /**
     * <pre>
     * The maximum value (used for uniform and triangle distributions).
     * </pre>
     *
     * <code>double maximum = 15;</code>
     * @return The maximum.
     */
    double getMaximum();

    /**
     * <pre>
     * A mathematical formula for the maximum value.
     * </pre>
     *
     * <code>string maximum_formula = 16;</code>
     * @return The maximumFormula.
     */
    java.lang.String getMaximumFormula();
    /**
     * <pre>
     * A mathematical formula for the maximum value.
     * </pre>
     *
     * <code>string maximum_formula = 16;</code>
     * @return The bytes for maximumFormula.
     */
    com.google.protobuf.ByteString
        getMaximumFormulaBytes();
  }
  /**
   * <pre>
   * Defines the parameter values of an uncertainty distribution. Depending on
   * the uncertainty distribution type different parameters could be used.
   * </pre>
   *
   * Protobuf type {@code protolca.Uncertainty}
   */
  public static final class Uncertainty extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.Uncertainty)
      UncertaintyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Uncertainty.newBuilder() to construct.
    private Uncertainty(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Uncertainty() {
      type_ = "";
      distributionType_ = 0;
      meanFormula_ = "";
      geomMeanFormula_ = "";
      minimumFormula_ = "";
      sdFormula_ = "";
      geomSdFormula_ = "";
      modeFormula_ = "";
      maximumFormula_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Uncertainty();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Uncertainty(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              distributionType_ = rawValue;
              break;
            }
            case 25: {

              mean_ = input.readDouble();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              meanFormula_ = s;
              break;
            }
            case 41: {

              geomMean_ = input.readDouble();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              geomMeanFormula_ = s;
              break;
            }
            case 57: {

              minimum_ = input.readDouble();
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              minimumFormula_ = s;
              break;
            }
            case 73: {

              sd_ = input.readDouble();
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              sdFormula_ = s;
              break;
            }
            case 89: {

              geomSd_ = input.readDouble();
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              geomSdFormula_ = s;
              break;
            }
            case 105: {

              mode_ = input.readDouble();
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();

              modeFormula_ = s;
              break;
            }
            case 121: {

              maximum_ = input.readDouble();
              break;
            }
            case 130: {
              java.lang.String s = input.readStringRequireUtf8();

              maximumFormula_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_Uncertainty_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_Uncertainty_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.Uncertainty.class, org.openlca.proto.Proto.Uncertainty.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DISTRIBUTION_TYPE_FIELD_NUMBER = 2;
    private int distributionType_;
    /**
     * <pre>
     * The uncertainty distribution type
     * </pre>
     *
     * <code>.protolca.UncertaintyType distribution_type = 2;</code>
     * @return The enum numeric value on the wire for distributionType.
     */
    @java.lang.Override public int getDistributionTypeValue() {
      return distributionType_;
    }
    /**
     * <pre>
     * The uncertainty distribution type
     * </pre>
     *
     * <code>.protolca.UncertaintyType distribution_type = 2;</code>
     * @return The distributionType.
     */
    @java.lang.Override public org.openlca.proto.Proto.UncertaintyType getDistributionType() {
      @SuppressWarnings("deprecation")
      org.openlca.proto.Proto.UncertaintyType result = org.openlca.proto.Proto.UncertaintyType.valueOf(distributionType_);
      return result == null ? org.openlca.proto.Proto.UncertaintyType.UNRECOGNIZED : result;
    }

    public static final int MEAN_FIELD_NUMBER = 3;
    private double mean_;
    /**
     * <pre>
     * The arithmetic mean (used for normal distributions).
     * </pre>
     *
     * <code>double mean = 3;</code>
     * @return The mean.
     */
    @java.lang.Override
    public double getMean() {
      return mean_;
    }

    public static final int MEAN_FORMULA_FIELD_NUMBER = 4;
    private volatile java.lang.Object meanFormula_;
    /**
     * <pre>
     * A mathematical formula for the arithmetic mean.
     * </pre>
     *
     * <code>string mean_formula = 4;</code>
     * @return The meanFormula.
     */
    @java.lang.Override
    public java.lang.String getMeanFormula() {
      java.lang.Object ref = meanFormula_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        meanFormula_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A mathematical formula for the arithmetic mean.
     * </pre>
     *
     * <code>string mean_formula = 4;</code>
     * @return The bytes for meanFormula.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMeanFormulaBytes() {
      java.lang.Object ref = meanFormula_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meanFormula_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GEOM_MEAN_FIELD_NUMBER = 5;
    private double geomMean_;
    /**
     * <pre>
     * The geometric mean value (used for log-normal distributions).
     * </pre>
     *
     * <code>double geom_mean = 5;</code>
     * @return The geomMean.
     */
    @java.lang.Override
    public double getGeomMean() {
      return geomMean_;
    }

    public static final int GEOM_MEAN_FORMULA_FIELD_NUMBER = 6;
    private volatile java.lang.Object geomMeanFormula_;
    /**
     * <pre>
     * A mathematical formula for the geometric mean.
     * </pre>
     *
     * <code>string geom_mean_formula = 6;</code>
     * @return The geomMeanFormula.
     */
    @java.lang.Override
    public java.lang.String getGeomMeanFormula() {
      java.lang.Object ref = geomMeanFormula_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        geomMeanFormula_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A mathematical formula for the geometric mean.
     * </pre>
     *
     * <code>string geom_mean_formula = 6;</code>
     * @return The bytes for geomMeanFormula.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGeomMeanFormulaBytes() {
      java.lang.Object ref = geomMeanFormula_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        geomMeanFormula_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MINIMUM_FIELD_NUMBER = 7;
    private double minimum_;
    /**
     * <pre>
     * The minimum value (used for uniform and triangle distributions).
     * </pre>
     *
     * <code>double minimum = 7;</code>
     * @return The minimum.
     */
    @java.lang.Override
    public double getMinimum() {
      return minimum_;
    }

    public static final int MINIMUM_FORMULA_FIELD_NUMBER = 8;
    private volatile java.lang.Object minimumFormula_;
    /**
     * <pre>
     * A mathematical formula for the minimum value.
     * </pre>
     *
     * <code>string minimum_formula = 8;</code>
     * @return The minimumFormula.
     */
    @java.lang.Override
    public java.lang.String getMinimumFormula() {
      java.lang.Object ref = minimumFormula_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        minimumFormula_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A mathematical formula for the minimum value.
     * </pre>
     *
     * <code>string minimum_formula = 8;</code>
     * @return The bytes for minimumFormula.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMinimumFormulaBytes() {
      java.lang.Object ref = minimumFormula_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        minimumFormula_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SD_FIELD_NUMBER = 9;
    private double sd_;
    /**
     * <pre>
     * The arithmetic standard deviation (used for normal distributions).
     * </pre>
     *
     * <code>double sd = 9;</code>
     * @return The sd.
     */
    @java.lang.Override
    public double getSd() {
      return sd_;
    }

    public static final int SD_FORMULA_FIELD_NUMBER = 10;
    private volatile java.lang.Object sdFormula_;
    /**
     * <pre>
     * A mathematical formula for the arithmetic standard deviation.
     * </pre>
     *
     * <code>string sd_formula = 10;</code>
     * @return The sdFormula.
     */
    @java.lang.Override
    public java.lang.String getSdFormula() {
      java.lang.Object ref = sdFormula_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sdFormula_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A mathematical formula for the arithmetic standard deviation.
     * </pre>
     *
     * <code>string sd_formula = 10;</code>
     * @return The bytes for sdFormula.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSdFormulaBytes() {
      java.lang.Object ref = sdFormula_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sdFormula_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GEOM_SD_FIELD_NUMBER = 11;
    private double geomSd_;
    /**
     * <pre>
     * The geometric standard deviation (used for log-normal distributions).
     * </pre>
     *
     * <code>double geom_sd = 11;</code>
     * @return The geomSd.
     */
    @java.lang.Override
    public double getGeomSd() {
      return geomSd_;
    }

    public static final int GEOM_SD_FORMULA_FIELD_NUMBER = 12;
    private volatile java.lang.Object geomSdFormula_;
    /**
     * <pre>
     * A mathematical formula for the geometric standard deviation.
     * </pre>
     *
     * <code>string geom_sd_formula = 12;</code>
     * @return The geomSdFormula.
     */
    @java.lang.Override
    public java.lang.String getGeomSdFormula() {
      java.lang.Object ref = geomSdFormula_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        geomSdFormula_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A mathematical formula for the geometric standard deviation.
     * </pre>
     *
     * <code>string geom_sd_formula = 12;</code>
     * @return The bytes for geomSdFormula.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGeomSdFormulaBytes() {
      java.lang.Object ref = geomSdFormula_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        geomSdFormula_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MODE_FIELD_NUMBER = 13;
    private double mode_;
    /**
     * <pre>
     * The most likely value (used for triangle distributions).
     * </pre>
     *
     * <code>double mode = 13;</code>
     * @return The mode.
     */
    @java.lang.Override
    public double getMode() {
      return mode_;
    }

    public static final int MODE_FORMULA_FIELD_NUMBER = 14;
    private volatile java.lang.Object modeFormula_;
    /**
     * <pre>
     * A mathematical formula for the most likely value.
     * </pre>
     *
     * <code>string mode_formula = 14;</code>
     * @return The modeFormula.
     */
    @java.lang.Override
    public java.lang.String getModeFormula() {
      java.lang.Object ref = modeFormula_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modeFormula_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A mathematical formula for the most likely value.
     * </pre>
     *
     * <code>string mode_formula = 14;</code>
     * @return The bytes for modeFormula.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getModeFormulaBytes() {
      java.lang.Object ref = modeFormula_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modeFormula_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAXIMUM_FIELD_NUMBER = 15;
    private double maximum_;
    /**
     * <pre>
     * The maximum value (used for uniform and triangle distributions).
     * </pre>
     *
     * <code>double maximum = 15;</code>
     * @return The maximum.
     */
    @java.lang.Override
    public double getMaximum() {
      return maximum_;
    }

    public static final int MAXIMUM_FORMULA_FIELD_NUMBER = 16;
    private volatile java.lang.Object maximumFormula_;
    /**
     * <pre>
     * A mathematical formula for the maximum value.
     * </pre>
     *
     * <code>string maximum_formula = 16;</code>
     * @return The maximumFormula.
     */
    @java.lang.Override
    public java.lang.String getMaximumFormula() {
      java.lang.Object ref = maximumFormula_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        maximumFormula_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A mathematical formula for the maximum value.
     * </pre>
     *
     * <code>string maximum_formula = 16;</code>
     * @return The bytes for maximumFormula.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMaximumFormulaBytes() {
      java.lang.Object ref = maximumFormula_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        maximumFormula_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (distributionType_ != org.openlca.proto.Proto.UncertaintyType.UNDEFINED_UNCERTAINTY_TYPE.getNumber()) {
        output.writeEnum(2, distributionType_);
      }
      if (mean_ != 0D) {
        output.writeDouble(3, mean_);
      }
      if (!getMeanFormulaBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, meanFormula_);
      }
      if (geomMean_ != 0D) {
        output.writeDouble(5, geomMean_);
      }
      if (!getGeomMeanFormulaBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, geomMeanFormula_);
      }
      if (minimum_ != 0D) {
        output.writeDouble(7, minimum_);
      }
      if (!getMinimumFormulaBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, minimumFormula_);
      }
      if (sd_ != 0D) {
        output.writeDouble(9, sd_);
      }
      if (!getSdFormulaBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, sdFormula_);
      }
      if (geomSd_ != 0D) {
        output.writeDouble(11, geomSd_);
      }
      if (!getGeomSdFormulaBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, geomSdFormula_);
      }
      if (mode_ != 0D) {
        output.writeDouble(13, mode_);
      }
      if (!getModeFormulaBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, modeFormula_);
      }
      if (maximum_ != 0D) {
        output.writeDouble(15, maximum_);
      }
      if (!getMaximumFormulaBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 16, maximumFormula_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (distributionType_ != org.openlca.proto.Proto.UncertaintyType.UNDEFINED_UNCERTAINTY_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, distributionType_);
      }
      if (mean_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, mean_);
      }
      if (!getMeanFormulaBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, meanFormula_);
      }
      if (geomMean_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, geomMean_);
      }
      if (!getGeomMeanFormulaBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, geomMeanFormula_);
      }
      if (minimum_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, minimum_);
      }
      if (!getMinimumFormulaBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, minimumFormula_);
      }
      if (sd_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, sd_);
      }
      if (!getSdFormulaBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, sdFormula_);
      }
      if (geomSd_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, geomSd_);
      }
      if (!getGeomSdFormulaBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, geomSdFormula_);
      }
      if (mode_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, mode_);
      }
      if (!getModeFormulaBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, modeFormula_);
      }
      if (maximum_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(15, maximum_);
      }
      if (!getMaximumFormulaBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, maximumFormula_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.Uncertainty)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.Uncertainty other = (org.openlca.proto.Proto.Uncertainty) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (distributionType_ != other.distributionType_) return false;
      if (java.lang.Double.doubleToLongBits(getMean())
          != java.lang.Double.doubleToLongBits(
              other.getMean())) return false;
      if (!getMeanFormula()
          .equals(other.getMeanFormula())) return false;
      if (java.lang.Double.doubleToLongBits(getGeomMean())
          != java.lang.Double.doubleToLongBits(
              other.getGeomMean())) return false;
      if (!getGeomMeanFormula()
          .equals(other.getGeomMeanFormula())) return false;
      if (java.lang.Double.doubleToLongBits(getMinimum())
          != java.lang.Double.doubleToLongBits(
              other.getMinimum())) return false;
      if (!getMinimumFormula()
          .equals(other.getMinimumFormula())) return false;
      if (java.lang.Double.doubleToLongBits(getSd())
          != java.lang.Double.doubleToLongBits(
              other.getSd())) return false;
      if (!getSdFormula()
          .equals(other.getSdFormula())) return false;
      if (java.lang.Double.doubleToLongBits(getGeomSd())
          != java.lang.Double.doubleToLongBits(
              other.getGeomSd())) return false;
      if (!getGeomSdFormula()
          .equals(other.getGeomSdFormula())) return false;
      if (java.lang.Double.doubleToLongBits(getMode())
          != java.lang.Double.doubleToLongBits(
              other.getMode())) return false;
      if (!getModeFormula()
          .equals(other.getModeFormula())) return false;
      if (java.lang.Double.doubleToLongBits(getMaximum())
          != java.lang.Double.doubleToLongBits(
              other.getMaximum())) return false;
      if (!getMaximumFormula()
          .equals(other.getMaximumFormula())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + DISTRIBUTION_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + distributionType_;
      hash = (37 * hash) + MEAN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMean()));
      hash = (37 * hash) + MEAN_FORMULA_FIELD_NUMBER;
      hash = (53 * hash) + getMeanFormula().hashCode();
      hash = (37 * hash) + GEOM_MEAN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getGeomMean()));
      hash = (37 * hash) + GEOM_MEAN_FORMULA_FIELD_NUMBER;
      hash = (53 * hash) + getGeomMeanFormula().hashCode();
      hash = (37 * hash) + MINIMUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMinimum()));
      hash = (37 * hash) + MINIMUM_FORMULA_FIELD_NUMBER;
      hash = (53 * hash) + getMinimumFormula().hashCode();
      hash = (37 * hash) + SD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSd()));
      hash = (37 * hash) + SD_FORMULA_FIELD_NUMBER;
      hash = (53 * hash) + getSdFormula().hashCode();
      hash = (37 * hash) + GEOM_SD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getGeomSd()));
      hash = (37 * hash) + GEOM_SD_FORMULA_FIELD_NUMBER;
      hash = (53 * hash) + getGeomSdFormula().hashCode();
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMode()));
      hash = (37 * hash) + MODE_FORMULA_FIELD_NUMBER;
      hash = (53 * hash) + getModeFormula().hashCode();
      hash = (37 * hash) + MAXIMUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaximum()));
      hash = (37 * hash) + MAXIMUM_FORMULA_FIELD_NUMBER;
      hash = (53 * hash) + getMaximumFormula().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.Uncertainty parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Uncertainty parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Uncertainty parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Uncertainty parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Uncertainty parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Uncertainty parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Uncertainty parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Uncertainty parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Uncertainty parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Uncertainty parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Uncertainty parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Uncertainty parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.Uncertainty prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Defines the parameter values of an uncertainty distribution. Depending on
     * the uncertainty distribution type different parameters could be used.
     * </pre>
     *
     * Protobuf type {@code protolca.Uncertainty}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.Uncertainty)
        org.openlca.proto.Proto.UncertaintyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_Uncertainty_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_Uncertainty_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.Uncertainty.class, org.openlca.proto.Proto.Uncertainty.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.Uncertainty.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        distributionType_ = 0;

        mean_ = 0D;

        meanFormula_ = "";

        geomMean_ = 0D;

        geomMeanFormula_ = "";

        minimum_ = 0D;

        minimumFormula_ = "";

        sd_ = 0D;

        sdFormula_ = "";

        geomSd_ = 0D;

        geomSdFormula_ = "";

        mode_ = 0D;

        modeFormula_ = "";

        maximum_ = 0D;

        maximumFormula_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_Uncertainty_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Uncertainty getDefaultInstanceForType() {
        return org.openlca.proto.Proto.Uncertainty.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Uncertainty build() {
        org.openlca.proto.Proto.Uncertainty result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Uncertainty buildPartial() {
        org.openlca.proto.Proto.Uncertainty result = new org.openlca.proto.Proto.Uncertainty(this);
        result.type_ = type_;
        result.distributionType_ = distributionType_;
        result.mean_ = mean_;
        result.meanFormula_ = meanFormula_;
        result.geomMean_ = geomMean_;
        result.geomMeanFormula_ = geomMeanFormula_;
        result.minimum_ = minimum_;
        result.minimumFormula_ = minimumFormula_;
        result.sd_ = sd_;
        result.sdFormula_ = sdFormula_;
        result.geomSd_ = geomSd_;
        result.geomSdFormula_ = geomSdFormula_;
        result.mode_ = mode_;
        result.modeFormula_ = modeFormula_;
        result.maximum_ = maximum_;
        result.maximumFormula_ = maximumFormula_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.Uncertainty) {
          return mergeFrom((org.openlca.proto.Proto.Uncertainty)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.Uncertainty other) {
        if (other == org.openlca.proto.Proto.Uncertainty.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.distributionType_ != 0) {
          setDistributionTypeValue(other.getDistributionTypeValue());
        }
        if (other.getMean() != 0D) {
          setMean(other.getMean());
        }
        if (!other.getMeanFormula().isEmpty()) {
          meanFormula_ = other.meanFormula_;
          onChanged();
        }
        if (other.getGeomMean() != 0D) {
          setGeomMean(other.getGeomMean());
        }
        if (!other.getGeomMeanFormula().isEmpty()) {
          geomMeanFormula_ = other.geomMeanFormula_;
          onChanged();
        }
        if (other.getMinimum() != 0D) {
          setMinimum(other.getMinimum());
        }
        if (!other.getMinimumFormula().isEmpty()) {
          minimumFormula_ = other.minimumFormula_;
          onChanged();
        }
        if (other.getSd() != 0D) {
          setSd(other.getSd());
        }
        if (!other.getSdFormula().isEmpty()) {
          sdFormula_ = other.sdFormula_;
          onChanged();
        }
        if (other.getGeomSd() != 0D) {
          setGeomSd(other.getGeomSd());
        }
        if (!other.getGeomSdFormula().isEmpty()) {
          geomSdFormula_ = other.geomSdFormula_;
          onChanged();
        }
        if (other.getMode() != 0D) {
          setMode(other.getMode());
        }
        if (!other.getModeFormula().isEmpty()) {
          modeFormula_ = other.modeFormula_;
          onChanged();
        }
        if (other.getMaximum() != 0D) {
          setMaximum(other.getMaximum());
        }
        if (!other.getMaximumFormula().isEmpty()) {
          maximumFormula_ = other.maximumFormula_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.Uncertainty parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.Uncertainty) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private int distributionType_ = 0;
      /**
       * <pre>
       * The uncertainty distribution type
       * </pre>
       *
       * <code>.protolca.UncertaintyType distribution_type = 2;</code>
       * @return The enum numeric value on the wire for distributionType.
       */
      @java.lang.Override public int getDistributionTypeValue() {
        return distributionType_;
      }
      /**
       * <pre>
       * The uncertainty distribution type
       * </pre>
       *
       * <code>.protolca.UncertaintyType distribution_type = 2;</code>
       * @param value The enum numeric value on the wire for distributionType to set.
       * @return This builder for chaining.
       */
      public Builder setDistributionTypeValue(int value) {
        
        distributionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The uncertainty distribution type
       * </pre>
       *
       * <code>.protolca.UncertaintyType distribution_type = 2;</code>
       * @return The distributionType.
       */
      @java.lang.Override
      public org.openlca.proto.Proto.UncertaintyType getDistributionType() {
        @SuppressWarnings("deprecation")
        org.openlca.proto.Proto.UncertaintyType result = org.openlca.proto.Proto.UncertaintyType.valueOf(distributionType_);
        return result == null ? org.openlca.proto.Proto.UncertaintyType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The uncertainty distribution type
       * </pre>
       *
       * <code>.protolca.UncertaintyType distribution_type = 2;</code>
       * @param value The distributionType to set.
       * @return This builder for chaining.
       */
      public Builder setDistributionType(org.openlca.proto.Proto.UncertaintyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        distributionType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The uncertainty distribution type
       * </pre>
       *
       * <code>.protolca.UncertaintyType distribution_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDistributionType() {
        
        distributionType_ = 0;
        onChanged();
        return this;
      }

      private double mean_ ;
      /**
       * <pre>
       * The arithmetic mean (used for normal distributions).
       * </pre>
       *
       * <code>double mean = 3;</code>
       * @return The mean.
       */
      @java.lang.Override
      public double getMean() {
        return mean_;
      }
      /**
       * <pre>
       * The arithmetic mean (used for normal distributions).
       * </pre>
       *
       * <code>double mean = 3;</code>
       * @param value The mean to set.
       * @return This builder for chaining.
       */
      public Builder setMean(double value) {
        
        mean_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The arithmetic mean (used for normal distributions).
       * </pre>
       *
       * <code>double mean = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMean() {
        
        mean_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object meanFormula_ = "";
      /**
       * <pre>
       * A mathematical formula for the arithmetic mean.
       * </pre>
       *
       * <code>string mean_formula = 4;</code>
       * @return The meanFormula.
       */
      public java.lang.String getMeanFormula() {
        java.lang.Object ref = meanFormula_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          meanFormula_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A mathematical formula for the arithmetic mean.
       * </pre>
       *
       * <code>string mean_formula = 4;</code>
       * @return The bytes for meanFormula.
       */
      public com.google.protobuf.ByteString
          getMeanFormulaBytes() {
        java.lang.Object ref = meanFormula_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meanFormula_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A mathematical formula for the arithmetic mean.
       * </pre>
       *
       * <code>string mean_formula = 4;</code>
       * @param value The meanFormula to set.
       * @return This builder for chaining.
       */
      public Builder setMeanFormula(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        meanFormula_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A mathematical formula for the arithmetic mean.
       * </pre>
       *
       * <code>string mean_formula = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMeanFormula() {
        
        meanFormula_ = getDefaultInstance().getMeanFormula();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A mathematical formula for the arithmetic mean.
       * </pre>
       *
       * <code>string mean_formula = 4;</code>
       * @param value The bytes for meanFormula to set.
       * @return This builder for chaining.
       */
      public Builder setMeanFormulaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        meanFormula_ = value;
        onChanged();
        return this;
      }

      private double geomMean_ ;
      /**
       * <pre>
       * The geometric mean value (used for log-normal distributions).
       * </pre>
       *
       * <code>double geom_mean = 5;</code>
       * @return The geomMean.
       */
      @java.lang.Override
      public double getGeomMean() {
        return geomMean_;
      }
      /**
       * <pre>
       * The geometric mean value (used for log-normal distributions).
       * </pre>
       *
       * <code>double geom_mean = 5;</code>
       * @param value The geomMean to set.
       * @return This builder for chaining.
       */
      public Builder setGeomMean(double value) {
        
        geomMean_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The geometric mean value (used for log-normal distributions).
       * </pre>
       *
       * <code>double geom_mean = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearGeomMean() {
        
        geomMean_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object geomMeanFormula_ = "";
      /**
       * <pre>
       * A mathematical formula for the geometric mean.
       * </pre>
       *
       * <code>string geom_mean_formula = 6;</code>
       * @return The geomMeanFormula.
       */
      public java.lang.String getGeomMeanFormula() {
        java.lang.Object ref = geomMeanFormula_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          geomMeanFormula_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A mathematical formula for the geometric mean.
       * </pre>
       *
       * <code>string geom_mean_formula = 6;</code>
       * @return The bytes for geomMeanFormula.
       */
      public com.google.protobuf.ByteString
          getGeomMeanFormulaBytes() {
        java.lang.Object ref = geomMeanFormula_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          geomMeanFormula_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A mathematical formula for the geometric mean.
       * </pre>
       *
       * <code>string geom_mean_formula = 6;</code>
       * @param value The geomMeanFormula to set.
       * @return This builder for chaining.
       */
      public Builder setGeomMeanFormula(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        geomMeanFormula_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A mathematical formula for the geometric mean.
       * </pre>
       *
       * <code>string geom_mean_formula = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearGeomMeanFormula() {
        
        geomMeanFormula_ = getDefaultInstance().getGeomMeanFormula();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A mathematical formula for the geometric mean.
       * </pre>
       *
       * <code>string geom_mean_formula = 6;</code>
       * @param value The bytes for geomMeanFormula to set.
       * @return This builder for chaining.
       */
      public Builder setGeomMeanFormulaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        geomMeanFormula_ = value;
        onChanged();
        return this;
      }

      private double minimum_ ;
      /**
       * <pre>
       * The minimum value (used for uniform and triangle distributions).
       * </pre>
       *
       * <code>double minimum = 7;</code>
       * @return The minimum.
       */
      @java.lang.Override
      public double getMinimum() {
        return minimum_;
      }
      /**
       * <pre>
       * The minimum value (used for uniform and triangle distributions).
       * </pre>
       *
       * <code>double minimum = 7;</code>
       * @param value The minimum to set.
       * @return This builder for chaining.
       */
      public Builder setMinimum(double value) {
        
        minimum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The minimum value (used for uniform and triangle distributions).
       * </pre>
       *
       * <code>double minimum = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinimum() {
        
        minimum_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object minimumFormula_ = "";
      /**
       * <pre>
       * A mathematical formula for the minimum value.
       * </pre>
       *
       * <code>string minimum_formula = 8;</code>
       * @return The minimumFormula.
       */
      public java.lang.String getMinimumFormula() {
        java.lang.Object ref = minimumFormula_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          minimumFormula_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A mathematical formula for the minimum value.
       * </pre>
       *
       * <code>string minimum_formula = 8;</code>
       * @return The bytes for minimumFormula.
       */
      public com.google.protobuf.ByteString
          getMinimumFormulaBytes() {
        java.lang.Object ref = minimumFormula_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          minimumFormula_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A mathematical formula for the minimum value.
       * </pre>
       *
       * <code>string minimum_formula = 8;</code>
       * @param value The minimumFormula to set.
       * @return This builder for chaining.
       */
      public Builder setMinimumFormula(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        minimumFormula_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A mathematical formula for the minimum value.
       * </pre>
       *
       * <code>string minimum_formula = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinimumFormula() {
        
        minimumFormula_ = getDefaultInstance().getMinimumFormula();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A mathematical formula for the minimum value.
       * </pre>
       *
       * <code>string minimum_formula = 8;</code>
       * @param value The bytes for minimumFormula to set.
       * @return This builder for chaining.
       */
      public Builder setMinimumFormulaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        minimumFormula_ = value;
        onChanged();
        return this;
      }

      private double sd_ ;
      /**
       * <pre>
       * The arithmetic standard deviation (used for normal distributions).
       * </pre>
       *
       * <code>double sd = 9;</code>
       * @return The sd.
       */
      @java.lang.Override
      public double getSd() {
        return sd_;
      }
      /**
       * <pre>
       * The arithmetic standard deviation (used for normal distributions).
       * </pre>
       *
       * <code>double sd = 9;</code>
       * @param value The sd to set.
       * @return This builder for chaining.
       */
      public Builder setSd(double value) {
        
        sd_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The arithmetic standard deviation (used for normal distributions).
       * </pre>
       *
       * <code>double sd = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearSd() {
        
        sd_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object sdFormula_ = "";
      /**
       * <pre>
       * A mathematical formula for the arithmetic standard deviation.
       * </pre>
       *
       * <code>string sd_formula = 10;</code>
       * @return The sdFormula.
       */
      public java.lang.String getSdFormula() {
        java.lang.Object ref = sdFormula_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sdFormula_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A mathematical formula for the arithmetic standard deviation.
       * </pre>
       *
       * <code>string sd_formula = 10;</code>
       * @return The bytes for sdFormula.
       */
      public com.google.protobuf.ByteString
          getSdFormulaBytes() {
        java.lang.Object ref = sdFormula_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sdFormula_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A mathematical formula for the arithmetic standard deviation.
       * </pre>
       *
       * <code>string sd_formula = 10;</code>
       * @param value The sdFormula to set.
       * @return This builder for chaining.
       */
      public Builder setSdFormula(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sdFormula_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A mathematical formula for the arithmetic standard deviation.
       * </pre>
       *
       * <code>string sd_formula = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearSdFormula() {
        
        sdFormula_ = getDefaultInstance().getSdFormula();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A mathematical formula for the arithmetic standard deviation.
       * </pre>
       *
       * <code>string sd_formula = 10;</code>
       * @param value The bytes for sdFormula to set.
       * @return This builder for chaining.
       */
      public Builder setSdFormulaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sdFormula_ = value;
        onChanged();
        return this;
      }

      private double geomSd_ ;
      /**
       * <pre>
       * The geometric standard deviation (used for log-normal distributions).
       * </pre>
       *
       * <code>double geom_sd = 11;</code>
       * @return The geomSd.
       */
      @java.lang.Override
      public double getGeomSd() {
        return geomSd_;
      }
      /**
       * <pre>
       * The geometric standard deviation (used for log-normal distributions).
       * </pre>
       *
       * <code>double geom_sd = 11;</code>
       * @param value The geomSd to set.
       * @return This builder for chaining.
       */
      public Builder setGeomSd(double value) {
        
        geomSd_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The geometric standard deviation (used for log-normal distributions).
       * </pre>
       *
       * <code>double geom_sd = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearGeomSd() {
        
        geomSd_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object geomSdFormula_ = "";
      /**
       * <pre>
       * A mathematical formula for the geometric standard deviation.
       * </pre>
       *
       * <code>string geom_sd_formula = 12;</code>
       * @return The geomSdFormula.
       */
      public java.lang.String getGeomSdFormula() {
        java.lang.Object ref = geomSdFormula_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          geomSdFormula_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A mathematical formula for the geometric standard deviation.
       * </pre>
       *
       * <code>string geom_sd_formula = 12;</code>
       * @return The bytes for geomSdFormula.
       */
      public com.google.protobuf.ByteString
          getGeomSdFormulaBytes() {
        java.lang.Object ref = geomSdFormula_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          geomSdFormula_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A mathematical formula for the geometric standard deviation.
       * </pre>
       *
       * <code>string geom_sd_formula = 12;</code>
       * @param value The geomSdFormula to set.
       * @return This builder for chaining.
       */
      public Builder setGeomSdFormula(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        geomSdFormula_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A mathematical formula for the geometric standard deviation.
       * </pre>
       *
       * <code>string geom_sd_formula = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearGeomSdFormula() {
        
        geomSdFormula_ = getDefaultInstance().getGeomSdFormula();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A mathematical formula for the geometric standard deviation.
       * </pre>
       *
       * <code>string geom_sd_formula = 12;</code>
       * @param value The bytes for geomSdFormula to set.
       * @return This builder for chaining.
       */
      public Builder setGeomSdFormulaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        geomSdFormula_ = value;
        onChanged();
        return this;
      }

      private double mode_ ;
      /**
       * <pre>
       * The most likely value (used for triangle distributions).
       * </pre>
       *
       * <code>double mode = 13;</code>
       * @return The mode.
       */
      @java.lang.Override
      public double getMode() {
        return mode_;
      }
      /**
       * <pre>
       * The most likely value (used for triangle distributions).
       * </pre>
       *
       * <code>double mode = 13;</code>
       * @param value The mode to set.
       * @return This builder for chaining.
       */
      public Builder setMode(double value) {
        
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The most likely value (used for triangle distributions).
       * </pre>
       *
       * <code>double mode = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearMode() {
        
        mode_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object modeFormula_ = "";
      /**
       * <pre>
       * A mathematical formula for the most likely value.
       * </pre>
       *
       * <code>string mode_formula = 14;</code>
       * @return The modeFormula.
       */
      public java.lang.String getModeFormula() {
        java.lang.Object ref = modeFormula_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          modeFormula_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A mathematical formula for the most likely value.
       * </pre>
       *
       * <code>string mode_formula = 14;</code>
       * @return The bytes for modeFormula.
       */
      public com.google.protobuf.ByteString
          getModeFormulaBytes() {
        java.lang.Object ref = modeFormula_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modeFormula_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A mathematical formula for the most likely value.
       * </pre>
       *
       * <code>string mode_formula = 14;</code>
       * @param value The modeFormula to set.
       * @return This builder for chaining.
       */
      public Builder setModeFormula(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        modeFormula_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A mathematical formula for the most likely value.
       * </pre>
       *
       * <code>string mode_formula = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearModeFormula() {
        
        modeFormula_ = getDefaultInstance().getModeFormula();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A mathematical formula for the most likely value.
       * </pre>
       *
       * <code>string mode_formula = 14;</code>
       * @param value The bytes for modeFormula to set.
       * @return This builder for chaining.
       */
      public Builder setModeFormulaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        modeFormula_ = value;
        onChanged();
        return this;
      }

      private double maximum_ ;
      /**
       * <pre>
       * The maximum value (used for uniform and triangle distributions).
       * </pre>
       *
       * <code>double maximum = 15;</code>
       * @return The maximum.
       */
      @java.lang.Override
      public double getMaximum() {
        return maximum_;
      }
      /**
       * <pre>
       * The maximum value (used for uniform and triangle distributions).
       * </pre>
       *
       * <code>double maximum = 15;</code>
       * @param value The maximum to set.
       * @return This builder for chaining.
       */
      public Builder setMaximum(double value) {
        
        maximum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The maximum value (used for uniform and triangle distributions).
       * </pre>
       *
       * <code>double maximum = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaximum() {
        
        maximum_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object maximumFormula_ = "";
      /**
       * <pre>
       * A mathematical formula for the maximum value.
       * </pre>
       *
       * <code>string maximum_formula = 16;</code>
       * @return The maximumFormula.
       */
      public java.lang.String getMaximumFormula() {
        java.lang.Object ref = maximumFormula_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          maximumFormula_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A mathematical formula for the maximum value.
       * </pre>
       *
       * <code>string maximum_formula = 16;</code>
       * @return The bytes for maximumFormula.
       */
      public com.google.protobuf.ByteString
          getMaximumFormulaBytes() {
        java.lang.Object ref = maximumFormula_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          maximumFormula_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A mathematical formula for the maximum value.
       * </pre>
       *
       * <code>string maximum_formula = 16;</code>
       * @param value The maximumFormula to set.
       * @return This builder for chaining.
       */
      public Builder setMaximumFormula(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        maximumFormula_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A mathematical formula for the maximum value.
       * </pre>
       *
       * <code>string maximum_formula = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaximumFormula() {
        
        maximumFormula_ = getDefaultInstance().getMaximumFormula();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A mathematical formula for the maximum value.
       * </pre>
       *
       * <code>string maximum_formula = 16;</code>
       * @param value The bytes for maximumFormula to set.
       * @return This builder for chaining.
       */
      public Builder setMaximumFormulaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        maximumFormula_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.Uncertainty)
    }

    // @@protoc_insertion_point(class_scope:protolca.Uncertainty)
    private static final org.openlca.proto.Proto.Uncertainty DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.Uncertainty();
    }

    public static org.openlca.proto.Proto.Uncertainty getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Uncertainty>
        PARSER = new com.google.protobuf.AbstractParser<Uncertainty>() {
      @java.lang.Override
      public Uncertainty parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Uncertainty(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Uncertainty> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Uncertainty> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.Uncertainty getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UnitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.Unit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The conversion factor to the reference unit of the unit group to which
     * this unit belongs.
     * </pre>
     *
     * <code>double conversion_factor = 7;</code>
     * @return The conversionFactor.
     */
    double getConversionFactor();

    /**
     * <pre>
     * Indicates whether the unit is the reference unit of the unit group to
     * which this unit belongs. If it is the reference unit the conversion factor
     * must be 1.0. There should be always only one reference unit in a unit
     * group. The reference unit is used to convert amounts given in one unit to
     * amounts given in another unit of the respective unit group.
     * </pre>
     *
     * <code>bool reference_unit = 8;</code>
     * @return The referenceUnit.
     */
    boolean getReferenceUnit();

    /**
     * <pre>
     * A list of synonyms for the unit.
     * </pre>
     *
     * <code>repeated string synonyms = 9;</code>
     * @return A list containing the synonyms.
     */
    java.util.List<java.lang.String>
        getSynonymsList();
    /**
     * <pre>
     * A list of synonyms for the unit.
     * </pre>
     *
     * <code>repeated string synonyms = 9;</code>
     * @return The count of synonyms.
     */
    int getSynonymsCount();
    /**
     * <pre>
     * A list of synonyms for the unit.
     * </pre>
     *
     * <code>repeated string synonyms = 9;</code>
     * @param index The index of the element to return.
     * @return The synonyms at the given index.
     */
    java.lang.String getSynonyms(int index);
    /**
     * <pre>
     * A list of synonyms for the unit.
     * </pre>
     *
     * <code>repeated string synonyms = 9;</code>
     * @param index The index of the value to return.
     * @return The bytes of the synonyms at the given index.
     */
    com.google.protobuf.ByteString
        getSynonymsBytes(int index);
  }
  /**
   * <pre>
   * An unit of measure
   * </pre>
   *
   * Protobuf type {@code protolca.Unit}
   */
  public static final class Unit extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.Unit)
      UnitOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Unit.newBuilder() to construct.
    private Unit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Unit() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      synonyms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Unit();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Unit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 57: {

              conversionFactor_ = input.readDouble();
              break;
            }
            case 64: {

              referenceUnit_ = input.readBool();
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                synonyms_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              synonyms_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          synonyms_ = synonyms_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_Unit_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_Unit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.Unit.class, org.openlca.proto.Proto.Unit.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONVERSION_FACTOR_FIELD_NUMBER = 7;
    private double conversionFactor_;
    /**
     * <pre>
     * The conversion factor to the reference unit of the unit group to which
     * this unit belongs.
     * </pre>
     *
     * <code>double conversion_factor = 7;</code>
     * @return The conversionFactor.
     */
    @java.lang.Override
    public double getConversionFactor() {
      return conversionFactor_;
    }

    public static final int REFERENCE_UNIT_FIELD_NUMBER = 8;
    private boolean referenceUnit_;
    /**
     * <pre>
     * Indicates whether the unit is the reference unit of the unit group to
     * which this unit belongs. If it is the reference unit the conversion factor
     * must be 1.0. There should be always only one reference unit in a unit
     * group. The reference unit is used to convert amounts given in one unit to
     * amounts given in another unit of the respective unit group.
     * </pre>
     *
     * <code>bool reference_unit = 8;</code>
     * @return The referenceUnit.
     */
    @java.lang.Override
    public boolean getReferenceUnit() {
      return referenceUnit_;
    }

    public static final int SYNONYMS_FIELD_NUMBER = 9;
    private com.google.protobuf.LazyStringList synonyms_;
    /**
     * <pre>
     * A list of synonyms for the unit.
     * </pre>
     *
     * <code>repeated string synonyms = 9;</code>
     * @return A list containing the synonyms.
     */
    public com.google.protobuf.ProtocolStringList
        getSynonymsList() {
      return synonyms_;
    }
    /**
     * <pre>
     * A list of synonyms for the unit.
     * </pre>
     *
     * <code>repeated string synonyms = 9;</code>
     * @return The count of synonyms.
     */
    public int getSynonymsCount() {
      return synonyms_.size();
    }
    /**
     * <pre>
     * A list of synonyms for the unit.
     * </pre>
     *
     * <code>repeated string synonyms = 9;</code>
     * @param index The index of the element to return.
     * @return The synonyms at the given index.
     */
    public java.lang.String getSynonyms(int index) {
      return synonyms_.get(index);
    }
    /**
     * <pre>
     * A list of synonyms for the unit.
     * </pre>
     *
     * <code>repeated string synonyms = 9;</code>
     * @param index The index of the value to return.
     * @return The bytes of the synonyms at the given index.
     */
    public com.google.protobuf.ByteString
        getSynonymsBytes(int index) {
      return synonyms_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (conversionFactor_ != 0D) {
        output.writeDouble(7, conversionFactor_);
      }
      if (referenceUnit_ != false) {
        output.writeBool(8, referenceUnit_);
      }
      for (int i = 0; i < synonyms_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, synonyms_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (conversionFactor_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, conversionFactor_);
      }
      if (referenceUnit_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, referenceUnit_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < synonyms_.size(); i++) {
          dataSize += computeStringSizeNoTag(synonyms_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSynonymsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.Unit)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.Unit other = (org.openlca.proto.Proto.Unit) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (java.lang.Double.doubleToLongBits(getConversionFactor())
          != java.lang.Double.doubleToLongBits(
              other.getConversionFactor())) return false;
      if (getReferenceUnit()
          != other.getReferenceUnit()) return false;
      if (!getSynonymsList()
          .equals(other.getSynonymsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      hash = (37 * hash) + CONVERSION_FACTOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getConversionFactor()));
      hash = (37 * hash) + REFERENCE_UNIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getReferenceUnit());
      if (getSynonymsCount() > 0) {
        hash = (37 * hash) + SYNONYMS_FIELD_NUMBER;
        hash = (53 * hash) + getSynonymsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.Unit parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Unit parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Unit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Unit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Unit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.Unit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Unit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Unit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Unit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Unit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.Unit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.Unit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.Unit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * An unit of measure
     * </pre>
     *
     * Protobuf type {@code protolca.Unit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.Unit)
        org.openlca.proto.Proto.UnitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_Unit_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_Unit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.Unit.class, org.openlca.proto.Proto.Unit.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.Unit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        conversionFactor_ = 0D;

        referenceUnit_ = false;

        synonyms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_Unit_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Unit getDefaultInstanceForType() {
        return org.openlca.proto.Proto.Unit.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Unit build() {
        org.openlca.proto.Proto.Unit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.Unit buildPartial() {
        org.openlca.proto.Proto.Unit result = new org.openlca.proto.Proto.Unit(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        result.conversionFactor_ = conversionFactor_;
        result.referenceUnit_ = referenceUnit_;
        if (((bitField0_ & 0x00000001) != 0)) {
          synonyms_ = synonyms_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.synonyms_ = synonyms_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.Unit) {
          return mergeFrom((org.openlca.proto.Proto.Unit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.Unit other) {
        if (other == org.openlca.proto.Proto.Unit.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.getConversionFactor() != 0D) {
          setConversionFactor(other.getConversionFactor());
        }
        if (other.getReferenceUnit() != false) {
          setReferenceUnit(other.getReferenceUnit());
        }
        if (!other.synonyms_.isEmpty()) {
          if (synonyms_.isEmpty()) {
            synonyms_ = other.synonyms_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSynonymsIsMutable();
            synonyms_.addAll(other.synonyms_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.Unit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.Unit) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private double conversionFactor_ ;
      /**
       * <pre>
       * The conversion factor to the reference unit of the unit group to which
       * this unit belongs.
       * </pre>
       *
       * <code>double conversion_factor = 7;</code>
       * @return The conversionFactor.
       */
      @java.lang.Override
      public double getConversionFactor() {
        return conversionFactor_;
      }
      /**
       * <pre>
       * The conversion factor to the reference unit of the unit group to which
       * this unit belongs.
       * </pre>
       *
       * <code>double conversion_factor = 7;</code>
       * @param value The conversionFactor to set.
       * @return This builder for chaining.
       */
      public Builder setConversionFactor(double value) {
        
        conversionFactor_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The conversion factor to the reference unit of the unit group to which
       * this unit belongs.
       * </pre>
       *
       * <code>double conversion_factor = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearConversionFactor() {
        
        conversionFactor_ = 0D;
        onChanged();
        return this;
      }

      private boolean referenceUnit_ ;
      /**
       * <pre>
       * Indicates whether the unit is the reference unit of the unit group to
       * which this unit belongs. If it is the reference unit the conversion factor
       * must be 1.0. There should be always only one reference unit in a unit
       * group. The reference unit is used to convert amounts given in one unit to
       * amounts given in another unit of the respective unit group.
       * </pre>
       *
       * <code>bool reference_unit = 8;</code>
       * @return The referenceUnit.
       */
      @java.lang.Override
      public boolean getReferenceUnit() {
        return referenceUnit_;
      }
      /**
       * <pre>
       * Indicates whether the unit is the reference unit of the unit group to
       * which this unit belongs. If it is the reference unit the conversion factor
       * must be 1.0. There should be always only one reference unit in a unit
       * group. The reference unit is used to convert amounts given in one unit to
       * amounts given in another unit of the respective unit group.
       * </pre>
       *
       * <code>bool reference_unit = 8;</code>
       * @param value The referenceUnit to set.
       * @return This builder for chaining.
       */
      public Builder setReferenceUnit(boolean value) {
        
        referenceUnit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates whether the unit is the reference unit of the unit group to
       * which this unit belongs. If it is the reference unit the conversion factor
       * must be 1.0. There should be always only one reference unit in a unit
       * group. The reference unit is used to convert amounts given in one unit to
       * amounts given in another unit of the respective unit group.
       * </pre>
       *
       * <code>bool reference_unit = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearReferenceUnit() {
        
        referenceUnit_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList synonyms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSynonymsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          synonyms_ = new com.google.protobuf.LazyStringArrayList(synonyms_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of synonyms for the unit.
       * </pre>
       *
       * <code>repeated string synonyms = 9;</code>
       * @return A list containing the synonyms.
       */
      public com.google.protobuf.ProtocolStringList
          getSynonymsList() {
        return synonyms_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of synonyms for the unit.
       * </pre>
       *
       * <code>repeated string synonyms = 9;</code>
       * @return The count of synonyms.
       */
      public int getSynonymsCount() {
        return synonyms_.size();
      }
      /**
       * <pre>
       * A list of synonyms for the unit.
       * </pre>
       *
       * <code>repeated string synonyms = 9;</code>
       * @param index The index of the element to return.
       * @return The synonyms at the given index.
       */
      public java.lang.String getSynonyms(int index) {
        return synonyms_.get(index);
      }
      /**
       * <pre>
       * A list of synonyms for the unit.
       * </pre>
       *
       * <code>repeated string synonyms = 9;</code>
       * @param index The index of the value to return.
       * @return The bytes of the synonyms at the given index.
       */
      public com.google.protobuf.ByteString
          getSynonymsBytes(int index) {
        return synonyms_.getByteString(index);
      }
      /**
       * <pre>
       * A list of synonyms for the unit.
       * </pre>
       *
       * <code>repeated string synonyms = 9;</code>
       * @param index The index to set the value at.
       * @param value The synonyms to set.
       * @return This builder for chaining.
       */
      public Builder setSynonyms(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSynonymsIsMutable();
        synonyms_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of synonyms for the unit.
       * </pre>
       *
       * <code>repeated string synonyms = 9;</code>
       * @param value The synonyms to add.
       * @return This builder for chaining.
       */
      public Builder addSynonyms(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSynonymsIsMutable();
        synonyms_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of synonyms for the unit.
       * </pre>
       *
       * <code>repeated string synonyms = 9;</code>
       * @param values The synonyms to add.
       * @return This builder for chaining.
       */
      public Builder addAllSynonyms(
          java.lang.Iterable<java.lang.String> values) {
        ensureSynonymsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, synonyms_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of synonyms for the unit.
       * </pre>
       *
       * <code>repeated string synonyms = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearSynonyms() {
        synonyms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of synonyms for the unit.
       * </pre>
       *
       * <code>repeated string synonyms = 9;</code>
       * @param value The bytes of the synonyms to add.
       * @return This builder for chaining.
       */
      public Builder addSynonymsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureSynonymsIsMutable();
        synonyms_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.Unit)
    }

    // @@protoc_insertion_point(class_scope:protolca.Unit)
    private static final org.openlca.proto.Proto.Unit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.Unit();
    }

    public static org.openlca.proto.Proto.Unit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Unit>
        PARSER = new com.google.protobuf.AbstractParser<Unit>() {
      @java.lang.Override
      public Unit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Unit(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Unit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Unit> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.Unit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UnitGroupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protolca.UnitGroup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    java.lang.String getLastChange();
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    com.google.protobuf.ByteString
        getLastChangeBytes();

    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    boolean hasCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    org.openlca.proto.Proto.Ref getCategory();
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder();

    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    java.util.List<java.lang.String>
        getTagsList();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    int getTagsCount();
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    java.lang.String getTags(int index);
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);

    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    java.lang.String getLibrary();
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    com.google.protobuf.ByteString
        getLibraryBytes();

    /**
     * <pre>
     * Some LCA data formats do not have the concept of flow properties or
     * quantities. This field provides a default link to a flow property for
     * units that are contained in this group.
     * </pre>
     *
     * <code>.protolca.Ref default_flow_property = 10;</code>
     * @return Whether the defaultFlowProperty field is set.
     */
    boolean hasDefaultFlowProperty();
    /**
     * <pre>
     * Some LCA data formats do not have the concept of flow properties or
     * quantities. This field provides a default link to a flow property for
     * units that are contained in this group.
     * </pre>
     *
     * <code>.protolca.Ref default_flow_property = 10;</code>
     * @return The defaultFlowProperty.
     */
    org.openlca.proto.Proto.Ref getDefaultFlowProperty();
    /**
     * <pre>
     * Some LCA data formats do not have the concept of flow properties or
     * quantities. This field provides a default link to a flow property for
     * units that are contained in this group.
     * </pre>
     *
     * <code>.protolca.Ref default_flow_property = 10;</code>
     */
    org.openlca.proto.Proto.RefOrBuilder getDefaultFlowPropertyOrBuilder();

    /**
     * <pre>
     * The units of the unit group.
     * </pre>
     *
     * <code>repeated .protolca.Unit units = 11;</code>
     */
    java.util.List<org.openlca.proto.Proto.Unit> 
        getUnitsList();
    /**
     * <pre>
     * The units of the unit group.
     * </pre>
     *
     * <code>repeated .protolca.Unit units = 11;</code>
     */
    org.openlca.proto.Proto.Unit getUnits(int index);
    /**
     * <pre>
     * The units of the unit group.
     * </pre>
     *
     * <code>repeated .protolca.Unit units = 11;</code>
     */
    int getUnitsCount();
    /**
     * <pre>
     * The units of the unit group.
     * </pre>
     *
     * <code>repeated .protolca.Unit units = 11;</code>
     */
    java.util.List<? extends org.openlca.proto.Proto.UnitOrBuilder> 
        getUnitsOrBuilderList();
    /**
     * <pre>
     * The units of the unit group.
     * </pre>
     *
     * <code>repeated .protolca.Unit units = 11;</code>
     */
    org.openlca.proto.Proto.UnitOrBuilder getUnitsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A group of units that can be converted into each other.
   * </pre>
   *
   * Protobuf type {@code protolca.UnitGroup}
   */
  public static final class UnitGroup extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protolca.UnitGroup)
      UnitGroupOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UnitGroup.newBuilder() to construct.
    private UnitGroup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UnitGroup() {
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      version_ = "";
      lastChange_ = "";
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      library_ = "";
      units_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UnitGroup();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UnitGroup(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              lastChange_ = s;
              break;
            }
            case 58: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (category_ != null) {
                subBuilder = category_.toBuilder();
              }
              category_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(category_);
                category_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tags_.add(s);
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              library_ = s;
              break;
            }
            case 82: {
              org.openlca.proto.Proto.Ref.Builder subBuilder = null;
              if (defaultFlowProperty_ != null) {
                subBuilder = defaultFlowProperty_.toBuilder();
              }
              defaultFlowProperty_ = input.readMessage(org.openlca.proto.Proto.Ref.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(defaultFlowProperty_);
                defaultFlowProperty_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                units_ = new java.util.ArrayList<org.openlca.proto.Proto.Unit>();
                mutable_bitField0_ |= 0x00000002;
              }
              units_.add(
                  input.readMessage(org.openlca.proto.Proto.Unit.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          units_ = java.util.Collections.unmodifiableList(units_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.proto.Proto.internal_static_protolca_UnitGroup_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.proto.Proto.internal_static_protolca_UnitGroup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.proto.Proto.UnitGroup.class, org.openlca.proto.Proto.UnitGroup.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type name of the respectiven entity.
     * This field is used for JSON-LD compatibility.
     * </pre>
     *
     * <code>string type = 1[json_name = "&#64;type"];</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The reference ID (typically an UUID) of the entity.
     * </pre>
     *
     * <code>string id = 2[json_name = "&#64;id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the entity.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the entity.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
     * fields are optional and the fields may have leading zeros (so 01.00.00 is
     * the same as 1.0.0 or 1).
     * </pre>
     *
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_CHANGE_FIELD_NUMBER = 6;
    private volatile java.lang.Object lastChange_;
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The lastChange.
     */
    @java.lang.Override
    public java.lang.String getLastChange() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastChange_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The timestamp when the entity was changed the last time.
     * </pre>
     *
     * <code>string last_change = 6;</code>
     * @return The bytes for lastChange.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastChangeBytes() {
      java.lang.Object ref = lastChange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastChange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 7;
    private org.openlca.proto.Proto.Ref category_;
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return Whether the category field is set.
     */
    @java.lang.Override
    public boolean hasCategory() {
      return category_ != null;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     * @return The category.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getCategory() {
      return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
    }
    /**
     * <pre>
     * The category of the entity.
     * </pre>
     *
     * <code>.protolca.Ref category = 7;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
      return getCategory();
    }

    public static final int TAGS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList
        getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * A list of optional tags. A tag is just a string which should not contain
     * commas (and other special characters).
     * </pre>
     *
     * <code>repeated string tags = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    public static final int LIBRARY_FIELD_NUMBER = 9;
    private volatile java.lang.Object library_;
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The library.
     */
    @java.lang.Override
    public java.lang.String getLibrary() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        library_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If this entity is part of a library, this field contains the identifier of
     * that library. The identifier is typically just the comination of the
     * library name and version.
     * </pre>
     *
     * <code>string library = 9;</code>
     * @return The bytes for library.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLibraryBytes() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        library_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEFAULT_FLOW_PROPERTY_FIELD_NUMBER = 10;
    private org.openlca.proto.Proto.Ref defaultFlowProperty_;
    /**
     * <pre>
     * Some LCA data formats do not have the concept of flow properties or
     * quantities. This field provides a default link to a flow property for
     * units that are contained in this group.
     * </pre>
     *
     * <code>.protolca.Ref default_flow_property = 10;</code>
     * @return Whether the defaultFlowProperty field is set.
     */
    @java.lang.Override
    public boolean hasDefaultFlowProperty() {
      return defaultFlowProperty_ != null;
    }
    /**
     * <pre>
     * Some LCA data formats do not have the concept of flow properties or
     * quantities. This field provides a default link to a flow property for
     * units that are contained in this group.
     * </pre>
     *
     * <code>.protolca.Ref default_flow_property = 10;</code>
     * @return The defaultFlowProperty.
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Ref getDefaultFlowProperty() {
      return defaultFlowProperty_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : defaultFlowProperty_;
    }
    /**
     * <pre>
     * Some LCA data formats do not have the concept of flow properties or
     * quantities. This field provides a default link to a flow property for
     * units that are contained in this group.
     * </pre>
     *
     * <code>.protolca.Ref default_flow_property = 10;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.RefOrBuilder getDefaultFlowPropertyOrBuilder() {
      return getDefaultFlowProperty();
    }

    public static final int UNITS_FIELD_NUMBER = 11;
    private java.util.List<org.openlca.proto.Proto.Unit> units_;
    /**
     * <pre>
     * The units of the unit group.
     * </pre>
     *
     * <code>repeated .protolca.Unit units = 11;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.proto.Proto.Unit> getUnitsList() {
      return units_;
    }
    /**
     * <pre>
     * The units of the unit group.
     * </pre>
     *
     * <code>repeated .protolca.Unit units = 11;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.proto.Proto.UnitOrBuilder> 
        getUnitsOrBuilderList() {
      return units_;
    }
    /**
     * <pre>
     * The units of the unit group.
     * </pre>
     *
     * <code>repeated .protolca.Unit units = 11;</code>
     */
    @java.lang.Override
    public int getUnitsCount() {
      return units_.size();
    }
    /**
     * <pre>
     * The units of the unit group.
     * </pre>
     *
     * <code>repeated .protolca.Unit units = 11;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.Unit getUnits(int index) {
      return units_.get(index);
    }
    /**
     * <pre>
     * The units of the unit group.
     * </pre>
     *
     * <code>repeated .protolca.Unit units = 11;</code>
     */
    @java.lang.Override
    public org.openlca.proto.Proto.UnitOrBuilder getUnitsOrBuilder(
        int index) {
      return units_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lastChange_);
      }
      if (category_ != null) {
        output.writeMessage(7, getCategory());
      }
      for (int i = 0; i < tags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, tags_.getRaw(i));
      }
      if (!getLibraryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, library_);
      }
      if (defaultFlowProperty_ != null) {
        output.writeMessage(10, getDefaultFlowProperty());
      }
      for (int i = 0; i < units_.size(); i++) {
        output.writeMessage(11, units_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getLastChangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, lastChange_);
      }
      if (category_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCategory());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += computeStringSizeNoTag(tags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      if (!getLibraryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, library_);
      }
      if (defaultFlowProperty_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getDefaultFlowProperty());
      }
      for (int i = 0; i < units_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, units_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.proto.Proto.UnitGroup)) {
        return super.equals(obj);
      }
      org.openlca.proto.Proto.UnitGroup other = (org.openlca.proto.Proto.UnitGroup) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getLastChange()
          .equals(other.getLastChange())) return false;
      if (hasCategory() != other.hasCategory()) return false;
      if (hasCategory()) {
        if (!getCategory()
            .equals(other.getCategory())) return false;
      }
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (!getLibrary()
          .equals(other.getLibrary())) return false;
      if (hasDefaultFlowProperty() != other.hasDefaultFlowProperty()) return false;
      if (hasDefaultFlowProperty()) {
        if (!getDefaultFlowProperty()
            .equals(other.getDefaultFlowProperty())) return false;
      }
      if (!getUnitsList()
          .equals(other.getUnitsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + LAST_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getLastChange().hashCode();
      if (hasCategory()) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategory().hashCode();
      }
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibrary().hashCode();
      if (hasDefaultFlowProperty()) {
        hash = (37 * hash) + DEFAULT_FLOW_PROPERTY_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultFlowProperty().hashCode();
      }
      if (getUnitsCount() > 0) {
        hash = (37 * hash) + UNITS_FIELD_NUMBER;
        hash = (53 * hash) + getUnitsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.proto.Proto.UnitGroup parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.UnitGroup parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.UnitGroup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.UnitGroup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.UnitGroup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.proto.Proto.UnitGroup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.proto.Proto.UnitGroup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.UnitGroup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.UnitGroup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.UnitGroup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.proto.Proto.UnitGroup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.proto.Proto.UnitGroup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.proto.Proto.UnitGroup prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A group of units that can be converted into each other.
     * </pre>
     *
     * Protobuf type {@code protolca.UnitGroup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protolca.UnitGroup)
        org.openlca.proto.Proto.UnitGroupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.proto.Proto.internal_static_protolca_UnitGroup_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.proto.Proto.internal_static_protolca_UnitGroup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.proto.Proto.UnitGroup.class, org.openlca.proto.Proto.UnitGroup.Builder.class);
      }

      // Construct using org.openlca.proto.Proto.UnitGroup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getUnitsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        id_ = "";

        name_ = "";

        description_ = "";

        version_ = "";

        lastChange_ = "";

        if (categoryBuilder_ == null) {
          category_ = null;
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        library_ = "";

        if (defaultFlowPropertyBuilder_ == null) {
          defaultFlowProperty_ = null;
        } else {
          defaultFlowProperty_ = null;
          defaultFlowPropertyBuilder_ = null;
        }
        if (unitsBuilder_ == null) {
          units_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          unitsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.proto.Proto.internal_static_protolca_UnitGroup_descriptor;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.UnitGroup getDefaultInstanceForType() {
        return org.openlca.proto.Proto.UnitGroup.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.proto.Proto.UnitGroup build() {
        org.openlca.proto.Proto.UnitGroup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.proto.Proto.UnitGroup buildPartial() {
        org.openlca.proto.Proto.UnitGroup result = new org.openlca.proto.Proto.UnitGroup(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.id_ = id_;
        result.name_ = name_;
        result.description_ = description_;
        result.version_ = version_;
        result.lastChange_ = lastChange_;
        if (categoryBuilder_ == null) {
          result.category_ = category_;
        } else {
          result.category_ = categoryBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          tags_ = tags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tags_ = tags_;
        result.library_ = library_;
        if (defaultFlowPropertyBuilder_ == null) {
          result.defaultFlowProperty_ = defaultFlowProperty_;
        } else {
          result.defaultFlowProperty_ = defaultFlowPropertyBuilder_.build();
        }
        if (unitsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            units_ = java.util.Collections.unmodifiableList(units_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.units_ = units_;
        } else {
          result.units_ = unitsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.proto.Proto.UnitGroup) {
          return mergeFrom((org.openlca.proto.Proto.UnitGroup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.proto.Proto.UnitGroup other) {
        if (other == org.openlca.proto.Proto.UnitGroup.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getLastChange().isEmpty()) {
          lastChange_ = other.lastChange_;
          onChanged();
        }
        if (other.hasCategory()) {
          mergeCategory(other.getCategory());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        if (!other.getLibrary().isEmpty()) {
          library_ = other.library_;
          onChanged();
        }
        if (other.hasDefaultFlowProperty()) {
          mergeDefaultFlowProperty(other.getDefaultFlowProperty());
        }
        if (unitsBuilder_ == null) {
          if (!other.units_.isEmpty()) {
            if (units_.isEmpty()) {
              units_ = other.units_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureUnitsIsMutable();
              units_.addAll(other.units_);
            }
            onChanged();
          }
        } else {
          if (!other.units_.isEmpty()) {
            if (unitsBuilder_.isEmpty()) {
              unitsBuilder_.dispose();
              unitsBuilder_ = null;
              units_ = other.units_;
              bitField0_ = (bitField0_ & ~0x00000002);
              unitsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getUnitsFieldBuilder() : null;
            } else {
              unitsBuilder_.addAllMessages(other.units_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.proto.Proto.UnitGroup parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.proto.Proto.UnitGroup) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type name of the respectiven entity.
       * This field is used for JSON-LD compatibility.
       * </pre>
       *
       * <code>string type = 1[json_name = "&#64;type"];</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The reference ID (typically an UUID) of the entity.
       * </pre>
       *
       * <code>string id = 2[json_name = "&#64;id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the entity.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the entity.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A version number in MAJOR.MINOR.PATCH format where the MINOR and PATCH
       * fields are optional and the fields may have leading zeros (so 01.00.00 is
       * the same as 1.0.0 or 1).
       * </pre>
       *
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastChange_ = "";
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The lastChange.
       */
      public java.lang.String getLastChange() {
        java.lang.Object ref = lastChange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastChange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return The bytes for lastChange.
       */
      public com.google.protobuf.ByteString
          getLastChangeBytes() {
        java.lang.Object ref = lastChange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastChange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastChange() {
        
        lastChange_ = getDefaultInstance().getLastChange();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp when the entity was changed the last time.
       * </pre>
       *
       * <code>string last_change = 6;</code>
       * @param value The bytes for lastChange to set.
       * @return This builder for chaining.
       */
      public Builder setLastChangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastChange_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref category_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> categoryBuilder_;
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return Whether the category field is set.
       */
      public boolean hasCategory() {
        return categoryBuilder_ != null || category_ != null;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       * @return The category.
       */
      public org.openlca.proto.Proto.Ref getCategory() {
        if (categoryBuilder_ == null) {
          return category_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        } else {
          return categoryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          category_ = value;
          onChanged();
        } else {
          categoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder setCategory(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          category_ = builderForValue.build();
          onChanged();
        } else {
          categoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder mergeCategory(org.openlca.proto.Proto.Ref value) {
        if (categoryBuilder_ == null) {
          if (category_ != null) {
            category_ =
              org.openlca.proto.Proto.Ref.newBuilder(category_).mergeFrom(value).buildPartial();
          } else {
            category_ = value;
          }
          onChanged();
        } else {
          categoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public Builder clearCategory() {
        if (categoryBuilder_ == null) {
          category_ = null;
          onChanged();
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getCategoryBuilder() {
        
        onChanged();
        return getCategoryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getCategoryOrBuilder() {
        if (categoryBuilder_ != null) {
          return categoryBuilder_.getMessageOrBuilder();
        } else {
          return category_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : category_;
        }
      }
      /**
       * <pre>
       * The category of the entity.
       * </pre>
       *
       * <code>.protolca.Ref category = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getCategoryFieldBuilder() {
        if (categoryBuilder_ == null) {
          categoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getCategory(),
                  getParentForChildren(),
                  isClean());
          category_ = null;
        }
        return categoryBuilder_;
      }

      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return A list containing the tags.
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return The count of tags.
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the element to return.
       * @return The tags at the given index.
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tags at the given index.
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param index The index to set the value at.
       * @param value The tags to set.
       * @return This builder for chaining.
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The tags to add.
       * @return This builder for chaining.
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param values The tags to add.
       * @return This builder for chaining.
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of optional tags. A tag is just a string which should not contain
       * commas (and other special characters).
       * </pre>
       *
       * <code>repeated string tags = 8;</code>
       * @param value The bytes of the tags to add.
       * @return This builder for chaining.
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object library_ = "";
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The library.
       */
      public java.lang.String getLibrary() {
        java.lang.Object ref = library_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          library_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return The bytes for library.
       */
      public com.google.protobuf.ByteString
          getLibraryBytes() {
        java.lang.Object ref = library_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          library_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The library to set.
       * @return This builder for chaining.
       */
      public Builder setLibrary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        library_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLibrary() {
        
        library_ = getDefaultInstance().getLibrary();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this entity is part of a library, this field contains the identifier of
       * that library. The identifier is typically just the comination of the
       * library name and version.
       * </pre>
       *
       * <code>string library = 9;</code>
       * @param value The bytes for library to set.
       * @return This builder for chaining.
       */
      public Builder setLibraryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        library_ = value;
        onChanged();
        return this;
      }

      private org.openlca.proto.Proto.Ref defaultFlowProperty_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> defaultFlowPropertyBuilder_;
      /**
       * <pre>
       * Some LCA data formats do not have the concept of flow properties or
       * quantities. This field provides a default link to a flow property for
       * units that are contained in this group.
       * </pre>
       *
       * <code>.protolca.Ref default_flow_property = 10;</code>
       * @return Whether the defaultFlowProperty field is set.
       */
      public boolean hasDefaultFlowProperty() {
        return defaultFlowPropertyBuilder_ != null || defaultFlowProperty_ != null;
      }
      /**
       * <pre>
       * Some LCA data formats do not have the concept of flow properties or
       * quantities. This field provides a default link to a flow property for
       * units that are contained in this group.
       * </pre>
       *
       * <code>.protolca.Ref default_flow_property = 10;</code>
       * @return The defaultFlowProperty.
       */
      public org.openlca.proto.Proto.Ref getDefaultFlowProperty() {
        if (defaultFlowPropertyBuilder_ == null) {
          return defaultFlowProperty_ == null ? org.openlca.proto.Proto.Ref.getDefaultInstance() : defaultFlowProperty_;
        } else {
          return defaultFlowPropertyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Some LCA data formats do not have the concept of flow properties or
       * quantities. This field provides a default link to a flow property for
       * units that are contained in this group.
       * </pre>
       *
       * <code>.protolca.Ref default_flow_property = 10;</code>
       */
      public Builder setDefaultFlowProperty(org.openlca.proto.Proto.Ref value) {
        if (defaultFlowPropertyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          defaultFlowProperty_ = value;
          onChanged();
        } else {
          defaultFlowPropertyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Some LCA data formats do not have the concept of flow properties or
       * quantities. This field provides a default link to a flow property for
       * units that are contained in this group.
       * </pre>
       *
       * <code>.protolca.Ref default_flow_property = 10;</code>
       */
      public Builder setDefaultFlowProperty(
          org.openlca.proto.Proto.Ref.Builder builderForValue) {
        if (defaultFlowPropertyBuilder_ == null) {
          defaultFlowProperty_ = builderForValue.build();
          onChanged();
        } else {
          defaultFlowPropertyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Some LCA data formats do not have the concept of flow properties or
       * quantities. This field provides a default link to a flow property for
       * units that are contained in this group.
       * </pre>
       *
       * <code>.protolca.Ref default_flow_property = 10;</code>
       */
      public Builder mergeDefaultFlowProperty(org.openlca.proto.Proto.Ref value) {
        if (defaultFlowPropertyBuilder_ == null) {
          if (defaultFlowProperty_ != null) {
            defaultFlowProperty_ =
              org.openlca.proto.Proto.Ref.newBuilder(defaultFlowProperty_).mergeFrom(value).buildPartial();
          } else {
            defaultFlowProperty_ = value;
          }
          onChanged();
        } else {
          defaultFlowPropertyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Some LCA data formats do not have the concept of flow properties or
       * quantities. This field provides a default link to a flow property for
       * units that are contained in this group.
       * </pre>
       *
       * <code>.protolca.Ref default_flow_property = 10;</code>
       */
      public Builder clearDefaultFlowProperty() {
        if (defaultFlowPropertyBuilder_ == null) {
          defaultFlowProperty_ = null;
          onChanged();
        } else {
          defaultFlowProperty_ = null;
          defaultFlowPropertyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Some LCA data formats do not have the concept of flow properties or
       * quantities. This field provides a default link to a flow property for
       * units that are contained in this group.
       * </pre>
       *
       * <code>.protolca.Ref default_flow_property = 10;</code>
       */
      public org.openlca.proto.Proto.Ref.Builder getDefaultFlowPropertyBuilder() {
        
        onChanged();
        return getDefaultFlowPropertyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Some LCA data formats do not have the concept of flow properties or
       * quantities. This field provides a default link to a flow property for
       * units that are contained in this group.
       * </pre>
       *
       * <code>.protolca.Ref default_flow_property = 10;</code>
       */
      public org.openlca.proto.Proto.RefOrBuilder getDefaultFlowPropertyOrBuilder() {
        if (defaultFlowPropertyBuilder_ != null) {
          return defaultFlowPropertyBuilder_.getMessageOrBuilder();
        } else {
          return defaultFlowProperty_ == null ?
              org.openlca.proto.Proto.Ref.getDefaultInstance() : defaultFlowProperty_;
        }
      }
      /**
       * <pre>
       * Some LCA data formats do not have the concept of flow properties or
       * quantities. This field provides a default link to a flow property for
       * units that are contained in this group.
       * </pre>
       *
       * <code>.protolca.Ref default_flow_property = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder> 
          getDefaultFlowPropertyFieldBuilder() {
        if (defaultFlowPropertyBuilder_ == null) {
          defaultFlowPropertyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.proto.Proto.Ref, org.openlca.proto.Proto.Ref.Builder, org.openlca.proto.Proto.RefOrBuilder>(
                  getDefaultFlowProperty(),
                  getParentForChildren(),
                  isClean());
          defaultFlowProperty_ = null;
        }
        return defaultFlowPropertyBuilder_;
      }

      private java.util.List<org.openlca.proto.Proto.Unit> units_ =
        java.util.Collections.emptyList();
      private void ensureUnitsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          units_ = new java.util.ArrayList<org.openlca.proto.Proto.Unit>(units_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.Unit, org.openlca.proto.Proto.Unit.Builder, org.openlca.proto.Proto.UnitOrBuilder> unitsBuilder_;

      /**
       * <pre>
       * The units of the unit group.
       * </pre>
       *
       * <code>repeated .protolca.Unit units = 11;</code>
       */
      public java.util.List<org.openlca.proto.Proto.Unit> getUnitsList() {
        if (unitsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(units_);
        } else {
          return unitsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The units of the unit group.
       * </pre>
       *
       * <code>repeated .protolca.Unit units = 11;</code>
       */
      public int getUnitsCount() {
        if (unitsBuilder_ == null) {
          return units_.size();
        } else {
          return unitsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The units of the unit group.
       * </pre>
       *
       * <code>repeated .protolca.Unit units = 11;</code>
       */
      public org.openlca.proto.Proto.Unit getUnits(int index) {
        if (unitsBuilder_ == null) {
          return units_.get(index);
        } else {
          return unitsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The units of the unit group.
       * </pre>
       *
       * <code>repeated .protolca.Unit units = 11;</code>
       */
      public Builder setUnits(
          int index, org.openlca.proto.Proto.Unit value) {
        if (unitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnitsIsMutable();
          units_.set(index, value);
          onChanged();
        } else {
          unitsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The units of the unit group.
       * </pre>
       *
       * <code>repeated .protolca.Unit units = 11;</code>
       */
      public Builder setUnits(
          int index, org.openlca.proto.Proto.Unit.Builder builderForValue) {
        if (unitsBuilder_ == null) {
          ensureUnitsIsMutable();
          units_.set(index, builderForValue.build());
          onChanged();
        } else {
          unitsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The units of the unit group.
       * </pre>
       *
       * <code>repeated .protolca.Unit units = 11;</code>
       */
      public Builder addUnits(org.openlca.proto.Proto.Unit value) {
        if (unitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnitsIsMutable();
          units_.add(value);
          onChanged();
        } else {
          unitsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The units of the unit group.
       * </pre>
       *
       * <code>repeated .protolca.Unit units = 11;</code>
       */
      public Builder addUnits(
          int index, org.openlca.proto.Proto.Unit value) {
        if (unitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnitsIsMutable();
          units_.add(index, value);
          onChanged();
        } else {
          unitsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The units of the unit group.
       * </pre>
       *
       * <code>repeated .protolca.Unit units = 11;</code>
       */
      public Builder addUnits(
          org.openlca.proto.Proto.Unit.Builder builderForValue) {
        if (unitsBuilder_ == null) {
          ensureUnitsIsMutable();
          units_.add(builderForValue.build());
          onChanged();
        } else {
          unitsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The units of the unit group.
       * </pre>
       *
       * <code>repeated .protolca.Unit units = 11;</code>
       */
      public Builder addUnits(
          int index, org.openlca.proto.Proto.Unit.Builder builderForValue) {
        if (unitsBuilder_ == null) {
          ensureUnitsIsMutable();
          units_.add(index, builderForValue.build());
          onChanged();
        } else {
          unitsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The units of the unit group.
       * </pre>
       *
       * <code>repeated .protolca.Unit units = 11;</code>
       */
      public Builder addAllUnits(
          java.lang.Iterable<? extends org.openlca.proto.Proto.Unit> values) {
        if (unitsBuilder_ == null) {
          ensureUnitsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, units_);
          onChanged();
        } else {
          unitsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The units of the unit group.
       * </pre>
       *
       * <code>repeated .protolca.Unit units = 11;</code>
       */
      public Builder clearUnits() {
        if (unitsBuilder_ == null) {
          units_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          unitsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The units of the unit group.
       * </pre>
       *
       * <code>repeated .protolca.Unit units = 11;</code>
       */
      public Builder removeUnits(int index) {
        if (unitsBuilder_ == null) {
          ensureUnitsIsMutable();
          units_.remove(index);
          onChanged();
        } else {
          unitsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The units of the unit group.
       * </pre>
       *
       * <code>repeated .protolca.Unit units = 11;</code>
       */
      public org.openlca.proto.Proto.Unit.Builder getUnitsBuilder(
          int index) {
        return getUnitsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The units of the unit group.
       * </pre>
       *
       * <code>repeated .protolca.Unit units = 11;</code>
       */
      public org.openlca.proto.Proto.UnitOrBuilder getUnitsOrBuilder(
          int index) {
        if (unitsBuilder_ == null) {
          return units_.get(index);  } else {
          return unitsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The units of the unit group.
       * </pre>
       *
       * <code>repeated .protolca.Unit units = 11;</code>
       */
      public java.util.List<? extends org.openlca.proto.Proto.UnitOrBuilder> 
           getUnitsOrBuilderList() {
        if (unitsBuilder_ != null) {
          return unitsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(units_);
        }
      }
      /**
       * <pre>
       * The units of the unit group.
       * </pre>
       *
       * <code>repeated .protolca.Unit units = 11;</code>
       */
      public org.openlca.proto.Proto.Unit.Builder addUnitsBuilder() {
        return getUnitsFieldBuilder().addBuilder(
            org.openlca.proto.Proto.Unit.getDefaultInstance());
      }
      /**
       * <pre>
       * The units of the unit group.
       * </pre>
       *
       * <code>repeated .protolca.Unit units = 11;</code>
       */
      public org.openlca.proto.Proto.Unit.Builder addUnitsBuilder(
          int index) {
        return getUnitsFieldBuilder().addBuilder(
            index, org.openlca.proto.Proto.Unit.getDefaultInstance());
      }
      /**
       * <pre>
       * The units of the unit group.
       * </pre>
       *
       * <code>repeated .protolca.Unit units = 11;</code>
       */
      public java.util.List<org.openlca.proto.Proto.Unit.Builder> 
           getUnitsBuilderList() {
        return getUnitsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.proto.Proto.Unit, org.openlca.proto.Proto.Unit.Builder, org.openlca.proto.Proto.UnitOrBuilder> 
          getUnitsFieldBuilder() {
        if (unitsBuilder_ == null) {
          unitsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.proto.Proto.Unit, org.openlca.proto.Proto.Unit.Builder, org.openlca.proto.Proto.UnitOrBuilder>(
                  units_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          units_ = null;
        }
        return unitsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protolca.UnitGroup)
    }

    // @@protoc_insertion_point(class_scope:protolca.UnitGroup)
    private static final org.openlca.proto.Proto.UnitGroup DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.proto.Proto.UnitGroup();
    }

    public static org.openlca.proto.Proto.UnitGroup getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UnitGroup>
        PARSER = new com.google.protobuf.AbstractParser<UnitGroup>() {
      @java.lang.Override
      public UnitGroup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnitGroup(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UnitGroup> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UnitGroup> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.proto.Proto.UnitGroup getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_Actor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_Actor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_AllocationFactor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_AllocationFactor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_CalculationSetup_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_CalculationSetup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_Category_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_Category_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_Currency_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_Currency_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_DqIndicator_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_DqIndicator_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_DqScore_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_DqScore_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_DqSystem_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_DqSystem_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_Exchange_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_Exchange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_Flow_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_Flow_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_FlowMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_FlowMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_FlowMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_FlowMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_FlowMapRef_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_FlowMapRef_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_FlowProperty_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_FlowProperty_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_FlowPropertyFactor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_FlowPropertyFactor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_FlowRef_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_FlowRef_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_FlowResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_FlowResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_ImpactCategory_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_ImpactCategory_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_ImpactCategoryRef_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_ImpactCategoryRef_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_ImpactFactor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_ImpactFactor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_ImpactMethod_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_ImpactMethod_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_ImpactResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_ImpactResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_Location_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_Location_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_NwFactor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_NwFactor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_NwSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_NwSet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_Parameter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_Parameter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_ParameterRedef_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_ParameterRedef_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_Process_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_Process_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_ProcessDocumentation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_ProcessDocumentation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_ProcessLink_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_ProcessLink_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_ProcessRef_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_ProcessRef_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_ProductSystem_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_ProductSystem_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_Project_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_Project_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_Ref_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_Ref_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_SimpleResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_SimpleResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_SocialIndicator_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_SocialIndicator_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_Source_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_Source_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_Uncertainty_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_Uncertainty_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_Unit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_Unit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protolca_UnitGroup_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protolca_UnitGroup_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nolca.proto\022\010protolca\"\274\002\n\005Actor\022\023\n\004type" +
      "\030\001 \001(\tR\005@type\022\017\n\002id\030\002 \001(\tR\003@id\022\014\n\004name\030\003" +
      " \001(\t\022\023\n\013description\030\004 \001(\t\022\017\n\007version\030\005 \001" +
      "(\t\022\023\n\013last_change\030\006 \001(\t\022\037\n\010category\030\007 \001(" +
      "\0132\r.protolca.Ref\022\014\n\004tags\030\010 \003(\t\022\017\n\007librar" +
      "y\030\t \001(\t\022\017\n\007address\030\n \001(\t\022\014\n\004city\030\013 \001(\t\022\017" +
      "\n\007country\030\014 \001(\t\022\r\n\005email\030\r \001(\t\022\017\n\007telefa" +
      "x\030\016 \001(\t\022\021\n\ttelephone\030\017 \001(\t\022\017\n\007website\030\020 " +
      "\001(\t\022\020\n\010zip_code\030\021 \001(\t\"\330\001\n\020AllocationFact" +
      "or\022\023\n\004type\030\001 \001(\tR\005@type\022,\n\020product_excha" +
      "nge\030\002 \001(\0132\022.protolca.Exchange\0221\n\017allocat" +
      "ion_type\030\003 \001(\0162\030.protolca.AllocationType" +
      "\022\r\n\005value\030\004 \001(\001\022\017\n\007formula\030\005 \001(\t\022.\n\022allo" +
      "cated_exchange\030\006 \001(\0132\022.protolca.Exchange" +
      "\"\230\003\n\020CalculationSetup\022\023\n\004type\030\001 \001(\tR\005@ty" +
      "pe\0223\n\020calculation_type\030\002 \001(\0162\031.protolca." +
      "CalculationType\022%\n\016product_system\030\003 \001(\0132" +
      "\r.protolca.Ref\022$\n\rimpact_method\030\004 \001(\0132\r." +
      "protolca.Ref\022\022\n\nwith_costs\030\005 \001(\010\022\035\n\006nw_s" +
      "et\030\006 \001(\0132\r.protolca.Ref\0223\n\021allocation_me" +
      "thod\030\007 \001(\0162\030.protolca.AllocationType\0222\n\020" +
      "parameter_redefs\030\010 \003(\0132\030.protolca.Parame" +
      "terRedef\022\016\n\006amount\030\t \001(\001\022\033\n\004unit\030\n \001(\0132\r" +
      ".protolca.Ref\022$\n\rflow_property\030\013 \001(\0132\r.p" +
      "rotolca.Ref\"\342\001\n\010Category\022\023\n\004type\030\001 \001(\tR\005" +
      "@type\022\017\n\002id\030\002 \001(\tR\003@id\022\014\n\004name\030\003 \001(\t\022\023\n\013" +
      "description\030\004 \001(\t\022\017\n\007version\030\005 \001(\t\022\023\n\013la" +
      "st_change\030\006 \001(\t\022\037\n\010category\030\007 \001(\0132\r.prot" +
      "olca.Ref\022\014\n\004tags\030\010 \003(\t\022\017\n\007library\030\t \001(\t\022" +
      "\'\n\nmodel_type\030\n \001(\0162\023.protolca.ModelType" +
      "\"\215\002\n\010Currency\022\023\n\004type\030\001 \001(\tR\005@type\022\017\n\002id" +
      "\030\002 \001(\tR\003@id\022\014\n\004name\030\003 \001(\t\022\023\n\013description" +
      "\030\004 \001(\t\022\017\n\007version\030\005 \001(\t\022\023\n\013last_change\030\006" +
      " \001(\t\022\037\n\010category\030\007 \001(\0132\r.protolca.Ref\022\014\n" +
      "\004tags\030\010 \003(\t\022\017\n\007library\030\t \001(\t\022\014\n\004code\030\n \001" +
      "(\t\022\031\n\021conversion_factor\030\013 \001(\001\022)\n\022referen" +
      "ce_currency\030\014 \001(\0132\r.protolca.Ref\"e\n\013DqIn" +
      "dicator\022\023\n\004type\030\001 \001(\tR\005@type\022\014\n\004name\030\002 \001" +
      "(\t\022\020\n\010position\030\003 \001(\005\022!\n\006scores\030\004 \003(\0132\021.p" +
      "rotolca.DqScore\"i\n\007DqScore\022\023\n\004type\030\001 \001(\t" +
      "R\005@type\022\020\n\010position\030\002 \001(\005\022\r\n\005label\030\003 \001(\t" +
      "\022\023\n\013description\030\004 \001(\t\022\023\n\013uncertainty\030\005 \001" +
      "(\001\"\236\002\n\010DqSystem\022\023\n\004type\030\001 \001(\tR\005@type\022\017\n\002" +
      "id\030\002 \001(\tR\003@id\022\014\n\004name\030\003 \001(\t\022\023\n\013descripti" +
      "on\030\004 \001(\t\022\017\n\007version\030\005 \001(\t\022\023\n\013last_change" +
      "\030\006 \001(\t\022\037\n\010category\030\007 \001(\0132\r.protolca.Ref\022" +
      "\014\n\004tags\030\010 \003(\t\022\017\n\007library\030\t \001(\t\022\031\n\021has_un" +
      "certainties\030\n \001(\010\022\035\n\006source\030\013 \001(\0132\r.prot" +
      "olca.Ref\022)\n\nindicators\030\014 \003(\0132\025.protolca." +
      "DqIndicator\"\245\003\n\010Exchange\022\023\n\004type\030\001 \001(\tR\005" +
      "@type\022\023\n\013internal_id\030\002 \001(\005\022\027\n\017avoided_pr" +
      "oduct\030\003 \001(\010\022\037\n\004flow\030\004 \001(\0132\021.protolca.Flo" +
      "wRef\022$\n\rflow_property\030\005 \001(\0132\r.protolca.R" +
      "ef\022\r\n\005input\030\006 \001(\010\022\036\n\026quantitative_refere" +
      "nce\030\007 \001(\010\022\030\n\020base_uncertainty\030\010 \001(\001\022.\n\020d" +
      "efault_provider\030\t \001(\0132\024.protolca.Process" +
      "Ref\022\016\n\006amount\030\n \001(\001\022\026\n\016amount_formula\030\013 " +
      "\001(\t\022\033\n\004unit\030\014 \001(\0132\r.protolca.Ref\022\020\n\010dq_e" +
      "ntry\030\r \001(\t\022*\n\013uncertainty\030\016 \001(\0132\025.protol" +
      "ca.Uncertainty\022\023\n\013description\030\017 \001(\t\"\322\002\n\004" +
      "Flow\022\023\n\004type\030\001 \001(\tR\005@type\022\017\n\002id\030\002 \001(\tR\003@" +
      "id\022\014\n\004name\030\003 \001(\t\022\023\n\013description\030\004 \001(\t\022\017\n" +
      "\007version\030\005 \001(\t\022\023\n\013last_change\030\006 \001(\t\022\037\n\010c" +
      "ategory\030\007 \001(\0132\r.protolca.Ref\022\014\n\004tags\030\010 \003" +
      "(\t\022\017\n\007library\030\t \001(\t\022%\n\tflow_type\030\n \001(\0162\022" +
      ".protolca.FlowType\022\013\n\003cas\030\013 \001(\t\022\017\n\007formu" +
      "la\030\014 \001(\t\0225\n\017flow_properties\030\r \003(\0132\034.prot" +
      "olca.FlowPropertyFactor\022\037\n\010location\030\016 \001(" +
      "\0132\r.protolca.Ref\"\340\001\n\007FlowMap\022\023\n\004type\030\001 \001" +
      "(\tR\005@type\022\017\n\002id\030\002 \001(\tR\003@id\022\014\n\004name\030\003 \001(\t" +
      "\022\023\n\013description\030\004 \001(\t\022\017\n\007version\030\005 \001(\t\022\023" +
      "\n\013last_change\030\006 \001(\t\022\035\n\006source\030\007 \001(\0132\r.pr" +
      "otolca.Ref\022\035\n\006target\030\010 \001(\0132\r.protolca.Re" +
      "f\022(\n\010mappings\030\t \003(\0132\026.protolca.FlowMapEn" +
      "try\"\336\001\n\014FlowMapEntry\022\023\n\004type\030\001 \001(\tR\005@typ" +
      "e\022\017\n\002id\030\002 \001(\tR\003@id\022\014\n\004name\030\003 \001(\t\022\023\n\013desc" +
      "ription\030\004 \001(\t\022\017\n\007version\030\005 \001(\t\022\023\n\013last_c" +
      "hange\030\006 \001(\t\022\"\n\004from\030\007 \001(\0132\024.protolca.Flo" +
      "wMapRef\022 \n\002to\030\010 \001(\0132\024.protolca.FlowMapRe" +
      "f\022\031\n\021conversion_factor\030\t \001(\001\"\205\001\n\nFlowMap" +
      "Ref\022\023\n\004type\030\001 \001(\tR\005@type\022\037\n\004flow\030\002 \001(\0132\021" +
      ".protolca.FlowRef\022$\n\rflow_property\030\003 \001(\013" +
      "2\r.protolca.Ref\022\033\n\004unit\030\004 \001(\0132\r.protolca" +
      ".Ref\"\230\002\n\014FlowProperty\022\023\n\004type\030\001 \001(\tR\005@ty" +
      "pe\022\017\n\002id\030\002 \001(\tR\003@id\022\014\n\004name\030\003 \001(\t\022\023\n\013des" +
      "cription\030\004 \001(\t\022\017\n\007version\030\005 \001(\t\022\023\n\013last_" +
      "change\030\006 \001(\t\022\037\n\010category\030\007 \001(\0132\r.protolc" +
      "a.Ref\022\014\n\004tags\030\010 \003(\t\022\017\n\007library\030\t \001(\t\0226\n\022" +
      "flow_property_type\030\n \001(\0162\032.protolca.Flow" +
      "PropertyType\022!\n\nunit_group\030\013 \001(\0132\r.proto" +
      "lca.Ref\"\213\001\n\022FlowPropertyFactor\022\023\n\004type\030\001" +
      " \001(\tR\005@type\022$\n\rflow_property\030\002 \001(\0132\r.pro" +
      "tolca.Ref\022\031\n\021conversion_factor\030\003 \001(\001\022\037\n\027" +
      "reference_flow_property\030\004 \001(\010\"T\n\007FlowRef" +
      "\022\020\n\010ref_unit\030\001 \001(\t\022\020\n\010location\030\002 \001(\t\022%\n\t" +
      "flow_type\030\003 \001(\0162\022.protolca.FlowType\"`\n\nF" +
      "lowResult\022\023\n\004type\030\001 \001(\tR\005@type\022\037\n\004flow\030\002" +
      " \001(\0132\021.protolca.FlowRef\022\r\n\005input\030\003 \001(\010\022\r" +
      "\n\005value\030\004 \001(\001\"\214\002\n\016ImpactCategory\022\023\n\004type" +
      "\030\001 \001(\tR\005@type\022\017\n\002id\030\002 \001(\tR\003@id\022\014\n\004name\030\003" +
      " \001(\t\022\023\n\013description\030\004 \001(\t\022\017\n\007version\030\005 \001" +
      "(\t\022\023\n\013last_change\030\006 \001(\t\022\037\n\010category\030\007 \001(" +
      "\0132\r.protolca.Ref\022\014\n\004tags\030\010 \003(\t\022\017\n\007librar" +
      "y\030\t \001(\t\022\033\n\023reference_unit_name\030\n \001(\t\022.\n\016" +
      "impact_factors\030\013 \003(\0132\026.protolca.ImpactFa" +
      "ctor\"%\n\021ImpactCategoryRef\022\020\n\010ref_unit\030\001 " +
      "\001(\t\"\323\001\n\014ImpactFactor\022\023\n\004type\030\001 \001(\tR\005@typ" +
      "e\022\037\n\004flow\030\002 \001(\0132\021.protolca.FlowRef\022$\n\rfl" +
      "ow_property\030\003 \001(\0132\r.protolca.Ref\022\033\n\004unit" +
      "\030\004 \001(\0132\r.protolca.Ref\022\r\n\005value\030\005 \001(\001\022\017\n\007" +
      "formula\030\006 \001(\t\022*\n\013uncertainty\030\007 \001(\0132\025.pro" +
      "tolca.Uncertainty\"\236\002\n\014ImpactMethod\022\023\n\004ty" +
      "pe\030\001 \001(\tR\005@type\022\017\n\002id\030\002 \001(\tR\003@id\022\014\n\004name" +
      "\030\003 \001(\t\022\023\n\013description\030\004 \001(\t\022\017\n\007version\030\005" +
      " \001(\t\022\023\n\013last_change\030\006 \001(\t\022\037\n\010category\030\007 " +
      "\001(\0132\r.protolca.Ref\022\014\n\004tags\030\010 \003(\t\022\017\n\007libr" +
      "ary\030\t \001(\t\0226\n\021impact_categories\030\n \003(\0132\033.p" +
      "rotolca.ImpactCategoryRef\022\'\n\nparameters\030" +
      "\013 \003(\0132\023.protolca.Parameter\"h\n\014ImpactResu" +
      "lt\022\023\n\004type\030\001 \001(\tR\005@type\0224\n\017impact_catego" +
      "ry\030\002 \001(\0132\033.protolca.ImpactCategoryRef\022\r\n" +
      "\005value\030\003 \001(\001\"\371\001\n\010Location\022\023\n\004type\030\001 \001(\tR" +
      "\005@type\022\017\n\002id\030\002 \001(\tR\003@id\022\014\n\004name\030\003 \001(\t\022\023\n" +
      "\013description\030\004 \001(\t\022\017\n\007version\030\005 \001(\t\022\023\n\013l" +
      "ast_change\030\006 \001(\t\022\037\n\010category\030\007 \001(\0132\r.pro" +
      "tolca.Ref\022\014\n\004tags\030\010 \003(\t\022\017\n\007library\030\t \001(\t" +
      "\022\014\n\004code\030\n \001(\t\022\020\n\010latitude\030\013 \001(\001\022\021\n\tlong" +
      "itude\030\014 \001(\001\022\013\n\003kml\030\r \001(\t\"\177\n\010NwFactor\022\023\n\004" +
      "type\030\001 \001(\tR\005@type\022&\n\017impact_category\030\002 \001" +
      "(\0132\r.protolca.Ref\022\034\n\024normalisation_facto" +
      "r\030\003 \001(\001\022\030\n\020weighting_factor\030\004 \001(\001\"\270\001\n\005Nw" +
      "Set\022\023\n\004type\030\001 \001(\tR\005@type\022\017\n\002id\030\002 \001(\tR\003@i" +
      "d\022\014\n\004name\030\003 \001(\t\022\023\n\013description\030\004 \001(\t\022\017\n\007" +
      "version\030\005 \001(\t\022\023\n\013last_change\030\006 \001(\t\022\033\n\023we" +
      "ighted_score_unit\030\007 \001(\t\022#\n\007factors\030\010 \003(\013" +
      "2\022.protolca.NwFactor\"\322\002\n\tParameter\022\023\n\004ty" +
      "pe\030\001 \001(\tR\005@type\022\017\n\002id\030\002 \001(\tR\003@id\022\014\n\004name" +
      "\030\003 \001(\t\022\023\n\013description\030\004 \001(\t\022\017\n\007version\030\005" +
      " \001(\t\022\023\n\013last_change\030\006 \001(\t\022\037\n\010category\030\007 " +
      "\001(\0132\r.protolca.Ref\022\014\n\004tags\030\010 \003(\t\022\017\n\007libr" +
      "ary\030\t \001(\t\0221\n\017parameter_scope\030\n \001(\0162\030.pro" +
      "tolca.ParameterScope\022\027\n\017input_parameter\030" +
      "\013 \001(\010\022\r\n\005value\030\014 \001(\001\022\017\n\007formula\030\r \001(\t\022*\n" +
      "\013uncertainty\030\016 \001(\0132\025.protolca.Uncertaint" +
      "y\"b\n\016ParameterRedef\022\023\n\004type\030\001 \001(\tR\005@type" +
      "\022\014\n\004name\030\002 \001(\t\022\r\n\005value\030\003 \001(\001\022\036\n\007context" +
      "\030\004 \001(\0132\r.protolca.Ref\"\227\005\n\007Process\022\023\n\004typ" +
      "e\030\001 \001(\tR\005@type\022\017\n\002id\030\002 \001(\tR\003@id\022\014\n\004name\030" +
      "\003 \001(\t\022\023\n\013description\030\004 \001(\t\022\017\n\007version\030\005 " +
      "\001(\t\022\023\n\013last_change\030\006 \001(\t\022\037\n\010category\030\007 \001" +
      "(\0132\r.protolca.Ref\022\014\n\004tags\030\010 \003(\t\022\017\n\007libra" +
      "ry\030\t \001(\t\022;\n\031default_allocation_method\030\n " +
      "\001(\0162\030.protolca.AllocationType\0226\n\022allocat" +
      "ion_factors\030\013 \003(\0132\032.protolca.AllocationF" +
      "actor\022%\n\texchanges\030\014 \003(\0132\022.protolca.Exch" +
      "ange\022$\n\010location\030\r \001(\0132\022.protolca.Locati" +
      "on\022\'\n\nparameters\030\016 \003(\0132\023.protolca.Parame" +
      "ter\022=\n\025process_documentation\030\017 \001(\0132\036.pro" +
      "tolca.ProcessDocumentation\022+\n\014process_ty" +
      "pe\030\020 \001(\0162\025.protolca.ProcessType\022 \n\tdq_sy" +
      "stem\030\021 \001(\0132\r.protolca.Ref\022)\n\022exchange_dq" +
      "_system\030\022 \001(\0132\r.protolca.Ref\022\'\n\020social_d" +
      "q_system\030\023 \001(\0132\r.protolca.Ref\022\020\n\010dq_entr" +
      "y\030\024 \001(\t\"\242\006\n\024ProcessDocumentation\022\023\n\004type" +
      "\030\001 \001(\tR\005@type\022\030\n\020time_description\030\002 \001(\t\022" +
      "\023\n\013valid_until\030\003 \001(\t\022\022\n\nvalid_from\030\004 \001(\t" +
      "\022\036\n\026technology_description\030\005 \001(\t\022#\n\033data" +
      "_collection_description\030\006 \001(\t\022 \n\030complet" +
      "eness_description\030\007 \001(\t\022\"\n\032data_selectio" +
      "n_description\030\010 \001(\t\022\026\n\016review_details\030\t " +
      "\001(\t\022\"\n\032data_treatment_description\030\n \001(\t\022" +
      "$\n\034inventory_method_description\030\013 \001(\t\022&\n" +
      "\036modeling_constants_description\030\014 \001(\t\022\037\n" +
      "\010reviewer\030\r \001(\0132\r.protolca.Ref\022\034\n\024sampli" +
      "ng_description\030\016 \001(\t\022\036\n\007sources\030\017 \003(\0132\r." +
      "protolca.Ref\022 \n\030restrictions_description" +
      "\030\020 \001(\t\022\021\n\tcopyright\030\021 \001(\010\022\025\n\rcreation_da" +
      "te\030\022 \001(\t\022&\n\017data_documentor\030\023 \001(\0132\r.prot" +
      "olca.Ref\022%\n\016data_generator\030\024 \001(\0132\r.proto" +
      "lca.Ref\022%\n\016data_set_owner\030\025 \001(\0132\r.protol" +
      "ca.Ref\022\034\n\024intended_application\030\026 \001(\t\022\033\n\023" +
      "project_description\030\027 \001(\t\022\"\n\013publication" +
      "\030\030 \001(\0132\r.protolca.Ref\022\035\n\025geography_descr" +
      "iption\030\031 \001(\t\"\246\001\n\013ProcessLink\022\023\n\004type\030\001 \001" +
      "(\tR\005@type\022\037\n\010provider\030\002 \001(\0132\r.protolca.R" +
      "ef\022\033\n\004flow\030\003 \001(\0132\r.protolca.Ref\022\036\n\007proce" +
      "ss\030\004 \001(\0132\r.protolca.Ref\022$\n\010exchange\030\005 \001(" +
      "\0132\022.protolca.Exchange\"K\n\nProcessRef\022\020\n\010l" +
      "ocation\030\001 \001(\t\022+\n\014process_type\030\002 \001(\0162\025.pr" +
      "otolca.ProcessType\"\336\003\n\rProductSystem\022\023\n\004" +
      "type\030\001 \001(\tR\005@type\022\017\n\002id\030\002 \001(\tR\003@id\022\014\n\004na" +
      "me\030\003 \001(\t\022\023\n\013description\030\004 \001(\t\022\017\n\007version" +
      "\030\005 \001(\t\022\023\n\013last_change\030\006 \001(\t\022\037\n\010category\030" +
      "\007 \001(\0132\r.protolca.Ref\022\014\n\004tags\030\010 \003(\t\022\017\n\007li" +
      "brary\030\t \001(\t\022\'\n\tprocesses\030\n \003(\0132\024.protolc" +
      "a.ProcessRef\022/\n\021reference_process\030\013 \001(\0132" +
      "\024.protolca.ProcessRef\022.\n\022reference_excha" +
      "nge\030\014 \001(\0132\022.protolca.Exchange\022\025\n\rtarget_" +
      "amount\030\r \001(\001\022\"\n\013target_unit\030\016 \001(\0132\r.prot" +
      "olca.Ref\022+\n\024target_flow_property\030\017 \001(\0132\r" +
      ".protolca.Ref\022,\n\rprocess_links\030\020 \003(\0132\025.p" +
      "rotolca.ProcessLink\"\377\001\n\007Project\022\023\n\004type\030" +
      "\001 \001(\tR\005@type\022\017\n\002id\030\002 \001(\tR\003@id\022\014\n\004name\030\003 " +
      "\001(\t\022\023\n\013description\030\004 \001(\t\022\017\n\007version\030\005 \001(" +
      "\t\022\023\n\013last_change\030\006 \001(\t\022\037\n\010category\030\007 \001(\013" +
      "2\r.protolca.Ref\022\014\n\004tags\030\010 \003(\t\022\017\n\007library" +
      "\030\t \001(\t\022$\n\rimpact_method\030\n \001(\0132\r.protolca" +
      ".Ref\022\037\n\006nw_set\030\013 \001(\0132\017.protolca.NwSet\"\213\001" +
      "\n\003Ref\022\023\n\004type\030\001 \001(\tR\005@type\022\017\n\002id\030\002 \001(\tR\003" +
      "@id\022\014\n\004name\030\003 \001(\t\022\023\n\013description\030\004 \001(\t\022\017" +
      "\n\007version\030\005 \001(\t\022\023\n\013last_change\030\006 \001(\t\022\025\n\r" +
      "category_path\030\007 \003(\t\"\177\n\014SimpleResult\022\023\n\004t" +
      "ype\030\001 \001(\tR\005@type\022*\n\014flow_results\030\002 \003(\0132\024" +
      ".protolca.FlowResult\022.\n\016impact_results\030\003" +
      " \003(\0132\026.protolca.ImpactResult\"\343\002\n\017SocialI" +
      "ndicator\022\023\n\004type\030\001 \001(\tR\005@type\022\017\n\002id\030\002 \001(" +
      "\tR\003@id\022\014\n\004name\030\003 \001(\t\022\023\n\013description\030\004 \001(" +
      "\t\022\017\n\007version\030\005 \001(\t\022\023\n\013last_change\030\006 \001(\t\022" +
      "\037\n\010category\030\007 \001(\0132\r.protolca.Ref\022\014\n\004tags" +
      "\030\010 \003(\t\022\017\n\007library\030\t \001(\t\022\031\n\021activity_vari" +
      "able\030\n \001(\t\022(\n\021activity_quantity\030\013 \001(\0132\r." +
      "protolca.Ref\022$\n\ractivity_unit\030\014 \001(\0132\r.pr" +
      "otolca.Ref\022\033\n\023unit_of_measurement\030\r \001(\t\022" +
      "\031\n\021evaluation_scheme\030\016 \001(\t\"\201\002\n\006Source\022\023\n" +
      "\004type\030\001 \001(\tR\005@type\022\017\n\002id\030\002 \001(\tR\003@id\022\014\n\004n" +
      "ame\030\003 \001(\t\022\023\n\013description\030\004 \001(\t\022\017\n\007versio" +
      "n\030\005 \001(\t\022\023\n\013last_change\030\006 \001(\t\022\037\n\010category" +
      "\030\007 \001(\0132\r.protolca.Ref\022\014\n\004tags\030\010 \003(\t\022\017\n\007l" +
      "ibrary\030\t \001(\t\022\013\n\003url\030\n \001(\t\022\026\n\016text_refere" +
      "nce\030\013 \001(\t\022\014\n\004year\030\014 \001(\005\022\025\n\rexternal_file" +
      "\030\r \001(\t\"\354\002\n\013Uncertainty\022\023\n\004type\030\001 \001(\tR\005@t" +
      "ype\0224\n\021distribution_type\030\002 \001(\0162\031.protolc" +
      "a.UncertaintyType\022\014\n\004mean\030\003 \001(\001\022\024\n\014mean_" +
      "formula\030\004 \001(\t\022\021\n\tgeom_mean\030\005 \001(\001\022\031\n\021geom" +
      "_mean_formula\030\006 \001(\t\022\017\n\007minimum\030\007 \001(\001\022\027\n\017" +
      "minimum_formula\030\010 \001(\t\022\n\n\002sd\030\t \001(\001\022\022\n\nsd_" +
      "formula\030\n \001(\t\022\017\n\007geom_sd\030\013 \001(\001\022\027\n\017geom_s" +
      "d_formula\030\014 \001(\t\022\014\n\004mode\030\r \001(\001\022\024\n\014mode_fo" +
      "rmula\030\016 \001(\t\022\017\n\007maximum\030\017 \001(\001\022\027\n\017maximum_" +
      "formula\030\020 \001(\t\"\272\001\n\004Unit\022\023\n\004type\030\001 \001(\tR\005@t" +
      "ype\022\017\n\002id\030\002 \001(\tR\003@id\022\014\n\004name\030\003 \001(\t\022\023\n\013de" +
      "scription\030\004 \001(\t\022\017\n\007version\030\005 \001(\t\022\023\n\013last" +
      "_change\030\006 \001(\t\022\031\n\021conversion_factor\030\007 \001(\001" +
      "\022\026\n\016reference_unit\030\010 \001(\010\022\020\n\010synonyms\030\t \003" +
      "(\t\"\207\002\n\tUnitGroup\022\023\n\004type\030\001 \001(\tR\005@type\022\017\n" +
      "\002id\030\002 \001(\tR\003@id\022\014\n\004name\030\003 \001(\t\022\023\n\013descript" +
      "ion\030\004 \001(\t\022\017\n\007version\030\005 \001(\t\022\023\n\013last_chang" +
      "e\030\006 \001(\t\022\037\n\010category\030\007 \001(\0132\r.protolca.Ref" +
      "\022\014\n\004tags\030\010 \003(\t\022\017\n\007library\030\t \001(\t\022,\n\025defau" +
      "lt_flow_property\030\n \001(\0132\r.protolca.Ref\022\035\n" +
      "\005units\030\013 \003(\0132\016.protolca.Unit*\247\001\n\016Allocat" +
      "ionType\022\035\n\031UNDEFINED_ALLOCATION_TYPE\020\000\022\027" +
      "\n\023PHYSICAL_ALLOCATION\020\001\022\027\n\023ECONOMIC_ALLO" +
      "CATION\020\002\022\025\n\021CAUSAL_ALLOCATION\020\003\022\032\n\026USE_D" +
      "EFAULT_ALLOCATION\020\004\022\021\n\rNO_ALLOCATION\020\005*\265" +
      "\001\n\017CalculationType\022\036\n\032UNDEFINED_CALCULAT" +
      "ION_TYPE\020\000\022\026\n\022SIMPLE_CALCULATION\020\001\022\031\n\025CO" +
      "NTRIBUTION_ANALYSIS\020\002\022\025\n\021UPSTREAM_ANALYS" +
      "IS\020\003\022\034\n\030REGIONALIZED_CALCULATION\020\004\022\032\n\026MO" +
      "NTE_CARLO_SIMULATION\020\005*b\n\020FlowPropertyTy" +
      "pe\022 \n\034UNDEFINED_FLOW_PROPERTY_TYPE\020\000\022\025\n\021" +
      "ECONOMIC_QUANTITY\020\001\022\025\n\021PHYSICAL_QUANTITY" +
      "\020\002*Z\n\010FlowType\022\027\n\023UNDEFINED_FLOW_TYPE\020\000\022" +
      "\023\n\017ELEMENTARY_FLOW\020\001\022\020\n\014PRODUCT_FLOW\020\002\022\016" +
      "\n\nWASTE_FLOW\020\003*\207\002\n\tModelType\022\030\n\024UNDEFINE" +
      "D_MODEL_TYPE\020\000\022\013\n\007PROJECT\020\001\022\021\n\rIMPACT_ME" +
      "THOD\020\002\022\023\n\017IMPACT_CATEGORY\020\003\022\022\n\016PRODUCT_S" +
      "YSTEM\020\004\022\013\n\007PROCESS\020\005\022\010\n\004FLOW\020\006\022\021\n\rFLOW_P" +
      "ROPERTY\020\007\022\016\n\nUNIT_GROUP\020\010\022\010\n\004UNIT\020\t\022\t\n\005A" +
      "CTOR\020\n\022\n\n\006SOURCE\020\013\022\014\n\010CATEGORY\020\014\022\014\n\010LOCA" +
      "TION\020\r\022\n\n\006NW_SET\020\016\022\024\n\020SOCIAL_INDICATOR\020\017" +
      "*k\n\016ParameterScope\022\035\n\031UNDEFINED_PARAMETE" +
      "R_SCOPE\020\000\022\021\n\rPROCESS_SCOPE\020\001\022\025\n\021LCIA_MET" +
      "HOD_SCOPE\020\002\022\020\n\014GLOBAL_SCOPE\020\003*K\n\013Process" +
      "Type\022\032\n\026UNDEFINED_PROCESS_TYPE\020\000\022\016\n\nLCI_" +
      "RESULT\020\001\022\020\n\014UNIT_PROCESS\020\002*\234\001\n\017Uncertain" +
      "tyType\022\036\n\032UNDEFINED_UNCERTAINTY_TYPE\020\000\022\033" +
      "\n\027LOG_NORMAL_DISTRIBUTION\020\001\022\027\n\023NORMAL_DI" +
      "STRIBUTION\020\002\022\031\n\025TRIANGLE_DISTRIBUTION\020\003\022" +
      "\030\n\024UNIFORM_DISTRIBUTION\020\004B&\n\021org.openlca" +
      ".protoB\005ProtoZ\n.;protolcab\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_protolca_Actor_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protolca_Actor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_Actor_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "Category", "Tags", "Library", "Address", "City", "Country", "Email", "Telefax", "Telephone", "Website", "ZipCode", });
    internal_static_protolca_AllocationFactor_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_protolca_AllocationFactor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_AllocationFactor_descriptor,
        new java.lang.String[] { "Type", "ProductExchange", "AllocationType", "Value", "Formula", "AllocatedExchange", });
    internal_static_protolca_CalculationSetup_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_protolca_CalculationSetup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_CalculationSetup_descriptor,
        new java.lang.String[] { "Type", "CalculationType", "ProductSystem", "ImpactMethod", "WithCosts", "NwSet", "AllocationMethod", "ParameterRedefs", "Amount", "Unit", "FlowProperty", });
    internal_static_protolca_Category_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_protolca_Category_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_Category_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "Category", "Tags", "Library", "ModelType", });
    internal_static_protolca_Currency_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_protolca_Currency_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_Currency_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "Category", "Tags", "Library", "Code", "ConversionFactor", "ReferenceCurrency", });
    internal_static_protolca_DqIndicator_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_protolca_DqIndicator_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_DqIndicator_descriptor,
        new java.lang.String[] { "Type", "Name", "Position", "Scores", });
    internal_static_protolca_DqScore_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_protolca_DqScore_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_DqScore_descriptor,
        new java.lang.String[] { "Type", "Position", "Label", "Description", "Uncertainty", });
    internal_static_protolca_DqSystem_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_protolca_DqSystem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_DqSystem_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "Category", "Tags", "Library", "HasUncertainties", "Source", "Indicators", });
    internal_static_protolca_Exchange_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_protolca_Exchange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_Exchange_descriptor,
        new java.lang.String[] { "Type", "InternalId", "AvoidedProduct", "Flow", "FlowProperty", "Input", "QuantitativeReference", "BaseUncertainty", "DefaultProvider", "Amount", "AmountFormula", "Unit", "DqEntry", "Uncertainty", "Description", });
    internal_static_protolca_Flow_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_protolca_Flow_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_Flow_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "Category", "Tags", "Library", "FlowType", "Cas", "Formula", "FlowProperties", "Location", });
    internal_static_protolca_FlowMap_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_protolca_FlowMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_FlowMap_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "Source", "Target", "Mappings", });
    internal_static_protolca_FlowMapEntry_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_protolca_FlowMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_FlowMapEntry_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "From", "To", "ConversionFactor", });
    internal_static_protolca_FlowMapRef_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_protolca_FlowMapRef_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_FlowMapRef_descriptor,
        new java.lang.String[] { "Type", "Flow", "FlowProperty", "Unit", });
    internal_static_protolca_FlowProperty_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_protolca_FlowProperty_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_FlowProperty_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "Category", "Tags", "Library", "FlowPropertyType", "UnitGroup", });
    internal_static_protolca_FlowPropertyFactor_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_protolca_FlowPropertyFactor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_FlowPropertyFactor_descriptor,
        new java.lang.String[] { "Type", "FlowProperty", "ConversionFactor", "ReferenceFlowProperty", });
    internal_static_protolca_FlowRef_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_protolca_FlowRef_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_FlowRef_descriptor,
        new java.lang.String[] { "RefUnit", "Location", "FlowType", });
    internal_static_protolca_FlowResult_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_protolca_FlowResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_FlowResult_descriptor,
        new java.lang.String[] { "Type", "Flow", "Input", "Value", });
    internal_static_protolca_ImpactCategory_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_protolca_ImpactCategory_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_ImpactCategory_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "Category", "Tags", "Library", "ReferenceUnitName", "ImpactFactors", });
    internal_static_protolca_ImpactCategoryRef_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_protolca_ImpactCategoryRef_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_ImpactCategoryRef_descriptor,
        new java.lang.String[] { "RefUnit", });
    internal_static_protolca_ImpactFactor_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_protolca_ImpactFactor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_ImpactFactor_descriptor,
        new java.lang.String[] { "Type", "Flow", "FlowProperty", "Unit", "Value", "Formula", "Uncertainty", });
    internal_static_protolca_ImpactMethod_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_protolca_ImpactMethod_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_ImpactMethod_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "Category", "Tags", "Library", "ImpactCategories", "Parameters", });
    internal_static_protolca_ImpactResult_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_protolca_ImpactResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_ImpactResult_descriptor,
        new java.lang.String[] { "Type", "ImpactCategory", "Value", });
    internal_static_protolca_Location_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_protolca_Location_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_Location_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "Category", "Tags", "Library", "Code", "Latitude", "Longitude", "Kml", });
    internal_static_protolca_NwFactor_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_protolca_NwFactor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_NwFactor_descriptor,
        new java.lang.String[] { "Type", "ImpactCategory", "NormalisationFactor", "WeightingFactor", });
    internal_static_protolca_NwSet_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_protolca_NwSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_NwSet_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "WeightedScoreUnit", "Factors", });
    internal_static_protolca_Parameter_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_protolca_Parameter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_Parameter_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "Category", "Tags", "Library", "ParameterScope", "InputParameter", "Value", "Formula", "Uncertainty", });
    internal_static_protolca_ParameterRedef_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_protolca_ParameterRedef_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_ParameterRedef_descriptor,
        new java.lang.String[] { "Type", "Name", "Value", "Context", });
    internal_static_protolca_Process_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_protolca_Process_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_Process_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "Category", "Tags", "Library", "DefaultAllocationMethod", "AllocationFactors", "Exchanges", "Location", "Parameters", "ProcessDocumentation", "ProcessType", "DqSystem", "ExchangeDqSystem", "SocialDqSystem", "DqEntry", });
    internal_static_protolca_ProcessDocumentation_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_protolca_ProcessDocumentation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_ProcessDocumentation_descriptor,
        new java.lang.String[] { "Type", "TimeDescription", "ValidUntil", "ValidFrom", "TechnologyDescription", "DataCollectionDescription", "CompletenessDescription", "DataSelectionDescription", "ReviewDetails", "DataTreatmentDescription", "InventoryMethodDescription", "ModelingConstantsDescription", "Reviewer", "SamplingDescription", "Sources", "RestrictionsDescription", "Copyright", "CreationDate", "DataDocumentor", "DataGenerator", "DataSetOwner", "IntendedApplication", "ProjectDescription", "Publication", "GeographyDescription", });
    internal_static_protolca_ProcessLink_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_protolca_ProcessLink_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_ProcessLink_descriptor,
        new java.lang.String[] { "Type", "Provider", "Flow", "Process", "Exchange", });
    internal_static_protolca_ProcessRef_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_protolca_ProcessRef_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_ProcessRef_descriptor,
        new java.lang.String[] { "Location", "ProcessType", });
    internal_static_protolca_ProductSystem_descriptor =
      getDescriptor().getMessageTypes().get(31);
    internal_static_protolca_ProductSystem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_ProductSystem_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "Category", "Tags", "Library", "Processes", "ReferenceProcess", "ReferenceExchange", "TargetAmount", "TargetUnit", "TargetFlowProperty", "ProcessLinks", });
    internal_static_protolca_Project_descriptor =
      getDescriptor().getMessageTypes().get(32);
    internal_static_protolca_Project_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_Project_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "Category", "Tags", "Library", "ImpactMethod", "NwSet", });
    internal_static_protolca_Ref_descriptor =
      getDescriptor().getMessageTypes().get(33);
    internal_static_protolca_Ref_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_Ref_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "CategoryPath", });
    internal_static_protolca_SimpleResult_descriptor =
      getDescriptor().getMessageTypes().get(34);
    internal_static_protolca_SimpleResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_SimpleResult_descriptor,
        new java.lang.String[] { "Type", "FlowResults", "ImpactResults", });
    internal_static_protolca_SocialIndicator_descriptor =
      getDescriptor().getMessageTypes().get(35);
    internal_static_protolca_SocialIndicator_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_SocialIndicator_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "Category", "Tags", "Library", "ActivityVariable", "ActivityQuantity", "ActivityUnit", "UnitOfMeasurement", "EvaluationScheme", });
    internal_static_protolca_Source_descriptor =
      getDescriptor().getMessageTypes().get(36);
    internal_static_protolca_Source_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_Source_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "Category", "Tags", "Library", "Url", "TextReference", "Year", "ExternalFile", });
    internal_static_protolca_Uncertainty_descriptor =
      getDescriptor().getMessageTypes().get(37);
    internal_static_protolca_Uncertainty_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_Uncertainty_descriptor,
        new java.lang.String[] { "Type", "DistributionType", "Mean", "MeanFormula", "GeomMean", "GeomMeanFormula", "Minimum", "MinimumFormula", "Sd", "SdFormula", "GeomSd", "GeomSdFormula", "Mode", "ModeFormula", "Maximum", "MaximumFormula", });
    internal_static_protolca_Unit_descriptor =
      getDescriptor().getMessageTypes().get(38);
    internal_static_protolca_Unit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_Unit_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "ConversionFactor", "ReferenceUnit", "Synonyms", });
    internal_static_protolca_UnitGroup_descriptor =
      getDescriptor().getMessageTypes().get(39);
    internal_static_protolca_UnitGroup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protolca_UnitGroup_descriptor,
        new java.lang.String[] { "Type", "Id", "Name", "Description", "Version", "LastChange", "Category", "Tags", "Library", "DefaultFlowProperty", "Units", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
